<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NAP</title>
  <subtitle>Next Application Platform</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nap-blog.artemisprojects.org/"/>
  <updated>2016-04-06T03:06:29.907Z</updated>
  <id>http://nap-blog.artemisprojects.org/</id>
  
  <author>
    <name>NAP Group</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hadoop, Hive, Tez 搭建笔记</title>
    <link href="http://nap-blog.artemisprojects.org/2016/03/15/hadoop_hive_tez/"/>
    <id>http://nap-blog.artemisprojects.org/2016/03/15/hadoop_hive_tez/</id>
    <published>2016-03-14T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.907Z</updated>
    
    <content type="html">&lt;p&gt;详细介绍了一个 Hadoop，Hive 和 Tez 集群的搭建过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Hadoop_Hive_Tez__u642D_u5EFA&quot;&gt;&lt;a href=&quot;#Hadoop_Hive_Tez__u642D_u5EFA&quot; class=&quot;headerlink&quot; title=&quot;Hadoop Hive Tez 搭建&quot;&gt;&lt;/a&gt;Hadoop Hive Tez 搭建 &lt;/h1&gt;&lt;p&gt; 集群 192.168.100.[205-220], 主节点 205, 其余为从节点，以用户 experiment 为例&lt;/p&gt;
&lt;h2 id=&quot;Hadoop&quot;&gt;&lt;a href=&quot;#Hadoop&quot; class=&quot;headerlink&quot; title=&quot;Hadoop&quot;&gt;&lt;/a&gt;Hadoop&lt;/h2&gt;&lt;h3 id=&quot;/etc/hosts&quot;&gt;&lt;a href=&quot;#/etc/hosts&quot; class=&quot;headerlink&quot; title=&quot;/etc/hosts&quot;&gt;&lt;/a&gt;/etc/hosts&lt;/h3&gt;&lt;p&gt;hadoop 是以主机名进行通信的，需要配置所有机器的 /etc/hosts&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.205&lt;/span&gt; slave205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.206&lt;/span&gt; slave206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.207&lt;/span&gt; slave207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.208&lt;/span&gt; slave208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.209&lt;/span&gt; slave209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.210&lt;/span&gt; slave210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.211&lt;/span&gt; slave211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.212&lt;/span&gt; slave212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.213&lt;/span&gt; slave213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.214&lt;/span&gt; slave214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.215&lt;/span&gt; slave215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.216&lt;/span&gt; slave216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.217&lt;/span&gt; slave217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.218&lt;/span&gt; slave218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.219&lt;/span&gt; slave219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.220&lt;/span&gt; slave220&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;ssh_u514D_u5BC6_u7801_u767B_u9646&quot;&gt;&lt;a href=&quot;#ssh_u514D_u5BC6_u7801_u767B_u9646&quot; class=&quot;headerlink&quot; title=&quot;ssh 免密码登陆&quot;&gt;&lt;/a&gt;ssh 免密码登陆&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat id_rsa.pub &lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;~&lt;span class=&quot;regexp&quot;&gt;/.ssh/authorized&lt;/span&gt;_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;jdk&quot;&gt;&lt;a href=&quot;#jdk&quot; class=&quot;headerlink&quot; title=&quot;jdk&quot;&gt;&lt;/a&gt;jdk&lt;/h3&gt;&lt;p&gt;openjdk 和 oracle-jdk 都行&lt;/p&gt;
&lt;h3 id=&quot;u4E0B_u8F7D_u5E76_u4FEE_u6539_u914D_u7F6E_u6587_u4EF6&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D_u5E76_u4FEE_u6539_u914D_u7F6E_u6587_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;下载并修改配置文件&quot;&gt;&lt;/a&gt;下载并修改配置文件&lt;/h3&gt;&lt;p&gt;slaves&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;slave206&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave220&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;core-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fs.&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;FS&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hdfs://slave205:&lt;span class=&quot;number&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hadoop.tmp.dir&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:/home/experiment/hadoop/tmp&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hdfs-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:/home/experiment/hadoop/name&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.data.dir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:/home/experiment/hadoop/data&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.secondary.http-address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:50090&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;yarn-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:8032&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.scheduler.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:8030&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.resource-tracker.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:8031&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.admin.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:8033&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.webapp.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:8088&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.aux-services&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce_shuffle&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.delete.debug-delay-sec&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1200&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.vmem-check-enabled&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mapred-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.framework.name&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:10020&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.webapp.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;slave205:19888&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u73AF_u5883_u53D8_u91CF&quot;&gt;&lt;a href=&quot;#u73AF_u5883_u53D8_u91CF&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt;环境变量&lt;/h3&gt;&lt;p&gt;vim ~/.bashrc&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HADOOP_HOME=/home/experiment/hadoop-&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JAVA_HOME=/usr/java/jdk1.&lt;span class=&quot;number&quot;&gt;8.0_73&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CLASSPATH=&lt;span class=&quot;variable&quot;&gt;$JAVA&lt;/span&gt;_HOME/lib:&lt;span class=&quot;variable&quot;&gt;$JAVA&lt;/span&gt;_HOME/jre/lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$JAVA&lt;/span&gt;_HOME/bin:&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$HADOOP&lt;/span&gt;_HOME/bin:&lt;span class=&quot;variable&quot;&gt;$HADOOP&lt;/span&gt;_HOME/sbin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HADOOP_COMMON_LIB_NATIVE_DIR=&lt;span class=&quot;variable&quot;&gt;$HADOOP&lt;/span&gt;_HOME/lib/native&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HADOOP_OPTS=&lt;span class=&quot;string&quot;&gt;&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JAVA_HOME CLASSPATH HADOOP_HOME PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;scp__u5230_u4ECE_u8282_u70B9_u5BF9_u5E94_u7684_u76EE_u5F55&quot;&gt;&lt;a href=&quot;#scp__u5230_u4ECE_u8282_u70B9_u5BF9_u5E94_u7684_u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;scp 到从节点对应的目录&quot;&gt;&lt;/a&gt;scp 到从节点对应的目录 &lt;/h3&gt;&lt;h3 id=&quot;u542F_u52A8&quot;&gt;&lt;a href=&quot;#u542F_u52A8&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt; 启动&lt;/h3&gt;&lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hdfs namenode -&lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;start&lt;/span&gt;-dfs.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;start&lt;/span&gt;-yarn.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Hive&quot;&gt;&lt;a href=&quot;#Hive&quot; class=&quot;headerlink&quot; title=&quot;Hive&quot;&gt;&lt;/a&gt;Hive&lt;/h2&gt;&lt;h3 id=&quot;hive_u4E0B_u8F7D_u89E3_u538B&quot;&gt;&lt;a href=&quot;#hive_u4E0B_u8F7D_u89E3_u538B&quot; class=&quot;headerlink&quot; title=&quot;hive 下载解压&quot;&gt;&lt;/a&gt;hive 下载解压 &lt;/h3&gt;&lt;h3 id=&quot;u73AF_u5883_u53D8_u91CF-1&quot;&gt;&lt;a href=&quot;#u73AF_u5883_u53D8_u91CF-1&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt; 环境变量&lt;/h3&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HIVE_HOME=/home/experiment/apache-hive-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$HIVE&lt;/span&gt;_HOME/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HADOOP_USER_CLASSPATH_FIRST=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HIVE_HOME PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;mysql_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#mysql_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;mysql 安装&quot;&gt;&lt;/a&gt;mysql 安装&lt;/h3&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 下载源码解压，然后执行下面的命令以生成 Makefile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;constant&quot;&gt;DCMAKE_INSTALL_PREFIX&lt;/span&gt;=&lt;span class=&quot;regexp&quot;&gt;/home/experiment&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DMYSQL_UNIX_ADDR=/home&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/experiment/mysql&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql.sock \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DDEFAULT_CHARSET=utf8 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DDEFAULT_COLLATION=utf8_general_ci \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DWITH_INNOBASE_STORAGE_ENGINE=1 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DWITH_ARCHIVE_STORAGE_ENGINE=1 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DMYSQL_home/experiment&lt;/span&gt;DIR=&lt;span class=&quot;regexp&quot;&gt;/home/experiment&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql/home&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/experiment \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DMYSQL_TCP_PORT=3306 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-DENABLE_DOWNLOADS=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果报错找不到 CMakeCache.txt，则需要安装 ncurses-devel，安装后进行编译&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s /home&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/experiment/mysql&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/lib/libmysqlclient&lt;/span&gt;.so.&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt; /usr/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;libmysqlclient&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;so&lt;/span&gt;.18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s /home/experiment/mysql.sock /tmp/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp /home/experiment/mysql/support-files/my-default.cnf /etc/my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp /home/experiment/mysql/support-files/mysql.server /etc/init.d/mysqld&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +x /etc/init.d/mysqld&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s /home/experiment/mysql/bin/mysql /usr/bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;/home/experiment&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql/scripts&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql_install_db --user=experiment --defaults-file=/etc&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/my.cnf --basedir=/home&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/experiment/mysql&lt;/span&gt; --datadir=&lt;span class=&quot;regexp&quot;&gt;/home/experiment&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/mysql/data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service mysqld start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -uroot -h127.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; &lt;span class=&quot;constant&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;PASSWORD&lt;/span&gt; = &lt;span class=&quot;constant&quot;&gt;PASSWORD&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;123456&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hive&#39;&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hive&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;ON&lt;/span&gt; *.* &lt;span class=&quot;constant&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hive&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;slave205&#39;&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;OPTION&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flush privileges;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h hadoop-master -uhive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;set password = password(&lt;span class=&quot;string&quot;&gt;&#39;hive&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create database hive;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alter database hive character set latin1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4FEE_u6539hive_u914D_u7F6E_u6587_u4EF6&quot;&gt;&lt;a href=&quot;#u4FEE_u6539hive_u914D_u7F6E_u6587_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;修改 hive 配置文件&quot;&gt;&lt;/a&gt;修改 hive 配置文件 &lt;/h3&gt;&lt;p&gt; 先 cp hive-default.xml.template hive-default.xml&lt;/p&gt;
&lt;p&gt;再 vim hive-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;javax.jdo.option.ConnectionURL&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;jdbc:mysql://slave205:&lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;/hive?createDatabaseIfNotExist=true&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;JDBC connect string &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; a JDBC metastore&lt;span class=&quot;variable&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;javax.jdo.option.ConnectionDriverName&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Driver class name &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; a JDBC metastore&lt;span class=&quot;variable&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;javax.jdo.option.ConnectionUserName&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hive&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;username &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; use against metastore database&lt;span class=&quot;variable&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;javax.jdo.option.ConnectionPassword&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hive&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;password &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; use against metastore database&lt;span class=&quot;variable&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4E0B_u8F7Djdbc&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7Djdbc&quot; class=&quot;headerlink&quot; title=&quot;下载 jdbc&quot;&gt;&lt;/a&gt;下载 jdbc&lt;/h3&gt;&lt;p&gt;cp mysql-connector-java-5.1.33-bin.jar apache-hive-1.2.1-bin/lib/&lt;/p&gt;
&lt;h3 id=&quot;u8BA9hive_u652F_u6301update&quot;&gt;&lt;a href=&quot;#u8BA9hive_u652F_u6301update&quot; class=&quot;headerlink&quot; title=&quot;让 hive 支持 update&quot;&gt;&lt;/a&gt;让 hive 支持 update&lt;/h3&gt;&lt;p&gt;修改 hive-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.support.concurrency&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.enforce.bucketing&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.exec.dynamic.partition.mode&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;nonstrict&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.txn.manager&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;org.apache.hadoop.hive.ql.lockmgr.DbTxnManager&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.compactor.initiator.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hive.compactor.worker.threads&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u542F_u52A8hive_metastore_u548Chiveserver2&quot;&gt;&lt;a href=&quot;#u542F_u52A8hive_metastore_u548Chiveserver2&quot; class=&quot;headerlink&quot; title=&quot;启动 hive metastore 和 hiveserver2&quot;&gt;&lt;/a&gt;启动 hive metastore 和 hiveserver2&lt;/h3&gt;&lt;p&gt;hive metastore 不启动也可以使用 hive，metastore 的作用是给 hive 的客户端使用&lt;/p&gt;
&lt;p&gt;hiveserver2 是 hive 的 thrift 服务器可以让远程 java、python 等客户端调用 hive 的 API，需要在 hive-site.xml 中修改 hive.server2.thrift.bind.host 为 slave205，默认是 localhost&lt;/p&gt;
&lt;h2 id=&quot;Tez&quot;&gt;&lt;a href=&quot;#Tez&quot; class=&quot;headerlink&quot; title=&quot;Tez&quot;&gt;&lt;/a&gt;Tez&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://tez.apache.org/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方安装指南&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7F16_u8BD1&quot;&gt;&lt;a href=&quot;#u7F16_u8BD1&quot; class=&quot;headerlink&quot; title=&quot;编译&quot;&gt;&lt;/a&gt;编译 &lt;/h3&gt;&lt;p&gt; 下载 tez 源码解压，修改 pom.xml 中的 hadoop.version 为具体的 hadoop 版本号&lt;/p&gt;
&lt;p&gt;编译&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn clean &lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; -DskipTests=&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; -Dmaven.javadoc.skip=&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译需要 jdk6+，maven3+ 和 protocol buffers 2.5.0，编译期间可能会遇到下载失败或者 ssl 超时，多编译几次应该可以解决。其它常见问题参考&lt;a href=&quot;https://cwiki.apache.org/confluence/display/TEZ/Build+errors+and+solutions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u73AF_u5883_u53D8_u91CF-2&quot;&gt;&lt;a href=&quot;#u73AF_u5883_u53D8_u91CF-2&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt;环境变量&lt;/h3&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;constant&quot;&gt;TEZ_JARS&lt;/span&gt;=&lt;span class=&quot;regexp&quot;&gt;/home/experiment&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/tez-0.8.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export TEZ_CONF_DIR=/home&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/experiment/hadoop&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;/etc/hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &lt;span class=&quot;constant&quot;&gt;HADOOP_CLASSPATH&lt;/span&gt;=&lt;span class=&quot;variable&quot;&gt;$HADOOP_CLASSPATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&quot;constant&quot;&gt;TEZ_CONF_DIR&lt;/span&gt;&amp;#125;:&lt;span class=&quot;variable&quot;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&quot;constant&quot;&gt;TEZ_JARS&lt;/span&gt;&amp;#125;/*:&lt;span class=&quot;variable&quot;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&quot;constant&quot;&gt;TEZ_JARS&lt;/span&gt;&amp;#125;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u653E_u7F6E_u7F16_u8BD1_u597D_u7684tez-x-y-z-tar-gz&quot;&gt;&lt;a href=&quot;#u653E_u7F6E_u7F16_u8BD1_u597D_u7684tez-x-y-z-tar-gz&quot; class=&quot;headerlink&quot; title=&quot;放置编译好的 tez-x.y.z.tar.gz&quot;&gt;&lt;/a&gt;放置编译好的 tez-x.y.z.tar.gz&lt;/h3&gt;&lt;p&gt;位于 tez-dist/target 目录下&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hadoop dfs -mkdir /apps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hadoop dfs -copyFromLocal tez-x&lt;span class=&quot;class&quot;&gt;.y&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.z&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.gz&lt;/span&gt; /apps/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4FEE_u6539tez-site-xml&quot;&gt;&lt;a href=&quot;#u4FEE_u6539tez-site-xml&quot; class=&quot;headerlink&quot; title=&quot;修改 tez-site.xml&quot;&gt;&lt;/a&gt;修改 tez-site.xml&lt;/h3&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;tez.lib.uris&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;$&amp;#123;fs.&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;FS&amp;#125;/apps/tez-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.tar.gz&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;tez.use.cluster.hadoop-libs&lt;span class=&quot;variable&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;false&lt;span class=&quot;variable&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5728hive_u4E2D_u4F7F_u7528tez&quot;&gt;&lt;a href=&quot;#u5728hive_u4E2D_u4F7F_u7528tez&quot; class=&quot;headerlink&quot; title=&quot;在 hive 中使用 tez&quot;&gt;&lt;/a&gt;在 hive 中使用 tez&lt;/h3&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hive &amp;gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; hive.execution.engine=tez;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;详细介绍了一个Hadoop，Hive和Tez集群的搭建过程。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://nap-blog.artemisprojects.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Hive" scheme="http://nap-blog.artemisprojects.org/tags/Hive/"/>
    
      <category term="Tez" scheme="http://nap-blog.artemisprojects.org/tags/Tez/"/>
    
      <category term="hadoop" scheme="http://nap-blog.artemisprojects.org/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>NAP 使用手册</title>
    <link href="http://nap-blog.artemisprojects.org/2016/01/10/nap-doc/"/>
    <id>http://nap-blog.artemisprojects.org/2016/01/10/nap-doc/</id>
    <published>2016-01-10T14:00:03.000Z</published>
    <updated>2016-04-06T03:06:29.908Z</updated>
    
    <content type="html">&lt;p&gt;本篇为 NAP 平台的使用手册，详细介绍了 NAP 的使用细节及操作截图。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u7528_u6237_u767B_u5F55&quot;&gt;&lt;a href=&quot;#u7528_u6237_u767B_u5F55&quot; class=&quot;headerlink&quot; title=&quot;用户登录&quot;&gt;&lt;/a&gt;用户登录 &lt;/h2&gt;&lt;p&gt; 使用浏览器打开 &lt;strong&gt;NAP 平台&lt;/strong&gt;(&lt;a href=&quot;http://nap.artemisprojects.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nap.artemisprojects.org/&lt;/a&gt;) , 显示登录界面。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/login.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;NAP 平台暂时还不支持开放注册，需要注册使用可联系开发人员，之后用给定的用户名密码登录即可。&lt;br&gt; 登录界面中勾选&lt;code&gt;Remember me&lt;/code&gt;, 下次打开 NAP 平台可以直接进入控制界面，无需重复登录。&lt;/p&gt;
&lt;p&gt;登录成功即进入桌面形式的控制界面。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/desktop.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u521B_u5EFA_u9879_u76EE&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u9879_u76EE&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目 &lt;/h2&gt;&lt;p&gt; 打开桌面上 &lt;code&gt;Create Project&lt;/code&gt; 图标，弹出窗口提示用户输入项目名称和项目 url。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/create.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;输入项目名称和 url 后，点击 &lt;code&gt;create&lt;/code&gt; 创建该项目，创建需要一小段时间，创建成功会弹出消息提示项目创建成功。需要注意项目名称不能包含 &lt;strong&gt;‘-‘&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;项目具体配置方法可见桌面上 &lt;code&gt;Readme&lt;/code&gt; 中的教程，其中包含了详细的示例。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/readme.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9879_u76EE_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u9879_u76EE_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;项目管理&quot;&gt;&lt;/a&gt;项目管理 &lt;/h2&gt;&lt;p&gt; 创建成功的项目可以通过项目列表进行查看和管理，双击条目或点击最前面的 &lt;strong&gt;‘+’&lt;/strong&gt; 可以查看该项目的服务节点。通过列表中的按钮可以对项目进行管理。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/list.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-__u67E5_u770B_u670D_u52A1_u8282_u70B9_u65E5_u5FD7&quot;&gt;&lt;a href=&quot;#1-__u67E5_u770B_u670D_u52A1_u8282_u70B9_u65E5_u5FD7&quot; class=&quot;headerlink&quot; title=&quot;1. 查看服务节点日志&quot;&gt;&lt;/a&gt;1. 查看服务节点日志 &lt;/h3&gt;&lt;p&gt; 点击列表中相应服务节点的 &lt;code&gt;logs&lt;/code&gt; 按钮，就会弹出该服务节点的日志信息。&lt;/p&gt;
&lt;h3 id=&quot;2-__u547D_u4EE4_u884C_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#2-__u547D_u4EE4_u884C_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;2. 命令行工具&quot;&gt;&lt;/a&gt;2. 命令行工具 &lt;/h3&gt;&lt;p&gt; 对每个节点都有一个命令行工具，点击 &lt;code&gt;shell&lt;/code&gt; 按钮即可弹出，用户名和密码都是 admin。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/shell.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-__u5220_u9664_u9879_u76EE&quot;&gt;&lt;a href=&quot;#3-__u5220_u9664_u9879_u76EE&quot; class=&quot;headerlink&quot; title=&quot;3. 删除项目&quot;&gt;&lt;/a&gt;3. 删除项目 &lt;/h3&gt;&lt;p&gt; 如果想删除某个项目，可以点击该项目对应的 &lt;code&gt;destroy&lt;/code&gt; 按钮，系统会提示是否确认删除，如果确认删除就可删除当前项目，否则将取消该操作。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/destroy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6587_u4EF6_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u6587_u4EF6_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理 &lt;/h2&gt;&lt;p&gt;NAP 平台包含一个文件管理系统&lt;code&gt;File Browser&lt;/code&gt;，每个项目在创建时自动生成一个文件夹，项目的&lt;code&gt;git&lt;/code&gt; 文件会 &lt;code&gt;clone&lt;/code&gt; 到这个文件夹中，当该项目被删除时会同时删除该文件夹。&lt;br&gt;这个文件夹是一个分布式文件系统上的共享目录，比直接在 &lt;code&gt;docker&lt;/code&gt; 内存储文件的可靠性高。每个容器启动后会自动挂载到 &lt;code&gt;/nap&lt;/code&gt; 目录下。&lt;br&gt;文件管理系统分成两部分，左边是文件的目录树，右边的窗口既可以用来现实当前路径下的文件，也可以现实具体的文件内容，下面对其进行详细的介绍。&lt;/p&gt;
&lt;h3 id=&quot;1-__u6587_u4EF6_u64CD_u4F5C&quot;&gt;&lt;a href=&quot;#1-__u6587_u4EF6_u64CD_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;1. 文件操作&quot;&gt;&lt;/a&gt;1. 文件操作 &lt;/h3&gt;&lt;p&gt; 文件管理系统可以完成对文件的新建、重命名、复制、粘贴、移动、删除操作。通过在左边的目录树中右键相应的节点，弹出菜单选择相应的操作，注意新建等操作只能在文件夹上进行，新建出的文件在该文件夹下，文件的移动操作是通过对文件夹或文件的托拽实现的。&lt;br&gt;&lt;img src=&quot;/images/nap-doc/folder.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-__u6587_u4EF6_u7F16_u8F91&quot;&gt;&lt;a href=&quot;#2-__u6587_u4EF6_u7F16_u8F91&quot; class=&quot;headerlink&quot; title=&quot;2. 文件编辑&quot;&gt;&lt;/a&gt;2. 文件编辑 &lt;/h3&gt;&lt;p&gt; 在目录树中点击一个文件或在右边文件窗口中双击可以打开一个文件，文件会显示在右边的窗口中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统会自动识别代码的类型，对其进行高亮处理，如果无法识别，则可以通过窗口左上角的选择框选择相应的代码类型。&lt;/li&gt;
&lt;li&gt;一旦修改文件框中的文件，右上角的保存按钮会由灰色不可点击变成可以点，点击保存按钮修改后的文件将被保存到服务器。&lt;/li&gt;
&lt;li&gt;当你切换文件或关闭文件时，如果文件被修改过，系统会提示你是否保存修改的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/nap-doc/file.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6CE8_u9500_u767B_u5F55&quot;&gt;&lt;a href=&quot;#u6CE8_u9500_u767B_u5F55&quot; class=&quot;headerlink&quot; title=&quot;注销登录&quot;&gt;&lt;/a&gt;注销登录 &lt;/h2&gt;&lt;p&gt; 点击左下角 &lt;code&gt;Start&lt;/code&gt; 按钮，弹出的开始菜单中点击 &lt;code&gt;Logout&lt;/code&gt; 按钮即完成注销操作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本篇为NAP平台的使用手册，详细介绍了NAP的使用细节及操作截图。&lt;/p&gt;
    
    </summary>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/categories/nap/"/>
    
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/tags/nap/"/>
    
  </entry>
  
  <entry>
    <title>我们的 2015</title>
    <link href="http://nap-blog.artemisprojects.org/2015/12/30/photos/"/>
    <id>http://nap-blog.artemisprojects.org/2015/12/30/photos/</id>
    <published>2015-12-29T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;p&gt; 有图有真相;-)&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/images/photos/12-29.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/photos/12-24.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/photos/08-03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有图有真相;-)&lt;/p&gt;
    
    </summary>
    
      <category term="未分类" scheme="http://nap-blog.artemisprojects.org/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Hotswap Agent 学习笔记</title>
    <link href="http://nap-blog.artemisprojects.org/2015/12/18/hotSwapAgent-not/"/>
    <id>http://nap-blog.artemisprojects.org/2015/12/18/hotSwapAgent-not/</id>
    <published>2015-12-17T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.907Z</updated>
    
    <content type="html">&lt;p&gt;热部署是在不重启 Java 虚拟机的前提下，能自动侦测到 class 文件的变化，更新运行时 class 的行为。&lt;a href=&quot;https://github.com/HotswapProjects/HotswapAgent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hotswap Agent&lt;/a&gt;是一个支持热部署的开源项目，该项目的主要目的是为了避免低效的 change-&amp;gt;restart + wait-&amp;gt;check 开发生命周期。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Hotswap_Agent__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#Hotswap_Agent__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;Hotswap Agent 介绍&quot;&gt;&lt;/a&gt;Hotswap Agent 介绍 &lt;/h2&gt;&lt;p&gt; 热部署是在不重启 Java 虚拟机的前提下，能自动侦测到 class 文件的变化，更新运行时 class 的行为。&lt;a href=&quot;https://github.com/HotswapProjects/HotswapAgent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hotswap Agent&lt;/a&gt;是一个支持热部署的开源项目，该项目的主要目的是为了避免低效的 change-&amp;gt;restart + wait-&amp;gt;check 开发生命周期。Hotswap Agent 支持所有主要的框架， 比如：Hibernate、Spring、Jetty、ZooKeeper 等。Hotswap Agent 拥有如下特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;增强的 Java HotSwap&lt;/strong&gt; - 支持改变方法体，添加 / 重命名方法或属性。唯一不支持的操作是层次结构的变化（改变父类或删除接口）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动配置&lt;/strong&gt; - 所有的本地类和已知的正在运行的 Java 应用程序的资源可以自动监控并重新加载（不包括在 Jar 文件里的类）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额外的类路径&lt;/strong&gt; - 需要改变存在依赖的 jar 包中的类，使用 extraClasspath 属性，添加任何目录作为类路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更改后重新加载资源&lt;/strong&gt; - 使用 watchResources 属性添加任何目录来监视资源的变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;框架的支持&lt;/strong&gt; - 通过 plugin system，Hotswap Agent 支持许多框架。并且新的 plugin 可以很容易地添加。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速&lt;/strong&gt; - 只有 plugin 被初始化消耗资源，其余时间它不消耗任何资源或减慢应用程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hotswap_Agent__u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Hotswap_Agent__u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Hotswap Agent 安装&quot;&gt;&lt;/a&gt;Hotswap Agent 安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载最新的&lt;a href=&quot;https://github.com/dcevm/dcevm/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DCEVM Java Patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;运行下载的 jar 包(e.g. java -jar XXX-installer-light.jar)&lt;/li&gt;
&lt;li&gt;选择本地 JDK 的安装路径。&lt;/li&gt;
&lt;li&gt;下载最新的&lt;a href=&quot;https://github.com/HotswapProjects/HotswapAgent/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hotswap Agent jar&lt;/a&gt;，将它放在任意目录，比如：/home&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hotswap_Agent__u4F7F_u7528&quot;&gt;&lt;a href=&quot;#Hotswap_Agent__u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;Hotswap Agent 使用&quot;&gt;&lt;/a&gt;Hotswap Agent 使用 &lt;/h2&gt;&lt;p&gt; 在运行 java 应用程序时，添加如下参数：&lt;code&gt;-XXaltjvm=dcevm -javaagent:PATH_TO_AGENT/hotswap-agent.jar=autoHotswap=true&lt;/code&gt;&lt;br&gt;其中，参数 &lt;code&gt;autoHotswap&lt;/code&gt; 指定当应用程序的某个 class 变化时，自动动态加载。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;热部署是在不重启Java虚拟机的前提下，能自动侦测到class文件的变化，更新运行时class的行为。&lt;a href=&quot;https://github.com/HotswapProjects/HotswapAgent&quot;&gt;Hotswap Agent&lt;/a&gt;是一个支持热部署的开源项目，该项目的主要目的是为了避免低效的change-&amp;gt;restart + wait-&amp;gt;check开发生命周期。&lt;/p&gt;
    
    </summary>
    
      <category term="TVDCR" scheme="http://nap-blog.artemisprojects.org/categories/TVDCR/"/>
    
    
      <category term="dynamic reconfiguration" scheme="http://nap-blog.artemisprojects.org/tags/dynamic-reconfiguration/"/>
    
      <category term="spring" scheme="http://nap-blog.artemisprojects.org/tags/spring/"/>
    
      <category term="transacion" scheme="http://nap-blog.artemisprojects.org/tags/transacion/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper 学习笔记</title>
    <link href="http://nap-blog.artemisprojects.org/2015/12/10/zookeeper-note/"/>
    <id>http://nap-blog.artemisprojects.org/2015/12/10/zookeeper-note/</id>
    <published>2015-12-09T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;p&gt;ZooKeeper 是一个典型的分布式数据一致性的解决方案，分布式应用可以基于它实现诸如数据发布／订阅、负责均衡、命名服务、分布式协调／通知、&lt;br&gt;集群管理等功能。 ZooKeeper 可以保证如下分布式一致性特征。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;ZooKeeper_u662F_u4EC0_u4E48&quot;&gt;&lt;a href=&quot;#ZooKeeper_u662F_u4EC0_u4E48&quot; class=&quot;headerlink&quot; title=&quot;ZooKeeper 是什么&quot;&gt;&lt;/a&gt;ZooKeeper 是什么 &lt;/h2&gt;&lt;p&gt;ZooKeeper 是一个典型的分布式数据一致性的解决方案，分布式应用可以基于它实现诸如数据发布／订阅、负责均衡、命名服务、分布式协调／通知、&lt;br&gt; 集群管理等功能。 ZooKeeper 可以保证如下分布式一致性特征。&lt;/p&gt;
&lt;h3 id=&quot;u987A_u5E8F_u4E00_u81F4_u6027&quot;&gt;&lt;a href=&quot;#u987A_u5E8F_u4E00_u81F4_u6027&quot; class=&quot;headerlink&quot; title=&quot;顺序一致性&quot;&gt;&lt;/a&gt;顺序一致性 &lt;/h3&gt;&lt;p&gt; 从同一个客户端发起的事务请求，最终将会严格地按照其发起顺序被应用到 ZooKeeper 中去&lt;/p&gt;
&lt;h3 id=&quot;u539F_u5B50_u6027&quot;&gt;&lt;a href=&quot;#u539F_u5B50_u6027&quot; class=&quot;headerlink&quot; title=&quot;原子性&quot;&gt;&lt;/a&gt;原子性 &lt;/h3&gt;&lt;p&gt; 所有事务请求的处理结果在整个集群中所有机器上的应用情况是一致的，要么整个集群所有机器都成功应用了某一个事务，要么都没有应用&lt;/p&gt;
&lt;h3 id=&quot;u5355_u4E00_u89C6_u56FE&quot;&gt;&lt;a href=&quot;#u5355_u4E00_u89C6_u56FE&quot; class=&quot;headerlink&quot; title=&quot;单一视图&quot;&gt;&lt;/a&gt;单一视图 &lt;/h3&gt;&lt;p&gt; 无论客户端连接的是哪个 ZooKeeper 服务器，其看到的服务端数据模型都是一致的。&lt;/p&gt;
&lt;h3 id=&quot;u53EF_u9760_u6027&quot;&gt;&lt;a href=&quot;#u53EF_u9760_u6027&quot; class=&quot;headerlink&quot; title=&quot;可靠性&quot;&gt;&lt;/a&gt;可靠性 &lt;/h3&gt;&lt;p&gt; 一旦服务端成功地应用了一个事务，并完成对客户端的响应，那么该事务所引起的服务端状态变更将会被一直保留下来，除非有另一个事务又对其进行了变更。&lt;/p&gt;
&lt;h3 id=&quot;u5B9E_u65F6_u6027&quot;&gt;&lt;a href=&quot;#u5B9E_u65F6_u6027&quot; class=&quot;headerlink&quot; title=&quot;实时性&quot;&gt;&lt;/a&gt;实时性&lt;/h3&gt;&lt;p&gt;ZooKeeper 仅仅保证在一定的时间内，客户端最终一定能够从服务器端上读取到最新的数据状态。&lt;/p&gt;
&lt;h2 id=&quot;ZooKeeper_u63D0_u4F9B_u4E86_u4EC0_u4E48&quot;&gt;&lt;a href=&quot;#ZooKeeper_u63D0_u4F9B_u4E86_u4EC0_u4E48&quot; class=&quot;headerlink&quot; title=&quot;ZooKeeper 提供了什么&quot;&gt;&lt;/a&gt;ZooKeeper 提供了什么 &lt;/h2&gt;&lt;p&gt; 简单的说，ZooKeeper= 文件系统 + 通知机制。&lt;/p&gt;
&lt;h3 id=&quot;u6587_u4EF6_u7CFB_u7EDF&quot;&gt;&lt;a href=&quot;#u6587_u4EF6_u7CFB_u7EDF&quot; class=&quot;headerlink&quot; title=&quot;文件系统&quot;&gt;&lt;/a&gt;文件系统&lt;/h3&gt;&lt;p&gt;ZooKeeper 维护一个类似文件系统的数据结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/zookeeper-file-structure.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;每个子目录项如 NameService 都被称作为 znode，和文件系统一样，我们能够自由的增加、删除 znode，在一个 znode 下增加、删除子 znode，唯一的不同在于 znode 是可以存储数据的。有四种类型的 znode：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PERSISTENT- 持久化目录节点 &lt;br&gt; 客户端与 zookeeper 断开连接后，该节点依旧存在&lt;/li&gt;
&lt;li&gt;PERSISTENT_SEQUENTIAL- 持久化顺序编号目录节点 &lt;br&gt; 客户端与 zookeeper 断开连接后，该节点依旧存在，只是 Zookeeper 给该节点名称进行顺序编号&lt;/li&gt;
&lt;li&gt;EPHEMERAL- 临时目录节。客户端与 zookeeper 断开连接后，该节点被删除&lt;br&gt;4、EPHEMERAL_SEQUENTIAL- 临时顺序编号目录节点。客户端与 zookeeper 断开连接后，该节点被删除，只是 Zookeeper 给该节点名称进行顺序编号&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u901A_u77E5_u673A_u5236&quot;&gt;&lt;a href=&quot;#u901A_u77E5_u673A_u5236&quot; class=&quot;headerlink&quot; title=&quot;通知机制&quot;&gt;&lt;/a&gt;通知机制 &lt;/h3&gt;&lt;p&gt; 客户端注册监听它关心的目录节点，当目录节点发生变化（数据改变、被删除、子目录节点增加删除）时，ZooKeeper 会通知客户端。&lt;/p&gt;
&lt;h2 id=&quot;u4FDD_u8BC1_u5206_u5E03_u5F0F_u6570_u636E_u539F_u5B50_u6027_u64CD_u4F5C&quot;&gt;&lt;a href=&quot;#u4FDD_u8BC1_u5206_u5E03_u5F0F_u6570_u636E_u539F_u5B50_u6027_u64CD_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;保证分布式数据原子性操作&quot;&gt;&lt;/a&gt;保证分布式数据原子性操作&lt;/h2&gt;&lt;p&gt;ZooKeeper 中为数据节点（znode）引入了版本的概念，每个数据节点都具有三种类型的版本信息，说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;版本类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;version&lt;/td&gt;
&lt;td&gt;当前数据节点数据内容的版本号 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cversion&lt;/td&gt;
&lt;td&gt;当前数据节点子节点的版本号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aversion&lt;/td&gt;
&lt;td&gt;当前数据节点 ACL 变更版本号&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下文以其中的 version 版本类型为例说明。在一个数据节点 &lt;code&gt;/zk&lt;/code&gt; 被创建完毕之后，节点的 version 值是 0，表示的含义是“当前节点自创建以后，被更新过 0 次”。如果现在对该节点的数据内容进行更新操作，则 version 的值变为 1。需要注意的是，即使前后两次变更并没有似的数据内容的值发生变化，version 的值依然会变更。&lt;/p&gt;
&lt;p&gt;ZooKeeper 引入 version 的作用，主要是实现乐观锁，保证数据原子性操作。乐观锁把控制的事务分成三个阶段：数据读取、写入校验、数据写入，其中写入校验阶段是整个乐观锁控制的关键所在。如何进行写入校验呢？ZooKeeper 采用的是 JDK 中最典型的乐观锁实现——&lt;a href=&quot;https://en.wikipedia.org/wiki/Compare-and-swap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CAS(Compare and Swap)&lt;/a&gt;。简单的讲就是：对于值 V，每次更新前都会比对其值是否是预期值 A，只有符合预期，才会将 V 原子化地更新到新值 B，其中是否符合预期便是乐观锁中的“写入校验”阶段。&lt;/p&gt;
&lt;p&gt;下面以一个更新数据实例，演示如何用 version 保证一致性。假如一个客户端试图进行更新操作，它会携带上次获取到的 version 值进行更新。而如果在这段时间内，ZooKeeper 服务器上该节点的数据已经被其他客户端更新了，那么数据版本一定已发生了变化，因此肯定与客户端携带的 version 无法匹配，于是便无法更新成功。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.CreateMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.KeeperException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.WatchedEvent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.EventType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.KeeperState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooDefs.Ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooKeeper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.data.Stat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZKVersionSample&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; CountDownLatch connectedSemaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ZooKeeper zk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String path = &lt;span class=&quot;string&quot;&gt;&quot;/zk&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        zk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZooKeeper(&lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZKVersionSample());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connectedSemaphore.await();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        zk.create(path, &lt;span class=&quot;string&quot;&gt;&quot;123&quot;&lt;/span&gt;.getBytes(), Ids.OPEN_ACL_UNSAFE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CreateMode.EPHEMERAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        zk.getData(path, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Stat stat = zk.setData(path, &lt;span class=&quot;string&quot;&gt;&quot;456&quot;&lt;/span&gt;.getBytes(), -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(stat.getCzxid() + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt; + stat.getMzxid() + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + stat.getVersion());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Stat stat2 = zk.setData(path, &lt;span class=&quot;string&quot;&gt;&quot;456&quot;&lt;/span&gt;.getBytes(), stat.getVersion());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(stat2.getCzxid() + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt; + stat2.getMzxid() + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + stat2.getVersion());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            zk.setData(path, &lt;span class=&quot;string&quot;&gt;&quot;456&quot;&lt;/span&gt;.getBytes(), stat.getVersion());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error:&quot;&lt;/span&gt; + e.code() + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WatchedEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (KeeperState.SyncConnected == event.getState()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (EventType.None == event.getType() &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; == event.getPath())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                connectedSemaphore.countDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: BADVERSION,KeeperErrorCode = BadVersion &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; /zk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的示例程序中，进行了三次更新操作，分别使用了不同的 version。在第一次更新操作中，使用的版本是“－1”，并且更新成功。在 ZooKeeper 中，数据版本都是从 0 开始计数。如果客户端传入的版本参数是“－1”，就是告诉 ZooKeeper 服务端，客户端需要基于数据的最新版本进行更新操作。&lt;/p&gt;
&lt;p&gt;在第一次更新操作成功后，ZooKeeper 服务端回返回给客户端一个数据节点的节点状态信息对象：stat。在第二次更新操作中，我们在接口中传入了这个版本号，此时的数据版本变更为“2”。&lt;/p&gt;
&lt;p&gt;在第三次操作的时候，程序依然使用了之前的版本“1”进行更新操作，于是更新失败了。&lt;/p&gt;
&lt;h2 id=&quot;Java_u5BA2_u6237_u7AEFAPI_u4F7F_u7528&quot;&gt;&lt;a href=&quot;#Java_u5BA2_u6237_u7AEFAPI_u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;Java 客户端 API 使用&quot;&gt;&lt;/a&gt;Java 客户端 API 使用&lt;/h2&gt;&lt;p&gt;ZooKeeper 作为一个分布式服务框架，主要用来解决分布式数据一致性问题，它提供了简单的分布式原语，并且对多种变种语言提供了 API。下面只介绍 ZooKeeper 的 Java 客户端 API 使用方式&lt;/p&gt;
&lt;h3 id=&quot;u521B_u5EFA_u4F1A_u8BDD&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u4F1A_u8BDD&quot; class=&quot;headerlink&quot; title=&quot;创建会话&quot;&gt;&lt;/a&gt;创建会话 &lt;/h3&gt;&lt;p&gt; 客户端可以通过创建一个 ZooKeeper 实例来连接 ZooKeeper 服务器。ZooKeeper 的四种构造方法如下。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ZooKeeper(String connectString, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionTimeout, Watcher watcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZooKeeper(String connectString, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionTimeout, Watcher watcher, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; canBeReadOnly);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZooKeeper(String connectString, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionTimeout, Watcher watcher, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sessionId, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] sessionPasswd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZooKeeper(String connectString, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionTimeout, Watcher watcher, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sessionId, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] sessionPasswd, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; canBeReadOnly);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下是 ZooKeeper 构造方法参数说明&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;connectString&lt;/td&gt;
&lt;td&gt;指 ZooKeeper 服务器列表，由 host:port 字符串组成。也可以在 connectString 中设置客户端连接上 ZooKeeper 后的根目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sessionTimeout&lt;/td&gt;
&lt;td&gt;指会话的超时时间，单位毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;watcher&lt;/td&gt;
&lt;td&gt;事件通知器，可以为 null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canBeReadOnly&lt;/td&gt;
&lt;td&gt;用于标示当前会话是否支持”read－only”模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sessionId&lt;/td&gt;
&lt;td&gt;和 sessionPasswd 分别代表会话 ID 和会话秘钥。客户端使用这两个参数可以实现客户端会话复用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ZooKeeper 客户端和服务器会话的建立是一个异步的过程。当会话真正创建完毕之后，ZooKeeper 服务端会想会话对应的客户端发送一个事件通知。&lt;/p&gt;
&lt;p&gt;创建一个最基本的 ZooKeeper 会话实例&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.CreateMode; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.KeeperException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.WatchedEvent; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.KeeperState; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooDefs.Ids; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooKeeper; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZKBootSample&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; SESSION_TIMEOUT = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String CONNECTION_STRING = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ZK_PATH = &lt;span class=&quot;string&quot;&gt;&quot;/nileader&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZooKeeper zk = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CountDownLatch connectedSemaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 创建 ZK 连接 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; connectString  ZK 服务器地址列表 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; sessionTimeout   Session 超时时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createConnection&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String connectString, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionTimeout )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            zk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZooKeeper(connectString, sessionTimeout, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            connectedSemaphore.await(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;连接创建失败，发生 InterruptedException&quot;&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;连接创建失败，发生 IOException&quot;&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ZKBootSample sample = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZKBootSample(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sample.createConnection(CONNECTION_STRING, SESSION_TIMEOUT); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u521B_u5EFA_u8282_u70B9&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u8282_u70B9&quot; class=&quot;headerlink&quot; title=&quot;创建节点&quot;&gt;&lt;/a&gt;创建节点 &lt;/h3&gt;&lt;p&gt; 客户端可以通过 ZooKeeper 的 API 来创建一个数据节点，有如下两个接口：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt; data[], List&amp;lt;ACL&amp;gt; acl, CreateMode createMode)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt; data[], List&amp;lt;ACL&amp;gt; acl, CreateMode createMode, StringCallback cb, Object ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两个接口分别以同步和异步方式创建节点，参数说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;需要创建的数据节点的节点路径，例如／zk/foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data[]&lt;/td&gt;
&lt;td&gt;一个字节数组，是创建节点后的初始内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;acl&lt;/td&gt;
&lt;td&gt;节点的 ACL 策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;createMode&lt;/td&gt;
&lt;td&gt;节点类型，有持久、持久顺序、临时、临时顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cb&lt;/td&gt;
&lt;td&gt;异步回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctx&lt;/td&gt;
&lt;td&gt;用于传递一个对象，在回调方法执行的时候使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;无论是同步还是异步接口，ZooKeeper 都不支持递归创建，即无法在父节点不存在的情况下创建一个子节点。如果一个节点已经存在，那么创建同名节点的时候，会抛出 NodeExistsException 异常。&lt;/p&gt;
&lt;p&gt;ZooKeeper 的节点内容只支持字节数组（byte[]）类型，不负责为节点内容进行序列化。对于字符串，可以简单的使用”string”.getBytes()来生成一个字节数组，对于其他复杂对象，可以使用 Hessian 或是 Kryo 等序列化工具进行序列化。&lt;/p&gt;
&lt;p&gt;使用同步 API 创建一个节点&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.CreateMode; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.KeeperException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.WatchedEvent; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.KeeperState; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooDefs.Ids; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooKeeper; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZKBootSample&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; SESSION_TIMEOUT = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String CONNECTION_STRING = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ZK_PATH = &lt;span class=&quot;string&quot;&gt;&quot;/nileader&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZooKeeper zk = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CountDownLatch connectedSemaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  创建节点 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; path 节点 path &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; data 初始数据内容 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createPath&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path, String data)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;节点创建成功, Path:&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.zk.create(path, &lt;span class=&quot;comment&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              data.getBytes(), &lt;span class=&quot;comment&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              Ids.OPEN_ACL_UNSAFE, &lt;span class=&quot;comment&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              CreateMode.EPHEMERAL ) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + &lt;span class=&quot;string&quot;&gt;&quot;, content:&quot;&lt;/span&gt; + data ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;节点创建失败，发生 KeeperException&quot;&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;节点创建失败，发生 InterruptedException&quot;&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ZKBootSample sample = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZKBootSample(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sample.createConnection(CONNECTION_STRING, SESSION_TIMEOUT); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sample.createPath( ZK_PATH, &lt;span class=&quot;string&quot;&gt;&quot;我是节点初始内容&quot;&lt;/span&gt; ) ) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5220_u9664_u8282_u70B9&quot;&gt;&lt;a href=&quot;#u5220_u9664_u8282_u70B9&quot; class=&quot;headerlink&quot; title=&quot;删除节点&quot;&gt;&lt;/a&gt;删除节点 &lt;/h3&gt;&lt;p&gt; 客户端可以通过 ZooKeeper 的 API 来删除一个节点，有如下两个接口。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; version)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; version, VoidCallBack cb, Object ctx)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;需要删除的数据节点的节点路径，例如／zk/foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version&lt;/td&gt;
&lt;td&gt;指定节点的数据版本，即表明本次删除操作是针对该数据版本进行的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cb&lt;/td&gt;
&lt;td&gt;异步回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctx&lt;/td&gt;
&lt;td&gt;用于传递一个对象，在回调方法执行的时候使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.CreateMode; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.KeeperException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.WatchedEvent; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.KeeperState; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooDefs.Ids; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooKeeper; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZKBootSample&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; SESSION_TIMEOUT = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String CONNECTION_STRING = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ZK_PATH = &lt;span class=&quot;string&quot;&gt;&quot;/nileader&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZooKeeper zk = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CountDownLatch connectedSemaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 删除指定节点 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; path 节点 path &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deleteNode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.zk.delete(path, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;删除节点成功，path：&quot;&lt;/span&gt; + path ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;删除节点失败，发生 KeeperException，path:&quot;&lt;/span&gt; + path  ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;删除节点失败，发生 InterruptedException，path:&quot;&lt;/span&gt; + path  ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ZKBootSample sample = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZKBootSample(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sample.createConnection(CONNECTION_STRING, SESSION_TIMEOUT); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sample.createPath( ZK_PATH, &lt;span class=&quot;string&quot;&gt;&quot;我是节点初始内容&quot;&lt;/span&gt; ) ) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sample.deleteNode(ZK_PATH); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u8BFB_u53D6_u6570_u636E&quot;&gt;&lt;a href=&quot;#u8BFB_u53D6_u6570_u636E&quot; class=&quot;headerlink&quot; title=&quot;读取数据&quot;&gt;&lt;/a&gt;读取数据 &lt;/h3&gt;&lt;p&gt; 读取数据， 包括自节点列表的获取和节点数据的获取。ZooKeeper 分别提供了不同的 API 来获取数据。&lt;/p&gt;
&lt;h4 id=&quot;getChildren&quot;&gt;&lt;a href=&quot;#getChildren&quot; class=&quot;headerlink&quot; title=&quot;getChildren&quot;&gt;&lt;/a&gt;getChildren&lt;/h4&gt;&lt;p&gt;客户端可以通过 ZooKeeper 的 API 来获取一个节点的所有子节点，有如下 4 个接口可以使用&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, Watcher watcher)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; watch)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, Watcher watcher, ChildrenCallback cb, Object ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getChildren&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, Watcher watcher, Stat stat)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;指定数据节点的节点路径，例如／zk/foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;watcher&lt;/td&gt;
&lt;td&gt;注册的 Watcher。一旦本次子节点获取之后，当子节点列表发生变更，那么就会向客户端发送通知。该参数允许传入 null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;watch&lt;/td&gt;
&lt;td&gt;表明是否需要一个 Watcher。如果这个参数是 true，那么 ZooKeeper 客户端会自动使用程序上文中提到的那个默认 Watcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cb&lt;/td&gt;
&lt;td&gt;异步回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctx&lt;/td&gt;
&lt;td&gt;用于传递一个对象，在回调方法执行的时候使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stat&lt;/td&gt;
&lt;td&gt;指定数据节点的节点状态。用法是在接口中传入一个旧的 stat 变量，该 stat 变量会在方法执行过程中，被来自服务端响应的新 stat 对象替换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;stat 用于描述节点状态信息，该对象纪录了一个节点的基本属性信息，例如节点创建时的事务 ID、最后一次修改的事务 ID 和节点数据内容的长度等。&lt;/p&gt;
&lt;h4 id=&quot;getData&quot;&gt;&lt;a href=&quot;#getData&quot; class=&quot;headerlink&quot; title=&quot;getData&quot;&gt;&lt;/a&gt;getData&lt;/h4&gt;&lt;p&gt;客户端可以通过 ZooKeeper 的 API 来获取一个节点的所有子节点，有如下 4 个接口可以使用&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] getData(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, Watcher watcher, Stat stat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] getData(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; watch, Stat stat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, Watcher watcher, DataCallback cb, Object ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; watch, DataCallback cb, Object ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数说明痛 getChildren。一个简单的读取数据实例：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.CreateMode; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.KeeperException; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.WatchedEvent; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.Watcher.Event.KeeperState; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooDefs.Ids; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.zookeeper.ZooKeeper; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZKBootSample&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; SESSION_TIMEOUT = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String CONNECTION_STRING = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ZK_PATH = &lt;span class=&quot;string&quot;&gt;&quot;/nileader&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZooKeeper zk = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CountDownLatch connectedSemaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 读取指定节点数据内容 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; path 节点 path &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;readData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;获取数据成功，path：&quot;&lt;/span&gt; + path ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.zk.getData(path, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ) ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;读取数据失败，发生 KeeperException，path:&quot;&lt;/span&gt; + path  ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot; 读取数据失败，发生 InterruptedException，path: &quot;&lt;/span&gt; + path  ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ZKBootSample sample = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZKBootSample(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sample.createConnection(CONNECTION_STRING, SESSION_TIMEOUT); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sample.createPath( ZK_PATH, &lt;span class=&quot;string&quot;&gt;&quot;我是节点初始内容&quot;&lt;/span&gt; ) ) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;数据内容:&quot;&lt;/span&gt; + sample.readData(ZK_PATH) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ZooKeeper是一个典型的分布式数据一致性的解决方案，分布式应用可以基于它实现诸如数据发布／订阅、负责均衡、命名服务、分布式协调／通知、&lt;br&gt;集群管理等功能。 ZooKeeper可以保证如下分布式一致性特征。&lt;/p&gt;
    
    </summary>
    
      <category term="TVDCR" scheme="http://nap-blog.artemisprojects.org/categories/TVDCR/"/>
    
    
      <category term="dynamic reconfiguration" scheme="http://nap-blog.artemisprojects.org/tags/dynamic-reconfiguration/"/>
    
      <category term="spring" scheme="http://nap-blog.artemisprojects.org/tags/spring/"/>
    
      <category term="transacion" scheme="http://nap-blog.artemisprojects.org/tags/transacion/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack 平台 Neutron 服务初探</title>
    <link href="http://nap-blog.artemisprojects.org/2015/12/02/openstack_neutron/"/>
    <id>http://nap-blog.artemisprojects.org/2015/12/02/openstack_neutron/</id>
    <published>2015-12-01T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;之前搭建了一个两个结点的 OpenStack 集群，老板说太简单了太 low 了，于是最近又重新搭建了一个四个结点的 OpenStack 集群。其中包含一个 Controller 结点，一个 Network 结点和两个 Compute 结点。其中 Network 结点主要运行 OpenStack 中的网络服务，即 Neutron 组件。下面对这个集群的部署过程做一下总结，并且简单介绍一下 Neutron 服务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u6269_u5C55Compute_u7ED3_u70B9&quot;&gt;&lt;a href=&quot;#u6269_u5C55Compute_u7ED3_u70B9&quot; class=&quot;headerlink&quot; title=&quot;扩展 Compute 结点&quot;&gt;&lt;/a&gt;扩展 Compute 结点 &lt;/h2&gt;&lt;p&gt; 扩展 Compute 结点相对来说是比较简单的。并且所有 Computer 节点的部署过程都是相同的，详细信息请参考上一篇。&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72Network_u7ED3_u70B9&quot;&gt;&lt;a href=&quot;#u90E8_u7F72Network_u7ED3_u70B9&quot; class=&quot;headerlink&quot; title=&quot;部署 Network 结点&quot;&gt;&lt;/a&gt;部署 Network 结点 &lt;/h2&gt;&lt;h3 id=&quot;u5F00_u59CB_u4E4B_u524D&quot;&gt;&lt;a href=&quot;#u5F00_u59CB_u4E4B_u524D&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt; 开始之前 &lt;/h3&gt;&lt;p&gt; 在上一篇中，我们将 Neutron 服务的所有代理都放在了 Controller 组件里面，这些代理包括：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Linux&lt;/span&gt;网桥代理没建立 layer-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;虚拟网络，为实例提供 VXLAN 通道并处理安全组问题 (security groups)。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;DHCP&lt;/span&gt; 代理，用于在创建实例时分配 &lt;span class=&quot;literal&quot;&gt;IP&lt;/span&gt; 地址。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;L3&lt;/span&gt;代理，为虚拟网络提供路由和 NAT 服务。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Metadata&lt;/span&gt;代理，提供配置信息，如实例的证书等。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们想把上述代理都放在 Network 结点中，即将 Neutron 组件单独运行在一个结点中。我们的解决思路是尝试着分别将每个代理依次从 Controller 结点迁移到 Network 结点中。在此之前，我们首先将与各个代理相关的配置文件项列出来，并给予一些说明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ML2 插件配置项(配置文件为 /etc/neutron/plugins/ml2/ml2_conf.ini)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;type_drivers = &lt;span class=&quot;value&quot;&gt;flat,vlan,vxlan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;tenant_network_types = &lt;span class=&quot;value&quot;&gt;vxlan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;mechanism_drivers = &lt;span class=&quot;value&quot;&gt;linuxbridge,l2population&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;extension_drivers = &lt;span class=&quot;value&quot;&gt;port_security&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;flat_networks = &lt;span class=&quot;value&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;vni_ranges = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;enable_ipset = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 ml2 插件的配置项中，主要是开启了 flat,vlan,vxlan 网络，其中私有网络 (tenant) 使用的是 vxlan 隧道，具体为下图所示。我们看到 VXLAN 隧道在网桥代理中，我们领 management network 的 ip 地址赋给 VXLAN 的网卡。而 flat 网络是 OpenStack 网络中的一种工作机制。Flat 模式指定一个子网，规定虚拟机实例能使用的 ip 范围，也就是一个 ip 池，创建实例时，从 ip 池中取出一个有效的 ip 为虚拟机分配，并且在虚拟机启动时注入虚拟机镜像。在这里，给 Flat 网命名为 public。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-network-connect.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux 网桥代理配置&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;physical_interface_mappings = &lt;span class=&quot;value&quot;&gt;public:eth0 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;enable_vxlan = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;local_ip = &lt;span class=&quot;value&quot;&gt;OVERLAY_INTERFACE_IP_ADDRESS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;l2_population = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;prevent_arp_spoofing = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;enable_security_group = &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;firewall_driver = &lt;span class=&quot;value&quot;&gt;neutron.agent.linux.iptables_firewall.IptablesFirewallDriver&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 Linux 网桥的配置项中，我们开启了 VXLAN 通道，并且指定 ip 为 management work 中的 ip，并将 public 网络绑定在 eth0 网卡(public network)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L3 代理配置&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;interface_driver = neutron&lt;span class=&quot;class&quot;&gt;.agent&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.linux&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.interface&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BridgeInterfaceDriver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external_network_bridge =&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;DHCP 代理配置&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;interface_driver = neutron&lt;span class=&quot;class&quot;&gt;.agent&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.linux&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.interface&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BridgeInterfaceDriver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dhcp_driver = neutron&lt;span class=&quot;class&quot;&gt;.agent&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.linux&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.dhcp&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.Dnsmasq&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enable_isolated_metadata = True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上述两个代理中，我们都在 interface_driver 项中选择了 Linux 网桥的驱动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metadata 代理配置，主要为与 keystone 和 nova 之间关于认证的一些 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/neutron-controller-install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 配置项&lt;/a&gt;，没有太多需要说明的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u5C06L3_u4EE3_u7406_u8FC1_u79FB_u5230Network_u7ED3_u70B9&quot;&gt;&lt;a href=&quot;#u5C06L3_u4EE3_u7406_u8FC1_u79FB_u5230Network_u7ED3_u70B9&quot; class=&quot;headerlink&quot; title=&quot;将 L3 代理迁移到 Network 结点&quot;&gt;&lt;/a&gt;将 L3 代理迁移到 Network 结点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;首先在 Controller 上面停掉 L3 代理，在 Network 结点上面启动 L3 代理，其实配置项都是一样的。&lt;/li&gt;
&lt;li&gt;然后需要在 Network 结点配置好 Linux 网桥代理，原因不用说，只有 L3 代理不就相当于一个孤点么，没有任何作用。&lt;/li&gt;
&lt;li&gt;重新建立一个网络，运行一个实例，配置一个 floating-ip，然后 ssh 进去就可以啦！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5C06DHCP_u4EE3_u7406_u8FC1_u79FB_u5230Network_u7ED3_u70B9&quot;&gt;&lt;a href=&quot;#u5C06DHCP_u4EE3_u7406_u8FC1_u79FB_u5230Network_u7ED3_u70B9&quot; class=&quot;headerlink&quot; title=&quot;将 DHCP 代理迁移到 Network 结点&quot;&gt;&lt;/a&gt;将 DHCP 代理迁移到 Network 结点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;跟 L3 代理一样，首先还是在 Network 结点中启动 DHCP 代理，然后停掉 Controller 结点上面的 DHCP 代理。&lt;/li&gt;
&lt;li&gt;本以为建立好一个网络后，一切还是很正常的运行，但是发现事实不是这样子的。当我写下这篇文章的时候，我只记得我当时去看了实例的 log，发现已经分配了正确的 ip 地址，于是就断定 DHCP 代理是没有错的，并且查询了一下 neutron 的 log，发现有几个是刚刚更新过的，发现在 metadata 的 log 里面，没有将请求或操作连接到正确的消息 url 中，即一直都在请求 127.0.0.1 的本地消息队列，而 Network 结点是没有装消息队列的，所以肯定是不对的。&lt;/li&gt;
&lt;li&gt;最后，直接一次性将 metadata 代理也迁移了过去。&lt;/li&gt;
&lt;li&gt;建立好一个网络，运行实例，配置一个 floating-ip，然后 ssh 进去就可以啦！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u7ED3_u679C_u622A_u4E2A_u56FE&quot;&gt;&lt;a href=&quot;#u7ED3_u679C_u622A_u4E2A_u56FE&quot; class=&quot;headerlink&quot; title=&quot;结果截个图&quot;&gt;&lt;/a&gt;结果截个图&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Neutron 组件代理列表：&lt;br&gt; &lt;img src=&quot;/images/openstack-neutron-agentlist.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 可以看到，Neutron 组件的所有代理目前都跑在了 Network 结点上面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Floating-ip 测试：&lt;/p&gt;
&lt;p&gt; 建立好一个虚拟机实例。&lt;br&gt; &lt;img src=&quot;/images/openstack-neutron-novalist.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 然后 ssh 进去访问它。&lt;br&gt; &lt;img src=&quot;/images/openstack-neutron-floatingip.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 可以看到我们最后是在 Network 结点上进行访问的，并且需要输入密码，这点我们会在后面详细解释一下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u5728OpenStack_u4E2D_u5EFA_u7ACB_u7F51_u7EDC&quot;&gt;&lt;a href=&quot;#u5728OpenStack_u4E2D_u5EFA_u7ACB_u7F51_u7EDC&quot; class=&quot;headerlink&quot; title=&quot;在 OpenStack 中建立网络&quot;&gt;&lt;/a&gt;在 OpenStack 中建立网络 &lt;/h2&gt;&lt;p&gt; 之前说了那么多，下面具体讲一下在 OpenStack 中如何建立网络，看完这个过程，你会发现里面有一些东西会跟前面的某些名词对应上。&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source admin-openrc.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron net-create &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; --shared --&lt;span class=&quot;string&quot;&gt;provider:&lt;/span&gt;physical_network &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; --&lt;span class=&quot;string&quot;&gt;provider:&lt;/span&gt;network_type flat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条命令会建立一个类型为 flat，名称为 public 的共享虚拟网络。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;neutron subnet-create &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; --allocation-pool start=&lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.110&lt;/span&gt;,end=&lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.200&lt;/span&gt; --dns-nameserver &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt; --gateway &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条命令会为 public 网络分配 ip 池，可以看到分配了 90 个 ip，并且有相对应的 dns 服务器和网关。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source demo-openrc.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron net-create &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron subnet-create &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;172.16&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; --dns-nameserver &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt; --gateway &lt;span class=&quot;number&quot;&gt;172.16&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两条命令是 demo 用户创建了一个私有的虚拟网络，名字为 private。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source admin-openrc.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron net-&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--router:external&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; demo-openrc.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron router-&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; router&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron router-&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;add&lt;/span&gt; router &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neutron router-gateway-&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; router &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述命令会建立一个路由器 router，并且将 private 网络作为 router 上面的一个网卡，将 public 网络当做 router 上面的网关。建好了网络，在建立实例之前，首先验证一下。在 Controller 结点上面列出端口信息。并且查看每个端口的详细信息。&lt;/p&gt;
&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; admin-openrc.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;neutron&lt;/span&gt; router-&lt;span class=&quot;foreign&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;port&lt;/span&gt;-list router&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;neutron&lt;/span&gt; &lt;span class=&quot;foreign&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;port&lt;/span&gt;-show $(id)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;截图如下：&lt;br&gt;&lt;img src=&quot;/images/openstack-router-port-list.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到这些端口绑定的 host_id 是 neutron，即 Network 结点。这是因为 L3 代理是在 Network 结点上面的。这个时候检查一下网络的名空间，就应该在 Network 结点，而不是 Controller 结点了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-ip-netns.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;并且这个 router 的网关 10.0.2.112 只能在 Network 结点上 ping 通。并且，建立好实例后，目前只能在 Network 结点 ping 通分配好的 floating-ip，在 ssh 进去的时候是需要输入密码的，这是因为默认的 ssh-key 是 controller 结点上的。其实，按照官方文档的说法，只要在 public 网络下面的任何结点都是可以通过 ssh 的方式进入虚拟机实例的，而我们目前只能在 Network 结点上，这是因为我们新建的路由器是绑定在 Network 结点上面的，而这是因为 L3 代理是运行在 Network 结点上面的。感觉能够通过添加路由转发规则的方式，令 public 子网内所有的主机都能通过 floating-ip 访问虚拟机实例。这一点会在本文写好之后进行尝试。&lt;/p&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结 &lt;/h2&gt;&lt;p&gt; 经过这两天的尝试，感觉 OpenStack 的灵活性很高。就像我们这一次把 Neutron 服务从 Controller 结点迁移到 Network 结点，都是直接把网络代理从这边关闭，到那边打开就可以。给我的感觉就像是传说中的那种可以在硬件层面上组装的手机，需要什么零件自己选择。&lt;/p&gt;
&lt;p&gt;还有一点就是，在出现错误时，我目前都是看 log 的。log 的目录是在 /var/log/$(service)/*.log 中，每次都查看最近更新过的 log，然后看里面有什么错误之类的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前搭建了一个两个结点的OpenStack集群，老板说太简单了太low了，于是最近又重新搭建了一个四个结点的OpenStack集群。其中包含一个Controller结点，一个Network结点和两个Compute结点。其中Network结点主要运行OpenStack中的网络服务，即Neutron组件。下面对这个集群的部署过程做一下总结，并且简单介绍一下Neutron服务。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OpenStack" scheme="http://nap-blog.artemisprojects.org/categories/OpenStack/"/>
    
    
      <category term="Neutron" scheme="http://nap-blog.artemisprojects.org/tags/Neutron/"/>
    
      <category term="OpenStack" scheme="http://nap-blog.artemisprojects.org/tags/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack 平台手动搭建以及 floating-ip 的使用</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/20/openstack_floating_ip/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/20/openstack_floating_ip/</id>
    <published>2015-11-19T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.908Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近尝试着根据 OpenStack 官方网站的教程搭建一个简单的 OpenStack 集群，并且使用 floating-ip 机制。下面简单对这些工作进行介绍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u642D_u5EFAOpenStack_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u642D_u5EFAOpenStack_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;搭建 OpenStack 平台&quot;&gt;&lt;/a&gt;搭建 OpenStack 平台 &lt;/h2&gt;&lt;h3 id=&quot;u5F00_u59CB_u4E4B_u524D&quot;&gt;&lt;a href=&quot;#u5F00_u59CB_u4E4B_u524D&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt; 开始之前 &lt;/h3&gt;&lt;p&gt; 在上一篇中，对 OpenStack 平台做了简单的介绍。这一次，我们根据 OpenStack 官网上面的 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档&lt;/a&gt;，手动部署 OpenStack 中的服务组件。并在搭建好的平台上运行实例。平台的设计布局如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-layout.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在上图中，主要包括一个 Controller 节点和 Compute 节点，以及一些 Storage 节点。在本例中我们仅仅关注 Controller 节点和 Compute 节点。从图中可以看出 Controller 和 Compute 节点均包括两个子网，分别为 management network 和 public network。&lt;/p&gt;
&lt;p&gt;我们使用 &lt;a href=&quot;https://www.vagrantup.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vagrant&lt;/a&gt; 工具初始化两个节点。Vagrantfile 具体为：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Vagrant.configure(2) &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |config|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.vm.box = &lt;span class=&quot;string&quot;&gt;&quot;ubuntu/trusty64&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	config.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;controller&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.ssh.username = &lt;span class=&quot;string&quot;&gt;&quot;vagrant&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.ssh.&lt;span class=&quot;keyword&quot;&gt;password&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;vagrant&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, ip: &lt;span class=&quot;string&quot;&gt;&quot;10.0.0.11&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;public_network&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |vb|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vb.gui = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vb.&lt;span class=&quot;keyword&quot;&gt;memory&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;6144&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vb.cpus = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们建立的虚拟机是 Ubuntu14.04 64 位，还有一些关于主机名，用户密码，内存，CPU 的简单设置。我们设置了两个网络，分别对应于 management work 和 public network。&lt;/p&gt;
&lt;h3 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作 &lt;/h3&gt;&lt;p&gt; 在安装 OpenStack 的各个服务组件之前，需要预先安装一些软件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/environment-ntp.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NTP 协议&lt;/a&gt;，用于同步不同节点之间的状态及服务。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/environment-packages.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenStack 包&lt;/a&gt;，安装最新的 OpenStack 包，这里我们选取的是最新版 Liberty。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/environment-sql-database.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SQL 数据库&lt;/a&gt;，在 Controller 节点上安装 SQL 数据库，大多数 OpenStack 服务使用 SQL 数据库用来存储信息。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/environment-nosql-database.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NoSQL 数据库 &lt;/a&gt;，在 Controller 节点上安装，Telemetry 服务使用 NoSQL 数据库(一般为 MongoDB) 来存储消息。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/environment-messaging.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;消息队列&lt;/a&gt;，在 Controller 节点上安装，OpenStack 平台使用消息队列来协调各个服务之间的操作和状态信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u5B89_u88C5Keystone_u7EC4_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Keystone_u7EC4_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装 Keystone 组件&quot;&gt;&lt;/a&gt;安装 Keystone 组件 &lt;/h3&gt;&lt;p&gt;OpenStack 平台中的 Keystone 服务主要用于身份管理，Keystone 的作用类似与一个服务总线，其他服务都通过 Keystone 来注册器服务的 Endpoint，针对这些服务的任何调用都需要经过 Keystone 的身份认证才可以。安装的步骤按照&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/common/get_started_identity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档 &lt;/a&gt; 中进行即可。&lt;/p&gt;
&lt;h3 id=&quot;u5B89_u88C5Glance_u7EC4_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Glance_u7EC4_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装 Glance 组件&quot;&gt;&lt;/a&gt;安装 Glance 组件 &lt;/h3&gt;&lt;p&gt;OpenStack 平台中的 Glance 服务主要管理镜像。这点跟 Docker 中的 image 类似。即我们可以上传当前的镜像以便日后使用。安装的步骤按照&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/glance.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档 &lt;/a&gt; 中进行即可。&lt;/p&gt;
&lt;h3 id=&quot;u5B89_u88C5Nova_u7EC4_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Nova_u7EC4_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装 Nova 组件&quot;&gt;&lt;/a&gt;安装 Nova 组件 &lt;/h3&gt;&lt;p&gt;OpenStack 平台中的 Nova 服务是 OpenStack 平台的核心服务，它用于抽象虚拟机实例，并控制着虚拟机的状态便签，管理着它们的资源分配。安装的步骤按照&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/nova.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档 &lt;/a&gt; 中进行，其中有一个地方文档写错了，我们会在后面详细说一下。&lt;/p&gt;
&lt;h3 id=&quot;u5B89_u88C5Neutron_u7EC4_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Neutron_u7EC4_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装 Neutron 组件&quot;&gt;&lt;/a&gt;安装 Neutron 组件 &lt;/h3&gt;&lt;p&gt;OpenStack 平台中的 Neutron 服务将 OpenStack 平台所在的物理网络泛化为网络资源池，通过对物理网络资源的灵活划分与管理，Neutron 组件能为同一物理网络上的每个 tenant 提供独立的虚拟网络环境。安装的步骤按照&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/neutron.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档 &lt;/a&gt; 中进行即可。安装后的网络模块大致如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-network-overview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中 Controller 中有网桥代理，Metadata 代理，DHCP 代理和 L3 代理，而 Compute 节点中只有网桥代理。&lt;/p&gt;
&lt;h3 id=&quot;u5B89_u88C5Horizon_u7EC4_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Horizon_u7EC4_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装 Horizon 组件&quot;&gt;&lt;/a&gt;安装 Horizon 组件 &lt;/h3&gt;&lt;p&gt;OpenStack 平台中的 Horizon 提供了 Dashboard，即一个简洁方便用户友好的控制界面，让开发者和使用者更好的浏览并操作属于自己的计算资源，安装步骤按照&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/horizon.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 文档 &lt;/a&gt; 中进行即可。&lt;/p&gt;
&lt;h3 id=&quot;u8FD0_u884C_u4E00_u4E2A_u4F8B_u5B50&quot;&gt;&lt;a href=&quot;#u8FD0_u884C_u4E00_u4E2A_u4F8B_u5B50&quot; class=&quot;headerlink&quot; title=&quot;运行一个例子&quot;&gt;&lt;/a&gt;运行一个例子 &lt;/h3&gt;&lt;p&gt; 在此之前，我们按照文档已经安装好了 OpenStack 平台最基本的一些服务，下面我们就可以运行一个 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/launch-instance.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 例子&lt;/a&gt;。在安装 Neutron 服务后，集群的网络拓扑为下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-network-connect.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中 public provider network 和 public physical network 应该在同一个网段内，management physical network 是启动虚拟机的 Vagrantfile 中已经预先定义好了。Private project network 需要自己手动创建，在文档中有例子，这个网段应该可以是任意指定的。 我们一共运行了两个实例，一个为公共实例，一个为私有实例，公共实例可以通过 ip 地址直接 ssh 访问 (因为在同一子网内)，但是私有实例则需要指定 floating-ip，才能访问。把 floating-ip 的介绍的&lt;a href=&quot;https://www.rdoproject.org/networking/difference-between-floating-ip-and-private-ip/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 链接 1&lt;/a&gt; &lt;a href=&quot;http://docs.openstack.org/user-guide/cli_manage_ip_addresses.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接 2&lt;/a&gt;放出来，供大家参考。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-network-instance.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果想要访问私有实例 private-instance，由于分配了 floating-ip，所以它的访问过程如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-floating-ip.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5_u8FC7_u7A0B_u9047_u5230_u7684_u95EE_u9898_u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u8FC7_u7A0B_u9047_u5230_u7684_u95EE_u9898_u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;安装过程遇到的问题总结&quot;&gt;&lt;/a&gt;安装过程遇到的问题总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先在安装完 Compute 服务后，发现在 Controller 节点上并没有显示出 Compute 节点上面的 nova-compute 服务，在网上找了一下原因。有的大神提出来在配置文件 /etc/nova/nova.conf 中，关于消息队列的三个配置项不应该在 &lt;code&gt;[oslo_messaging_rabbit]&lt;/code&gt; 这个 section 中，应该在 &lt;code&gt;[DEFAULT]&lt;/code&gt; 中，修改后重启 nova-compute 服务即可。在重启后，在 Controller 节点上发现 nova-compute 服务，状态为 up，但是过了一会儿状态变为 down 了。不知道为什么，在网上找了很久也没有解决。于是把 Compute 节点删掉，重新装了一遍，就好了。好了。了。&lt;/li&gt;
&lt;li&gt;安装完 DashBoard 组件后，可以正常登陆，但是在打开 &lt;code&gt;Instance&lt;/code&gt; 列表时，右上角会出现 &lt;strong&gt;Unable to Connect to Neutron&lt;/strong&gt; 的提示，而且不能通过在 DashBoard 页面创建实例等。这是因为我在刚开始装 Neutron 组件的时候选择了 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/neutron-controller-install-option1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Provider networks&lt;/a&gt; 这个选项，在配置文件 /etc/neutron/neutron.conf 文件中，它禁用了 service_plugins 这个选项，即把它赋值为空。但是在第二个选项 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/neutron-controller-install-option2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Self-service networks&lt;/a&gt; 中，这一项赋值为 router。由于后来要使用 floating-ip 机制，所以需要选择第二个网络拓扑，就把这一项填充好了。然后之前页面上的问题也成功解决了。&lt;/li&gt;
&lt;li&gt;在运行的例子中，由于我们最后选择的是第二项网络拓扑，所以运行的实例不论是共有 (public instance) 的还是私有 (private instance) 的，都应该可以正常运行。但是我们只能成功运行私有实例，并可以使用 floating-ip 机制访问进新建的 private 虚拟机实例。而公共实例却不能正常访问，这是因为虚拟机在启动的时候 DHCP 没有分配好 IP 地址，所以尽管我们在 DashBoard 中发现这个实例已经有了 IP 地址，但是通过 console 进入虚拟机之后发现并没有分配正确的 ip 地址。通过实例的 log 分析，应该是 DHCP 的配置出了一些问题，也在网上找了很久，都没有找到解决办法。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近尝试着根据OpenStack官方网站的教程搭建一个简单的OpenStack集群，并且使用floating-ip机制。下面简单对这些工作进行介绍。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OpenStack" scheme="http://nap-blog.artemisprojects.org/categories/OpenStack/"/>
    
    
      <category term="OpenStack" scheme="http://nap-blog.artemisprojects.org/tags/OpenStack/"/>
    
      <category term="floating-ip" scheme="http://nap-blog.artemisprojects.org/tags/floating-ip/"/>
    
  </entry>
  
  <entry>
    <title>凤城卫士 API 文档</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/19/fcws-api-doc/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/19/fcws-api-doc/</id>
    <published>2015-11-18T16:40:58.000Z</published>
    <updated>2016-04-06T03:06:29.907Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本篇为凤城卫士的 API 文档，包括其 url, 接受的参数，示例 url 以及返回值示例。对于 REST API 的 设计感兴趣的可以移步 &lt;a href=&quot;http://mclspace.com/2015/11/03/restful-note/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注: 本篇中的 url 均具有前缀 &lt;em&gt;/api/v1&lt;/em&gt; , 这里为简便起见，进行了省略.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;# 用户信息&lt;/p&gt;
&lt;h2 id=&quot;u6388_u6743_u9A8C_u8BC1__3C_21-_u8FD9_u8FB9_u5E94_u8BE5POST_2C_u56E0_u4E3A_u91CD_u65B0_u751F_u6210_u4E86token_-_3E&quot;&gt;&lt;a href=&quot;#u6388_u6743_u9A8C_u8BC1__3C_21-_u8FD9_u8FB9_u5E94_u8BE5POST_2C_u56E0_u4E3A_u91CD_u65B0_u751F_u6210_u4E86token_-_3E&quot; class=&quot;headerlink&quot; title=&quot;授权验证 &lt;!-- 这边应该 POST, 因为重新生成了 token --&gt;&quot;&gt;&lt;/a&gt;授权验证 &lt;!-- 这边应该 POST, 因为重新生成了 token --&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/auth/local&lt;/code&gt; GET 验证用户名密码，并重新生成 token，返回基本的用户信息 &lt;br&gt; 接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id     String 用户 id&lt;/li&gt;
&lt;li&gt;password         String 用户密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 : &lt;code&gt;GET localhost:3000/api/v1/auth/local?id=44220&amp;amp;password=44220&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;44220&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;role&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;high-level&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;description&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;干事 1&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;&lt;span class=&quot;attribute&quot;&gt;accessToken&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;d827b0ef-4e21-4cb7-b89f-c0b601fbe4b1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u91CD_u7F6E_u5BC6_u7801__3C_21-_u8FD9_u8FB9_u5E94_u8BE5_u7528PUT__2C_u56E0_u4E3A_u7528_u6237_u66F4_u65B0_u4E86_u5BC6_u7801_-_3E&quot;&gt;&lt;a href=&quot;#u91CD_u7F6E_u5BC6_u7801__3C_21-_u8FD9_u8FB9_u5E94_u8BE5_u7528PUT__2C_u56E0_u4E3A_u7528_u6237_u66F4_u65B0_u4E86_u5BC6_u7801_-_3E&quot; class=&quot;headerlink&quot; title=&quot;重置密码 &lt;!-- 这边应该用 PUT , 因为用户更新了密码 --&gt;&quot;&gt;&lt;/a&gt;重置密码 &lt;!-- 这边应该用 PUT , 因为用户更新了密码 --&gt;&lt;/h2&gt;&lt;p&gt; &lt;code&gt;/users/changePassword&lt;/code&gt; POST 重置用户密码，重新生成盐值和 hash 存储到数据库中，返回修改后的用户基本信息 &lt;br&gt; 接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id     String 用户 id&lt;/li&gt;
&lt;li&gt;password         String 用户密码&lt;/li&gt;
&lt;li&gt;new_password         String 新的用户密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 : &lt;code&gt;POST localhost:3000/api/v1/users/changePassword&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;44220&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;role&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;high-level&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;description&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;干事 1&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;&lt;span class=&quot;attribute&quot;&gt;accessToken&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;d827b0ef-4e21-4cb7-b89f-c0b601fbe4b1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u83B7_u5F97_u7528_u6237_u4FE1_u606F_//_u8FD9_u8FB9_u5E94_u8BE5_u7528/users/_3Aid&quot;&gt;&lt;a href=&quot;#u83B7_u5F97_u7528_u6237_u4FE1_u606F_//_u8FD9_u8FB9_u5E94_u8BE5_u7528/users/_3Aid&quot; class=&quot;headerlink&quot; title=&quot;获得用户信息 // 这边应该用 /users/:id&quot;&gt;&lt;/a&gt;获得用户信息 // 这边应该用 /users/:id&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/users/details&lt;/code&gt; GET 获取用户详细信息, 如最近的主题以及最近的回复&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;access_token         String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 :  &lt;code&gt;GET localhost:3000/api/v1/users/details?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;role&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;low-level&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;description&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;海陵区城西街道情报员&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;高月&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;recent_posts&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef7bd443b5243c7e826b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;测试情报&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;important&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:27.217Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;recent_replies&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef8fd443b5243c7e826d&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;呵呵&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:47.664Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef85d443b5243c7e826c&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;评论一个&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:37.741Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;u60C5_u62A5_u4FE1_u606F&quot;&gt;&lt;a href=&quot;#u60C5_u62A5_u4FE1_u606F&quot; class=&quot;headerlink&quot; title=&quot;情报信息&quot;&gt;&lt;/a&gt;情报信息 &lt;/h1&gt;&lt;h2 id=&quot;u83B7_u53D6_u60C5_u62A5_u5217_u8868&quot;&gt;&lt;a href=&quot;#u83B7_u53D6_u60C5_u62A5_u5217_u8868&quot; class=&quot;headerlink&quot; title=&quot;获取情报列表&quot;&gt;&lt;/a&gt; 获取情报列表&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/posts&lt;/code&gt; GET 获取帖子列表&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;limit     Number 每页的情报数量&lt;/li&gt;
&lt;li&gt;page         Number 页数&lt;/li&gt;
&lt;li&gt;access_token         String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;GET localhost:3000/api/v1/posts?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&amp;amp;limit=5&amp;amp;page=1&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef7bd443b5243c7e826b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;测试情报&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;important&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:27.217Z&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;author&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;高月&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564ae2c08bb772bf39386e2b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;44121&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;important&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T08:18:08.800Z&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;author&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u83B7_u53D6_u67D0_u4E2A_u5E16_u5B50_u7684_u5177_u4F53_u5185_u5BB9&quot;&gt;&lt;a href=&quot;#u83B7_u53D6_u67D0_u4E2A_u5E16_u5B50_u7684_u5177_u4F53_u5185_u5BB9&quot; class=&quot;headerlink&quot; title=&quot;获取某个帖子的具体内容&quot;&gt;&lt;/a&gt;获取某个帖子的具体内容&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/posts/:id&lt;/code&gt; GET 获取某个帖子的具体内容&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id    String 帖子的 id&lt;/li&gt;
&lt;li&gt;access_token         String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;GET localhost:3000/api/v1/posts/564aef7bd443b5243c7e826b?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef7bd443b5243c7e826b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;测试情报&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;important&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;photos&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:27.217Z&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;author&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;高月&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;replies&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef85d443b5243c7e826c&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;post_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef7bd443b5243c7e826b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;评论一个&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:37.741Z&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;高月&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef8fd443b5243c7e826d&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;post_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564aef7bd443b5243c7e826b&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;呵呵&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-17T09:12:47.664Z&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;author&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;高月&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u521B_u5EFA_u60C5_u62A5&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u60C5_u62A5&quot; class=&quot;headerlink&quot; title=&quot;创建情报&quot;&gt;&lt;/a&gt;创建情报&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/posts&lt;/code&gt; POST 创建情报，返回情报基本内容&lt;/p&gt;
&lt;p&gt;参数: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content    String 帖子的内容, 不能为空&lt;/li&gt;
&lt;li&gt;important     Boolean 是否为紧急情报，默认为 false&lt;/li&gt;
&lt;li&gt;photos     [String] 情报的配图，目前默认只能上传一张&lt;/li&gt;
&lt;li&gt;access_token        String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;POST localhost:3000/api/v1/posts?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564c34da38cad35f288846c9&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;测试消息 from postman&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;important&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-18T08:20:42.379Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5220_u9664_u60C5_u62A5&quot;&gt;&lt;a href=&quot;#u5220_u9664_u60C5_u62A5&quot; class=&quot;headerlink&quot; title=&quot;删除情报&quot;&gt;&lt;/a&gt;删除情报&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/posts/:id&lt;/code&gt; DELETE 删除情报，返回空文档。&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id     String 待删除的情报的 id&lt;/li&gt;
&lt;li&gt;access_token         String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;DELETE localhost:3000/api/v1/posts/564c34da38cad35f288846c9?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;u56DE_u590D&quot;&gt;&lt;a href=&quot;#u56DE_u590D&quot; class=&quot;headerlink&quot; title=&quot;回复&quot;&gt;&lt;/a&gt;回复 &lt;/h1&gt;&lt;h2 id=&quot;u521B_u5EFA_u56DE_u590D&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u56DE_u590D&quot; class=&quot;headerlink&quot; title=&quot;创建回复&quot;&gt;&lt;/a&gt; 创建回复&lt;/h2&gt;&lt;p&gt;&lt;code&gt;replys&lt;/code&gt; POST 创建一个回复，返回该回复&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;post_id         String  回复的情报的 id&lt;/li&gt;
&lt;li&gt;content         String  回复内容&lt;/li&gt;
&lt;li&gt;access_token     String  用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;POST localhost:3000/api/v1/replys?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564c7234d1739e4f0b056796&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;post_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;564c65c34086d9a105d78243&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;添加一条回复&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;author_id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;13852862738&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;create_at&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;2015-11-18T12:42:28.692Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5220_u9664_u56DE_u590D&quot;&gt;&lt;a href=&quot;#u5220_u9664_u56DE_u590D&quot; class=&quot;headerlink&quot; title=&quot;删除回复&quot;&gt;&lt;/a&gt;删除回复&lt;/h2&gt;&lt;p&gt;&lt;code&gt;replys/:id&lt;/code&gt; DELETE 删除某个回复, 返回空文档&lt;/p&gt;
&lt;p&gt;接受参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id String 该回复的 id&lt;/li&gt;
&lt;li&gt;access_token String 用户的 token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例: &lt;code&gt;DELETE localhost:3000/api/v1/replys/564c7234d1739e4f0b056796?access_token=e25be7a2-0553-4104-a210-bde3873bfdb6&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本篇为凤城卫士的API文档，包括其url,接受的参数，示例url以及返回值示例。对于REST API的 设计感兴趣的可以移步&lt;a href=&quot;http://mclspace.com/2015/11/03/restful-note/&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注: 本篇中的url均具有前缀 &lt;em&gt;/api/v1&lt;/em&gt; ,这里为简便起见，进行了省略.&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://nap-blog.artemisprojects.org/categories/web/"/>
    
    
      <category term="api" scheme="http://nap-blog.artemisprojects.org/tags/api/"/>
    
      <category term="web" scheme="http://nap-blog.artemisprojects.org/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Spring Transaction Manager 学习笔记</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/10/spring-transaction-manager/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/10/spring-transaction-manager/</id>
    <published>2015-11-09T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;p&gt;使用 Spring 声明式事务处理，是通过结合 IoC 容器和 Spring 已有的 TransactionProxyFactoryBean 来对事务管理进行配置。&lt;br&gt;在 TransactionProxyFactoryBean 中为事务方法配置传播行为、并发事务隔离级别这些事务处理的属性，&lt;br&gt;从而对声明式事务的处理提供指导。&lt;br&gt;声明式事务处理的实现，大致可以分为以下三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取和处理在 IoC 容器中配置的事务处理属性， 并转为 Spring 事务处理需要的内部数据结构。&lt;/li&gt;
&lt;li&gt;Spring 事务处理模块实现的统一的事务处理过程。包含了处理事务配置属性，以及与现场绑定完成事务处理。Spring 通过 TransactionInfo 和 TransactionStatus 两个数据对象，在事务处理过程中记录和传递相关执行场景。&lt;/li&gt;
&lt;li&gt;对于底层的事务操作，Spring 委托给具体的事务处理器来完成，即 PlatformTransactionManager 的具体实现。比如 DataSourceTransactionManager 和 HibernateTransactionManager。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u58F0_u660E_u5F0F_u4E8B_u52A1_u5904_u7406_u7684_u57FA_u672C_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#u58F0_u660E_u5F0F_u4E8B_u52A1_u5904_u7406_u7684_u57FA_u672C_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;声明式事务处理的基本过程&quot;&gt;&lt;/a&gt;声明式事务处理的基本过程 &lt;/h2&gt;&lt;p&gt; 使用 Spring 声明式事务处理，是通过结合 IoC 容器和 Spring 已有的 TransactionProxyFactoryBean 来对事务管理进行配置。&lt;br&gt;在 TransactionProxyFactoryBean 中为事务方法配置传播行为、并发事务隔离级别这些事务处理的属性，&lt;br&gt;从而对声明式事务的处理提供指导。&lt;br&gt;声明式事务处理的实现，大致可以分为以下三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取和处理在 IoC 容器中配置的事务处理属性， 并转为 Spring 事务处理需要的内部数据结构。&lt;/li&gt;
&lt;li&gt;Spring 事务处理模块实现的统一的事务处理过程。包含了处理事务配置属性，以及与现场绑定完成事务处理。Spring 通过 TransactionInfo 和 TransactionStatus 两个数据对象，在事务处理过程中记录和传递相关执行场景。&lt;/li&gt;
&lt;li&gt;对于底层的事务操作，Spring 委托给具体的事务处理器来完成，即 PlatformTransactionManager 的具体实现。比如 DataSourceTransactionManager 和 HibernateTransactionManager。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u4E8B_u52A1_u5904_u7406_u62E6_u622A_u5668_u7684_u914D_u7F6E&quot;&gt;&lt;a href=&quot;#u4E8B_u52A1_u5904_u7406_u62E6_u622A_u5668_u7684_u914D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;事务处理拦截器的配置&quot;&gt;&lt;/a&gt;事务处理拦截器的配置 &lt;/h2&gt;&lt;p&gt; 配置工作，包括设置拦截器 TransactionInterceptor、通知器 DefaultPointcutAdvisor、&lt;br&gt;注入进来的 PlatformTransactionManager 和事务处理属性 TransactionAttribute。&lt;br&gt;这些工作是由 IoC 的 TransactionProxyFactoryBean 完成的。它的实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TransactionProxyFactoryBean&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractSingletonProxyFactoryBean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		implements &lt;span class=&quot;type&quot;&gt;BeanFactoryAware&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 这个拦截器通过 AOP 发挥作用，通过这个拦截器，Spring 封装了事务处理实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TransactionInterceptor&lt;/span&gt; transactionInterceptor = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TransactionInterceptor&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Pointcut&lt;/span&gt; pointcut;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * Set the default transaction manager. This will perform actual&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * transaction management: This class is just a way of invoking it.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @see TransactionInterceptor#setTransactionManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void setTransactionManager(&lt;span class=&quot;type&quot;&gt;PlatformTransactionManager&lt;/span&gt; transactionManager) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transactionInterceptor.setTransactionManager(transactionManager);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * Creates an advisor for this FactoryBean&#39;s TransactionInterceptor.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 创建 Spring AOP 对事务处理的 AOP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; createMainInterceptor() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transactionInterceptor.afterPropertiesSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pointcut != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DefaultPointcutAdvisor&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pointcut, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transactionInterceptor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Rely on default pointcut.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TransactionAttributeSourceAdvisor&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transactionInterceptor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有上面的代码可以知道，TransactionInterceptor 在方法 &lt;code&gt;createMainInterceptor&lt;/code&gt; 中被配置为 Advisor 通知器的一部分。&lt;br&gt;而 &lt;code&gt;createMainInterceptor&lt;/code&gt; 方法在 IoC 容器完成 Bean 的注入依赖时，通过 &lt;code&gt;initiaizeBean&lt;/code&gt; 方法被调用，调用过程如下图:&lt;br&gt;&lt;img src=&quot;/images/createMainInterceptor.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个 &lt;code&gt;afterPropertiesSet&lt;/code&gt; 方法的功能实现如下所示。从代码中可以看到，在建立 TransactionProxyFactoryBean 的事务 &lt;br&gt; 处理拦截器的时候，首先需要对 ProxyFactoryBean 的目标 Bean 设置进行检查，如果这个目标 Bean 的配置是正确的，&lt;br&gt;就会通过创建一个 ProxyFactory 对象，从而实现 AOP 的使用。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterPropertiesSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;Property&#39;target&#39;is required&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;&#39;target&#39; needs to be a bean reference, not a bean name as value&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyClassLoader == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyClassLoader = ClassUtils.getDefaultClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//TransactionFactoryBean 使用 ProxyFactory 完成 AOP 的基本功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ProxyFactory proxyFactory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ProxyFactory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.preInterceptors != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Object interceptor : &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.preInterceptors) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		proxyFactory.addAdvisor(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.advisorAdapterRegistry.wrap(interceptor));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Add the main interceptor (typically an Advisor).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxyFactory.addAdvisor(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.advisorAdapterRegistry.wrap(createMainInterceptor()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.postInterceptors != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Object interceptor : &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.postInterceptors) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		proxyFactory.addAdvisor(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.advisorAdapterRegistry.wrap(interceptor));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxyFactory.copyFrom(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 设置目标源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TargetSource targetSource = createTargetSource(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxyFactory.setTargetSource(targetSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyInterfaces != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	proxyFactory.setInterfaces(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyInterfaces);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isProxyTargetClass()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;// Rely on AOP infrastructure to tell us what interfaces to proxy.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	proxyFactory.setInterfaces(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			ClassUtils.getAllInterfacesForClass(targetSource.getTargetClass(), &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyClassLoader));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxy = proxyFactory.getProxy(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.proxyClassLoader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u4E8B_u52A1_u5904_u7406_u62E6_u622A_u5668_u7684_u5B9E_u73B0&quot;&gt;&lt;a href=&quot;#u4E8B_u52A1_u5904_u7406_u62E6_u622A_u5668_u7684_u5B9E_u73B0&quot; class=&quot;headerlink&quot; title=&quot;事务处理拦截器的实现&quot;&gt;&lt;/a&gt;事务处理拦截器的实现 &lt;/h2&gt;&lt;p&gt; 对事务方法的拦截是通过 &lt;code&gt;invoke&lt;/code&gt; 方法，它使 Proxy 代理对象的回调方法。在事务处理拦截器 TransactionInterceptor 中，&lt;br&gt;&lt;code&gt;invoke&lt;/code&gt;方法的实现代码如下。可以看到，首先获得调用方法的事务处理配置，之后取得配置的 PlatformTransactionManager&lt;br&gt;, 由这个事务处理器来实现事务的创建、提交、回滚操作。&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; invoke(final &lt;span class=&quot;type&quot;&gt;MethodInvocation&lt;/span&gt; invocation) throws &lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;type&quot;&gt;Work&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt; the target class: may be &amp;#123;@code null&amp;#125;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;type&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TransactionAttributeSource&lt;/span&gt; should be passed the target class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; well &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; the &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;, which may be &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; an &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; targetClass = (invocation.getThis() != null ? &lt;span class=&quot;type&quot;&gt;AopUtils&lt;/span&gt;.getTargetClass(invocation.getThis()) : null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;type&quot;&gt;Adapt&lt;/span&gt; to &lt;span class=&quot;type&quot;&gt;TransactionAspectSupport&lt;/span&gt;&#39;s invokeWithinTransaction...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; invokeWithinTransaction(invocation.getMethod(), targetClass, new &lt;span class=&quot;type&quot;&gt;InvocationCallback&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; proceedWithInvocation() throws &lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; invocation.proceed();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; invokeWithinTransaction(&lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; targetClass, final &lt;span class=&quot;type&quot;&gt;InvocationCallback&lt;/span&gt; invocation)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		throws &lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;type&quot;&gt;If&lt;/span&gt; the transaction attribute &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; null, the &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; non-transactional.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	final &lt;span class=&quot;type&quot;&gt;TransactionAttribute&lt;/span&gt; txAttr = getTransactionAttributeSource().getTransactionAttribute(&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;, targetClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	final &lt;span class=&quot;type&quot;&gt;PlatformTransactionManager&lt;/span&gt; tm = determineTransactionManager(txAttr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	final &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; joinpointIdentification = methodIdentification(&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;, targetClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 区分不同类型的 &lt;span class=&quot;type&quot;&gt;PlatformTransactionManager&lt;/span&gt;, 因为他们的调用方式不同，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 像&lt;span class=&quot;type&quot;&gt;DataSourceTransactionManager&lt;/span&gt; 来说，不是 &lt;span class=&quot;type&quot;&gt;CallbackPreferringPlatformTransactionManager&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 不需要通过回调的方式来使用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (txAttr == null || !(tm instanceof &lt;span class=&quot;type&quot;&gt;CallbackPreferringPlatformTransactionManager&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;type&quot;&gt;Standard&lt;/span&gt; transaction demarcation &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; getTransaction &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; commit/rollback calls.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//&lt;span class=&quot;type&quot;&gt;TransactionInfo&lt;/span&gt; 是保存当前事务状态的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;type&quot;&gt;TransactionInfo&lt;/span&gt; txInfo = createTransactionIfNecessary(tm, txAttr, joinpointIdentification);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; retVal = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// &lt;span class=&quot;type&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; an around advice: &lt;span class=&quot;type&quot;&gt;Invoke&lt;/span&gt; the next interceptor &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the chain.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// &lt;span class=&quot;type&quot;&gt;This&lt;/span&gt; will normally &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; a target &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; being invoked.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			retVal = invocation.proceedWithInvocation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		catch (&lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// target invocation exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			completeTransactionAfterThrowing(txInfo, ex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			throw ex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cleanupTransactionInfo(txInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		commitTransactionAfterReturning(txInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; retVal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;## 事务的创建 &lt;br&gt; 我们注意到 TransactionInterceptor 拦截器的 &lt;code&gt;invoke&lt;/code&gt; 回调中使用的 &lt;code&gt;createTransactionIfNecessary&lt;/code&gt; 方法，它是事务创建的起点。它的实现代码如下。在 &lt;code&gt;createTransactionIfNecessary&lt;/code&gt; 方法调用中，可以看到两个重要的数据对象 TransactionStatus 和 TransactionInfo 的调用，这两个对象持有的 &lt;br&gt; 数据是事务处理器对事务进行处理的主要依据，对他们的使用贯穿着整个事务处理的过程。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TransactionInfo &lt;span class=&quot;title&quot;&gt;createTransactionIfNecessary&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PlatformTransactionManager tm, TransactionAttribute txAttr, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String joinpointIdentification)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// If no name specified, apply method identification as transaction name.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (txAttr != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; txAttr.getName() == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		txAttr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DelegatingTransactionAttribute(txAttr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; joinpointIdentification;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TransactionStatus status = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (txAttr != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tm != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 * 这里使用我们定义好的事务方法的配置信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 * 事务创建由事务处理器来完成，同时返回 TransactionStatus 来记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 * 当前的事务状态，包括已经创建的事务。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			status = tm.getTransaction(txAttr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (logger.isDebugEnabled()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Skipping transactional joinpoint [&quot;&lt;/span&gt; + joinpointIdentification +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;string&quot;&gt;&quot;] because no transaction manager has been configured&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 准备 TransactionInfo，它封装了事务处理的配置信息以及 TransactionStatus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareTransactionInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tm, txAttr, joinpointIdentification, status)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TransactionInfo &lt;span class=&quot;title&quot;&gt;prepareTransactionInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PlatformTransactionManager tm,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		TransactionAttribute txAttr, String joinpointIdentification, TransactionStatus status)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TransactionInfo txInfo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TransactionInfo(tm, txAttr, joinpointIdentification);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (txAttr != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// We need a transaction for this method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (logger.isTraceEnabled()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.trace(&lt;span class=&quot;string&quot;&gt;&quot;Getting transaction for [&quot;&lt;/span&gt; + txInfo.getJoinpointIdentification() + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// The transaction manager will flag an error if an incompatible tx already exists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		txInfo.newTransactionStatus(status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// The TransactionInfo.hasTransaction() method will return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// false. We created it only to preserve the integrity of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// the ThreadLocal stack maintained in this class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (logger.isTraceEnabled())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.trace(&lt;span class=&quot;string&quot;&gt;&quot;Don&#39;t need to create transaction for [&quot;&lt;/span&gt; + joinpointIdentification +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;string&quot;&gt;&quot;]: This method isn&#39;t transactional.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// We always bind the TransactionInfo to the thread, even if we didn&#39;t create&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// a new transaction here. This guarantees that the TransactionInfo stack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// will be managed correctly even if no transaction was created by this aspect.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	txInfo.bindToThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; txInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在以上的处理过程完成以后，可以看到具体的事务创建就交给事务处理器来完成了。下面看事务处理器中去了解 &lt;br&gt; 一下更底层的事务创建过程，它被上述代码的 &lt;code&gt;tm.getTransaction(txAttr)&lt;/code&gt; 调用出发，生成一个 TransactionStatus 对象，&lt;br&gt;封装了底层事务对象的创建。在 AbstractPlatformTransactionManager 中，提供了创建事务的模板，代码如下所示。&lt;br&gt;AbstractPlatformTransactionManager 会根据事务属性配置和当前线程绑定的事务信息，对事务是否需要创建、怎样创建 &lt;br&gt; 进行一些通用的处理，然后把事务创建的底层工作交给具体的事务处理器完成(如 DataSourceTransactionManagera)。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TransactionStatus &lt;span class=&quot;title&quot;&gt;getTransaction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TransactionDefinition definition)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; TransactionException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 这个 doGetTransaction 是抽象函数，Transaction 对象的取得由具体的事务处理器实现。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 比如 DataSourceTransactionManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Object transaction = doGetTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Cache debug flag to avoid repeated checks.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; debugEnabled = logger.isDebugEnabled();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * 使用默认的 DefaultTransactionDefinition：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * propagationBehavior=PROPAGATION_REQUIRED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * isolationLevel=ISOLATION_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * timeout=TIMEOUT_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * readOnly=false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Use defaults if no transaction definition given.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		definition = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DefaultTransactionDefinition();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 如果当前线程存在事务，需要根据事务传播属性生成事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isExistingTransaction(transaction)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Existing transaction found -&amp;gt; check propagation behavior to find out how to behave.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleExistingTransaction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(definition, transaction, debugEnabled)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Check definition settings for new transaction.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getTimeout() &amp;lt; TransactionDefinition.TIMEOUT_DEFAULT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InvalidTimeoutException(&lt;span class=&quot;string&quot;&gt;&quot;Invalid transaction timeout&quot;&lt;/span&gt;, definition.getTimeout());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// No existing transaction found -&amp;gt; check propagation behavior to find out how to proceed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_MANDATORY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalTransactionStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;No existing transaction found for transaction marked with propagation&#39;mandatory&#39;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRED ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRES_NEW ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NESTED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SuspendedResourcesHolder suspendedResources = suspend(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (debugEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Creating new transaction with name [&quot;&lt;/span&gt; + definition.getName() + &lt;span class=&quot;string&quot;&gt;&quot;]: &quot;&lt;/span&gt; + definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DefaultTransactionStatus status = newTransactionStatus(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					definition, transaction, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, newSynchronization, debugEnabled, suspendedResources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 * 这里是创建事务的调用，由具体的事务处理器完成，比如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 * HibernateTransactionManager 和 DataSourceTransactionManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			doBegin(transaction, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			prepareSynchronization(status, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			resume(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, suspendedResources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; ex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Error err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			resume(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, suspendedResources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Create&quot;empty&quot;transaction: no actual transaction, but potentially synchronization.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getIsolationLevel() != TransactionDefinition.ISOLATION_DEFAULT &amp;amp;&amp;amp; logger.isWarnEnabled()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.warn(&lt;span class=&quot;string&quot;&gt;&quot;Custom isolation level specified but no actual transaction initiated; &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;string&quot;&gt;&quot;isolation level will effectively be ignored: &quot;&lt;/span&gt; + definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() == SYNCHRONIZATION_ALWAYS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareTransactionStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(definition, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, newSynchronization, debugEnabled, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Create a TransactionStatus for an existing transaction.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TransactionStatus &lt;span class=&quot;title&quot;&gt;handleExistingTransaction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		TransactionDefinition definition, Object transaction, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; debugEnabled)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; TransactionException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NEVER) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalTransactionStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;Existing transaction found for transaction marked with propagation &#39;never&#39;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NOT_SUPPORTED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (debugEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Suspending current transaction&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Object suspendedResources = suspend(transaction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() == SYNCHRONIZATION_ALWAYS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareTransactionStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				definition, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, newSynchronization, debugEnabled, suspendedResources)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRES_NEW) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (debugEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Suspending current transaction, creating new transaction with name [&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					definition.getName() + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SuspendedResourcesHolder suspendedResources = suspend(transaction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DefaultTransactionStatus status = newTransactionStatus(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					definition, transaction, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, newSynchronization, debugEnabled, suspendedResources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			doBegin(transaction, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			prepareSynchronization(status, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException beginEx) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			resumeAfterBeginException(transaction, suspendedResources, beginEx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; beginEx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Error beginErr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			resumeAfterBeginException(transaction, suspendedResources, beginErr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; beginErr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NESTED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isNestedTransactionAllowed()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NestedTransactionNotSupportedException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;string&quot;&gt;&quot;Transaction manager does not allow nested transactions by default -&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;string&quot;&gt;&quot;specify&#39;nestedTransactionAllowed&#39;property with value&#39;true&#39;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (debugEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Creating nested transaction with name [&quot;&lt;/span&gt; + definition.getName() + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (useSavepointForNestedTransaction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Create savepoint within existing Spring-managed transaction,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// through the SavepointManager API implemented by TransactionStatus.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Usually uses JDBC 3.0 savepoints. Never activates Spring synchronization.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DefaultTransactionStatus status =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					prepareTransactionStatus(definition, transaction, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, debugEnabled, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			status.createAndHoldSavepoint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Nested transaction through nested begin and commit/rollback calls.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Usually only for JTA: Spring synchronization might get activated here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// in case of a pre-existing JTA transaction.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DefaultTransactionStatus status = newTransactionStatus(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					definition, transaction, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, newSynchronization, debugEnabled, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			doBegin(transaction, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			prepareSynchronization(status, definition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Assumably PROPAGATION_SUPPORTS or PROPAGATION_REQUIRED.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (debugEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		logger.debug(&lt;span class=&quot;string&quot;&gt;&quot;Participating in existing transaction&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isValidateExistingTransaction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (definition.getIsolationLevel() != TransactionDefinition.ISOLATION_DEFAULT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Integer currentIsolationLevel = TransactionSynchronizationManager.getCurrentTransactionIsolationLevel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentIsolationLevel == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || currentIsolationLevel != definition.getIsolationLevel()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Constants isoConstants = DefaultTransactionDefinition.constants;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalTransactionStateException(&lt;span class=&quot;string&quot;&gt;&quot;Participating transaction with definition [&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						definition + &lt;span class=&quot;string&quot;&gt;&quot;] specifies isolation level which is incompatible with existing transaction: &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						(currentIsolationLevel != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;								isoConstants.toCode(currentIsolationLevel, DefaultTransactionDefinition.PREFIX_ISOLATION) :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;								&lt;span class=&quot;string&quot;&gt;&quot;(unknown)&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!definition.isReadOnly()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TransactionSynchronizationManager.isCurrentTransactionReadOnly()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalTransactionStateException(&lt;span class=&quot;string&quot;&gt;&quot;Participating transaction with definition [&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						definition + &lt;span class=&quot;string&quot;&gt;&quot;] is not marked as read-only but existing transaction is&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareTransactionStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(definition, transaction, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, newSynchronization, debugEnabled, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5177_u4F53_u4E8B_u52A1_u5904_u7406_u5668_u7684_u5B9E_u73B0&quot;&gt;&lt;a href=&quot;#u5177_u4F53_u4E8B_u52A1_u5904_u7406_u5668_u7684_u5B9E_u73B0&quot; class=&quot;headerlink&quot; title=&quot;具体事务处理器的实现&quot;&gt;&lt;/a&gt;具体事务处理器的实现 &lt;/h2&gt;&lt;p&gt; 下面，以 DataSourceTransactionManager 为例，简单介绍一下在具体的事务处理器中，是如何实现事务的创建、提交、&lt;br&gt;回滚这些底层的事务处理操作。在实现过程中，需要把数据库的 Connection 和当前的线程进行绑定。对于事务的提交 &lt;br&gt; 和回滚，都是直接调用 Connection 的提交和回滚方法来完成。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataSourceTransactionManager&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractPlatformTransactionManager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		implements &lt;span class=&quot;type&quot;&gt;ResourceTransactionManager&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;InitializingBean&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DataSource&lt;/span&gt; dataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Object&lt;/span&gt; doGetTransaction() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;type&quot;&gt;DataSourceTransactionObject&lt;/span&gt; txObject = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DataSourceTransactionObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		txObject.setSavepointAllowed(isNestedTransactionAllowed());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;type&quot;&gt;ConnectionHolder&lt;/span&gt; conHolder =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				(&lt;span class=&quot;type&quot;&gt;ConnectionHolder&lt;/span&gt;) &lt;span class=&quot;type&quot;&gt;TransactionSynchronizationManager&lt;/span&gt;.getResource(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		txObject.setConnectionHolder(conHolder, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; txObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TransactionSynchronizationManager 保存了线程级别的变量，当处于同一个事务的方法调用 doGetTransaction 时，getResource 方法返回的是同一个 ConnectionHolder&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; class TransactionSynchronizationManager &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Log logger = LogFactory.getLog(TransactionSynchronizationManager.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ThreadLocal&amp;lt;Map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt;&amp;gt; resources =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NamedThreadLocal&amp;lt;Map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span class=&quot;string&quot;&gt;&quot;Transactional resources&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * Retrieve a resource for the given key that is bound to the current thread.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @param key the key to check (usually the resource factory)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @return a value bound to the current thread (usually the active&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * resource object), or &amp;#123;@code null&amp;#125; if none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @see ResourceTransactionManager#getResourceFactory()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; getResource(&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; actualKey = TransactionSynchronizationUtils.unwrapResourceIfNecessary(&lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; value = doGetResource(actualKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; logger.isTraceEnabled()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			logger.trace(&lt;span class=&quot;string&quot;&gt;&quot;Retrieved value [&quot;&lt;/span&gt; + value + &lt;span class=&quot;string&quot;&gt;&quot;] for key [&quot;&lt;/span&gt; + actualKey + &lt;span class=&quot;string&quot;&gt;&quot;] bound to thread [&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					Thread.currentThread().getName() + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * Actually check the value of the resource that is bound for the given key.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; doGetResource(&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; actualKey) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = resources.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; value = &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(actualKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Transparently remove ResourceHolder that was marked as void...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; ResourceHolder &amp;amp;&amp;amp; ((ResourceHolder) value).isVoid()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.remove(actualKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// Remove entire ThreadLocal if empty...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.isEmpty()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				resources.remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			value = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用Spring声明式事务处理，是通过结合IoC容器和Spring已有的TransactionProxyFactoryBean来对事务管理进行配置。&lt;br&gt;在TransactionProxyFactoryBean中为事务方法配置传播行为、并发事务隔离级别这些事务处理的属性，&lt;br&gt;从而对声明式事务的处理提供指导。&lt;br&gt;声明式事务处理的实现，大致可以分为以下三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取和处理在IoC容器中配置的事务处理属性， 并转为Spring事务处理需要的内部数据结构。&lt;/li&gt;
&lt;li&gt;Spring事务处理模块实现的统一的事务处理过程。包含了处理事务配置属性，以及与现场绑定完成事务处理。Spring通过TransactionInfo和TransactionStatus两个数据对象，在事务处理过程中记录和传递相关执行场景。&lt;/li&gt;
&lt;li&gt;对于底层的事务操作，Spring委托给具体的事务处理器来完成，即PlatformTransactionManager的具体实现。比如DataSourceTransactionManager和HibernateTransactionManager。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="TVDCR" scheme="http://nap-blog.artemisprojects.org/categories/TVDCR/"/>
    
    
      <category term="dynamic reconfiguration" scheme="http://nap-blog.artemisprojects.org/tags/dynamic-reconfiguration/"/>
    
      <category term="spring" scheme="http://nap-blog.artemisprojects.org/tags/spring/"/>
    
      <category term="transacion" scheme="http://nap-blog.artemisprojects.org/tags/transacion/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack 与 DevStack 初探</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/09/devstack-1/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/09/devstack-1/</id>
    <published>2015-11-09T09:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.906Z</updated>
    
    <content type="html">&lt;p&gt;本文会简单介绍一下 OpenStack 平台，它的手动部署方法，以及使用 devstack 脚本自动化部署的方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;OpenStack_u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#OpenStack_u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;OpenStack 简介&quot;&gt;&lt;/a&gt;OpenStack 简介&lt;/h2&gt;&lt;p&gt;OpenStack 是一个开元的云计算管理平台项目，由几个主要的组件组合起来完成具体任务。OpenStack 支持几乎所有类型的云环境，它的目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。它的主要组件及相应的功能如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/openstack-service.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u624B_u52A8_u642D_u5EFAOpenStack_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u624B_u52A8_u642D_u5EFAOpenStack_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;手动搭建 OpenStack 平台&quot;&gt;&lt;/a&gt;手动搭建 OpenStack 平台 &lt;/h3&gt;&lt;p&gt; 我们选择的平台是 Ubuntu14.04。根据 &lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 官方文档 &lt;/a&gt;，我们可以手动部署 OpenStack 的各个服务组件。在部署服务之前，需要首先安装 NTP，以及数据库和消息队列组件。其中 NTP 是为了保证集群中的所有结点有一个全局时钟。而数据库存放每个服务的数据等信息，OpenStack 支持 MySQL 和 MongoDB。消息队列被用来协调各个服务之间的操作和状态，一般用&lt;a href=&quot;http://www.rabbitmq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RabbitMQ&lt;/a&gt; 实现。&lt;/p&gt;
&lt;p&gt;每个服务的安装部署过程都比较类似。首先会建立一个数据库，然后建立一个用户，接着安装依赖的包等等。最后手动修改配置文件(主要为 /etc/service_name/service_name.conf)。&lt;/p&gt;
&lt;h2 id=&quot;DevStack_u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#DevStack_u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;DevStack 简介&quot;&gt;&lt;/a&gt;DevStack 简介&lt;/h2&gt;&lt;p&gt;DevStack 实际上是一个 shell 脚本，可以用来快速搭建 OpenStack 的运行和开发环境，但是 devstack 并不适合用在生产环境中，它比较适合 OpenStack 开发者下载最新的 OpenStack 代码迅速在自己的笔记本上搭建一个开发环境出来。&lt;/p&gt;
&lt;h3 id=&quot;u4F7F_u7528DevStack_u811A_u672C_u8FDB_u884C_u4E00_u952E_u90E8_u7F72&quot;&gt;&lt;a href=&quot;#u4F7F_u7528DevStack_u811A_u672C_u8FDB_u884C_u4E00_u952E_u90E8_u7F72&quot; class=&quot;headerlink&quot; title=&quot;使用 DevStack 脚本进行一键部署&quot;&gt;&lt;/a&gt;使用 DevStack 脚本进行一键部署 &lt;/h3&gt;&lt;p&gt; 使用 devstack 脚本很简单，安装 git，然后下载 devstack 代码到本地，运行 stack.sh 脚本一次设定 MySQL, RabbitMQ, OpenStack Dashboard 和 Keystone 的密码，密码输入后 stack.sh 脚本会自动开始安装必要的软件包和库并下载最新的 OpenStack 及其组件代码，整个过程无需干预。devstack 的下载方式：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;https&lt;/span&gt;://git.openstack.org/openstack-dev/devstack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Devstack 的默认配置文件都保存在 stackrc 文件中，我们也可以创建一个 localrc 文件来修改他的默认设置。它的使用比较简单，但是它的脚本代码一点都不简单，因为它要维护支持多 Linux 发行版。通过阅读脚本，并且与 stack.sh 源码对照。将整个过程自动分为以下若干步骤：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;清楚上次 devstack 脚本运行的缓存。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;根据 stackrc/localrc 等配置文件加载一些系统变量及其他配置选项 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 载入本地变量，根据不同的 Linux 版本进行不同的操作。（详细的操作步骤目前还不是特别熟悉，需要的时候再看）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;配置安装及 &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; 目录等信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;预先设定错误处理过程，即如果在脚本运行过程中发生错误，需要在退出前进行哪些操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;导入每个 OpenStack 服务所需要的 plugins 或是安装服务所用到的 libraries 及 &lt;span class=&quot;built_in&quot;&gt;functions&lt;/span&gt;。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 交互配置，及提供 MySQL,RabbitMQ,Dashboard 以及 Keystone 的密码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装 database 及队列 queue。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装配置本地的 python 环境。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装 service client。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装 service middleware（即每个需要安装的具体服务）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;初始化并启动这些服务。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;保存安装过程退出后，在运行时可能用到的信息，如相关的系统变量等等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打印安装完成的信息。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5BF9_u6BD4devstack_u90E8_u7F72_u4EE5_u53CA_u624B_u52A8_u90E8_u7F72_u7684_u8FC7_u7A0B_uFF0C_u4EE5nova_u670D_u52A1_u4E3A_u4F8B_u3002&quot;&gt;&lt;a href=&quot;#u5BF9_u6BD4devstack_u90E8_u7F72_u4EE5_u53CA_u624B_u52A8_u90E8_u7F72_u7684_u8FC7_u7A0B_uFF0C_u4EE5nova_u670D_u52A1_u4E3A_u4F8B_u3002&quot; class=&quot;headerlink&quot; title=&quot;对比 devstack 部署以及手动部署的过程，以 nova 服务为例。&quot;&gt;&lt;/a&gt;对比 devstack 部署以及手动部署的过程，以 nova 服务为例。&lt;/h3&gt;&lt;h4 id=&quot;u624B_u52A8_u90E8_u7F72&quot;&gt;&lt;a href=&quot;#u624B_u52A8_u90E8_u7F72&quot; class=&quot;headerlink&quot; title=&quot;手动部署&quot;&gt;&lt;/a&gt;手动部署&lt;/h4&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE nova DATABASE&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE nova Users&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE compute service API endpoint&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt-get install $(packages)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/nova/nova.conf&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service $(*) restart&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u81EA_u52A8_u90E8_u7F72_28stack-sh_29&quot;&gt;&lt;a href=&quot;#u81EA_u52A8_u90E8_u7F72_28stack-sh_29&quot; class=&quot;headerlink&quot; title=&quot;自动部署 (stack.sh)&quot;&gt;&lt;/a&gt; 自动部署(stack.sh)&lt;/h4&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Line756, install_nov&lt;span class=&quot;built_in&quot;&gt;a_client&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Line811, stack_install_nova, 这两个函数主要进行的就是 git clone 和 pip install, 即下载安装所需依赖包。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Line815, configure_nova，主要对 /etc/nova/nova.conf 进行配置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Line1131, init_nova, 主要进行初始化数据库等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Line1252, start_nova，启动 nova 服务。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文会简单介绍一下OpenStack平台，它的手动部署方法，以及使用devstack脚本自动化部署的方法。&lt;/p&gt;
    
    </summary>
    
      <category term="OpenStack" scheme="http://nap-blog.artemisprojects.org/categories/OpenStack/"/>
    
    
      <category term="devstack" scheme="http://nap-blog.artemisprojects.org/tags/devstack/"/>
    
      <category term="openstack" scheme="http://nap-blog.artemisprojects.org/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>Restful Api for NAP</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/09/nap-restapi/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/09/nap-restapi/</id>
    <published>2015-11-09T07:54:17.000Z</published>
    <updated>2016-04-06T03:06:29.908Z</updated>
    
    <content type="html">&lt;p&gt;NAP 的 restful api 是通过 JSON 来对平台进行管理，包括平台硬件的监控、应用的创建、状态的查询以及文件管理等。restful api 是通过 Django 自身提供的 &lt;a href=&quot;http://www.django-rest-framework.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;REST framework&lt;/a&gt; 实现的，详见链接。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;app_api_3A__u5E94_u7528_u7684_u72B6_u6001_u4FE1_u606F&quot;&gt;&lt;a href=&quot;#app_api_3A__u5E94_u7528_u7684_u72B6_u6001_u4FE1_u606F&quot; class=&quot;headerlink&quot; title=&quot;app_api: 应用的状态信息&quot;&gt;&lt;/a&gt;app_api: 应用的状态信息 &lt;/h2&gt;&lt;p&gt; 该部分是对运行在 NAP 平台上的应用进行管理的接口，包括应用和服务的创建、应用状态的获取以及应用的开启和暂停等。&lt;/p&gt;
&lt;p&gt;所有请求使用 token 进行认证，既用户进行信息的请求前，需要先认证，即下面 5 对应的操作，认证成功后，在进行请求时，需要将 token 置于 Http 的头部字段 Authorizations 中，curl 和 httpie 对应的示例如下：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -&lt;span class=&quot;constant&quot;&gt;X GET &lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/127.0.0.1:8000/app&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/porjects/&lt;/span&gt; -&lt;span class=&quot;constant&quot;&gt;H &lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;Authorizations:Token d83***3d8&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http &lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/127.0.0.1:8000/app&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/projects/&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Authorizations:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;Token d83***3d8&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;projects 的请求&lt;br&gt; - 方法: GET&lt;br&gt; - url: /app/projects&lt;br&gt; - 参数: {‘username’:xxx, ‘start’:xxx, ‘limit’:xxx}&lt;br&gt; - 返回值:&lt;br&gt;   参数错误时，返回 400&lt;br&gt;   token 错误时，返回 401 UNAUTHORIZED&lt;br&gt;   参数正确，返回 Json 格式数据&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;items&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;string&quot;&gt;&quot;git@github.com:monkey-H/rest_app.git&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;string&quot;&gt;&quot;test2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;string&quot;&gt;&quot;git@github.com:monkey-H/rest_app.git&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;total&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;success&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;projects 创建&lt;br&gt; - 方法: POST&lt;br&gt; - url: /app/projects&lt;br&gt; - 参数: {‘username’:xxx, ‘project’:xxx, ‘url’:xxx}&lt;br&gt; - 返回值:&lt;br&gt;   请求参数错误情况下返回 400&lt;br&gt;   token 错误时，返回 401 UNAUTHORIZED&lt;br&gt;   参数正确，根据提供的参数，返回相应的信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;log&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;project 删除&lt;br&gt; - 方法: DELETE&lt;br&gt; - url: /app/projects/exp_poj&lt;br&gt; - 参数: {}&lt;br&gt; - 返回值:&lt;br&gt;   token 错误时，返回 401 UNAUTHORIZED&lt;br&gt;   认证成功, 返回相应的信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Delete&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; success/false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log: something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个 project 对应的 services 列表&lt;br&gt; - 方法: GET&lt;br&gt; - url: /app/projects/exp_poj&lt;br&gt; - 参数: {}&lt;br&gt; - 返回值:&lt;br&gt;   请求错误情况下返回 400&lt;br&gt;   token 认证错误返回 401 UNAUTHORIZED&lt;br&gt;   正确时，返回请求的实例，如下:   &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;items&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;&lt;span class=&quot;attribute&quot;&gt;ip&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;114.212.189.140&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;testmpi_1_master&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &quot;&lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;XX&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &quot;&lt;span class=&quot;attribute&quot;&gt;status&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;XX&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;&lt;span class=&quot;attribute&quot;&gt;ip&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;114.212.189.136&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;testmpi_1_slaves@1&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &quot;&lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;XX&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &quot;&lt;span class=&quot;attribute&quot;&gt;status&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;XX&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &quot;&lt;span class=&quot;attribute&quot;&gt;total&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &quot;&lt;span class=&quot;attribute&quot;&gt;success&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户认证使用的是 rest-framework 自带的 TokenAuthentication.&lt;br&gt; - 方法: Post&lt;br&gt; - url: /auth&lt;br&gt; - 参数: {‘username’:xxx, ‘password’:xxx}&lt;br&gt; - 返回值:&lt;br&gt;   请求正确，并成功认证返回    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    token: &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   请求错误时, 认证失败时会返回 400, 并给出相应的提示信息。&lt;br&gt; 使用 httpie 进行请求示例：&lt;/p&gt;
 &lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;http&lt;/span&gt; --form post &lt;span class=&quot;url&quot;&gt;http://127.0.0.1:8000/app/auth&lt;/span&gt; username=&lt;span class=&quot;string&quot;&gt;&quot;***&quot;&lt;/span&gt; password=&lt;span class=&quot;string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;filebrowser_3A_u8BBF_u95EE_u4E3B_u673A_u6587_u4EF6_u7CFB_u7EDF&quot;&gt;&lt;a href=&quot;#filebrowser_3A_u8BBF_u95EE_u4E3B_u673A_u6587_u4EF6_u7CFB_u7EDF&quot; class=&quot;headerlink&quot; title=&quot;filebrowser: 访问主机文件系统&quot;&gt;&lt;/a&gt;filebrowser: 访问主机文件系统 &lt;/h2&gt;&lt;p&gt; 该部分是从开源项目 &lt;a href=&quot;https://github.com/revolunet/django-extjs-filebrowser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;django-extjs-filebrowser&lt;/a&gt; 的后台 Django 部分直接迁移出来的，并没有使用 Django REST framework。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;请求一个文件夹下的目录树&lt;br&gt; - 方法: POST&lt;br&gt; - url: /fs/filebrowser/api/&lt;br&gt; - 参数: {‘cmd’: “get”, ‘path’: “key/path”}&lt;br&gt;  (key 为配置文件中主机提供的文件系统的根目录, 目前只有 localfolder 可选,path 为请求的路径)&lt;br&gt; - 返回值: json 格式数据，示例如下:   &lt;/p&gt;
 &lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ http --form POST &lt;span class=&quot;attribute&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;114.212&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.86&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.206&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;/fs&lt;span class=&quot;regexp&quot;&gt;/filebrowser/api/&lt;/span&gt; cmd=&lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt; path=&lt;span class=&quot;string&quot;&gt;&quot;localfolder/new/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(请求 localfolder 对应的根目录下 &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; 的目录树)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;created_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-10-27T13:43:31.150469&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;iconCls&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;icon-file-txt&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;items&quot;&lt;/span&gt;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;leaf&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;modified_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-10-27T13:43:31.110469&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;hello6.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;created_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-11-09T09:11:14.739974&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;iconCls&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;icon-file-jpg&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;items&quot;&lt;/span&gt;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;leaf&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;modified_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-10-27T14:02:38.394490&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;925306&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;test.jpg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建目录&lt;br&gt; - 方法: POST&lt;br&gt;   - url: fs/filebrowser/api/&lt;br&gt;   - 参数: {‘cmd’: “newdir”, ‘path’: “key/path”}&lt;br&gt;   - 返回值:&lt;br&gt; 参数正确时, 返回数据&lt;/p&gt;
 &lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 否则根据情况返回 400,404  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重命名&lt;br&gt;   - 方法: POST&lt;br&gt;   - url: fs/filebrowser/api/&lt;br&gt;   - 参数: {‘cmd’: “rename”, ‘oldname’: “key/path”, ‘newname’: “key/path”}&lt;br&gt;   - 返回值:&lt;br&gt; 参数正确时, 返回{‘success’: True}, 错误时返回 400    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除文件或文件夹&lt;br&gt; - 方法: POST&lt;br&gt; - url: fs/filebrowser/api/&lt;br&gt;   - 参数: {‘cmd’: “delete”,’path’: “key/path”}&lt;br&gt;   - 返回值:&lt;br&gt; 参数正确时, 返回{‘success’: True}, 错误时返回 404  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看文件:&lt;br&gt;   - 方法: GET&lt;br&gt; - url: fs/filebrowser/api/&lt;br&gt;   - 参数: {‘cmd’: “view”, ‘file’: “key/path”}&lt;br&gt;   - 返回值:&lt;br&gt; 参数正确时, 返回文件的内容, 错误时返回 404  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载文件:&lt;br&gt;   - 方法: GET&lt;br&gt;   - url: fs/filebrowser/api/&lt;br&gt;   - 参数: {‘cmd’: “download”, ‘file’: “key/path”}&lt;br&gt;   - 返回值:&lt;br&gt; 参数正确时, 下载文件, 错误时返回 404   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上传文件:&lt;br&gt; - 方法: POST&lt;br&gt; - url: /fs/upload/&lt;br&gt; - 参数, 请求方式有两种:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* XMLHttpRequest:  
 &lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;http://127.0.0.1:8000/fs/filebrowser/upload/&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;X-File-Name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;localfolder/new/&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;X-Requested-With&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XMLHttpRequest&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.send(&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

* 一般 post 请求  
 &lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;formdata = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FormData()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formdata.&lt;span class=&quot;keyword&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;localfolder/new&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formdata.&lt;span class=&quot;keyword&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;file1&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;http://127.0.0.1:8000/fs/filebrowser/upload/&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.send(formdata);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; - 返回值:&lt;br&gt; 参数等正确时，返回  &lt;/p&gt;
 &lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;:True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       files:&lt;span class=&quot;collection&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 请求错误时，返回 400 或 404 异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;NAP的restful api是通过JSON来对平台进行管理，包括平台硬件的监控、应用的创建、状态的查询以及文件管理等。restful api是通过Django自身提供的&lt;a href=&quot;http://www.django-rest-framework.org/&quot;&gt;REST framework&lt;/a&gt;实现的，详见链接。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://nap-blog.artemisprojects.org/categories/web/"/>
    
    
      <category term="restful" scheme="http://nap-blog.artemisprojects.org/tags/restful/"/>
    
  </entry>
  
  <entry>
    <title>HBase ORM 以及 schema 设计</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/08/east-2/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/08/east-2/</id>
    <published>2015-11-08T08:00:32.000Z</published>
    <updated>2016-04-06T03:06:29.906Z</updated>
    
    <content type="html">&lt;p&gt;近期在做从 oracle 到 HBase 的数据库迁移，接触到了 ORM 以及如何设计 HBase 的 schema，下面把这几天的学习成果记录下来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h1 id=&quot;schema_u8BBE_u8BA1&quot;&gt;&lt;a href=&quot;#schema_u8BBE_u8BA1&quot; class=&quot;headerlink&quot; title=&quot;schema 设计&quot;&gt;&lt;/a&gt;schema 设计&lt;/h1&gt;&lt;p&gt;schema 我的理解就是把逻辑上的数据模型和物理上的存储实现结合起来。考虑到 nosql 最大的特点在于横向扩展方便，结合 HBase 按列存储的特点（同一个 column family，CF）存储在同一个 store 中，它的 schema（schema 用词可能不准，因为它是 schemaless 的）设计主要考虑如何扩展方便、如何减少存储 / 查询开销。一般有如下三条设计原则 Denormalization、Duplication 和 Intelligent Keys。&lt;/p&gt;
&lt;h2 id=&quot;u53CD_u5E8F_u5217_u5316_u548C_u590D_u7528&quot;&gt;&lt;a href=&quot;#u53CD_u5E8F_u5217_u5316_u548C_u590D_u7528&quot; class=&quot;headerlink&quot; title=&quot;反序列化和复用&quot;&gt;&lt;/a&gt;反序列化和复用 &lt;/h2&gt;&lt;p&gt; 相对于 sql 是把大表细分为小表，再通过 join 操作来合并成大表；nosql 往往是通过数据冗余把小表写大，两个实体共用同一个实现，也就是增加一些字段从而避免 join 问题，因为 nosql 存储廉价。其实 join 实质就是把多张小表合并成一张大表，对应 mongo 就是嵌套，对应 HBase/cassandra 就是把小表用更多的字段写大然后用 row key 连接起来。当数据量大的时候不 join 比 join 好是指合并的代价大于存储的代价，所以 nosql 通过反序列化刚好不用 join 才得以体现优势。hbasecon2012 上有一篇 HBase Schema Design（&lt;a href=&quot;http://www.slideshare.net/cloudera/5-h-base-schemahbasecon2012&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how i learned to stop worrying and love denormalization&lt;/a&gt;）详细介绍了 denormalization。&lt;/p&gt;
&lt;h2 id=&quot;rowkey_u8BBE_u8BA1&quot;&gt;&lt;a href=&quot;#rowkey_u8BBE_u8BA1&quot; class=&quot;headerlink&quot; title=&quot;rowkey 设计&quot;&gt;&lt;/a&gt;rowkey 设计 &lt;/h2&gt;&lt;p&gt; 因为 HBase 中数据是根据 rowkey 索引的，相近的 rowkey（默认是字典序）在同一个 regionserver 上，rowkey 设计主要考虑把同时使用的数据存放在一起，减少查询开销，这是根据业务需求定的。比如利用时间戳做 rowkey 的一部分（把 MAX_VALUE-timestamp 加到 rowkey 的最后）可以查询到最近使用的，再比如如下这个例子把关系型数据库中的两张表的主键合在一起。&lt;/p&gt;
&lt;p&gt;一个订单例子的转变如下：&lt;br&gt;&lt;img src=&quot;/images/rdbms-1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/hbase-1.png&quot;alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上面这个例子可以看出，在 rdbms 中，通常是通过 service order table 根据 customer 和 product 来 left join 这两张表进行查询；而在 HBase 中，对于 service order 这张表如果查询 customer 就没必要做 join 了，之前通过外键索引到 customer 信息，在这里已经保存在 service order 里了。这虽然会带来额外的存储，但在 nosql 中这是很正常的操作方式。&lt;br&gt;此外，这个 rowkey 的设计既能找到对应的 product 和 customer，并且把所有 A 开头的商品保存在了一起，如果查询经常是某一类商品一起查询的话，那这种设计方式就很合理。&lt;/p&gt;
&lt;h2 id=&quot;u8F6C_u6362_u4F8B_u5B50&quot;&gt;&lt;a href=&quot;#u8F6C_u6362_u4F8B_u5B50&quot; class=&quot;headerlink&quot; title=&quot;转换例子&quot;&gt;&lt;/a&gt;转换例子 &lt;/h2&gt;&lt;p&gt; 一般来说 HBase schema 的设计主要考虑这三点，再看两个根据这三条原则对应到数据转换例子。&lt;/p&gt;
&lt;h3 id=&quot;u4E00_u5BF9_u591A&quot;&gt;&lt;a href=&quot;#u4E00_u5BF9_u591A&quot; class=&quot;headerlink&quot; title=&quot;一对多&quot;&gt;&lt;/a&gt;一对多&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rdbms-2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/hbase-2.png&quot;alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u591A_u5BF9_u591A&quot;&gt;&lt;a href=&quot;#u591A_u5BF9_u591A&quot; class=&quot;headerlink&quot; title=&quot;多对多&quot;&gt;&lt;/a&gt;多对多&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rdbms-3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/hbase-3.png&quot;alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;第二个多对多的例子就是把两个一对多结合起来，没有借助一张中间表，这是因为 HBase 的 CF 是可以随意添加 column 的，很灵活，所以刚好可以这么做。&lt;/p&gt;
&lt;h1 id=&quot;u5173_u4E8E_u770B_u7684_u4E24_u7BC7_u8BBA_u6587&quot;&gt;&lt;a href=&quot;#u5173_u4E8E_u770B_u7684_u4E24_u7BC7_u8BBA_u6587&quot; class=&quot;headerlink&quot; title=&quot;关于看的两篇论文&quot;&gt;&lt;/a&gt;关于看的两篇论文 &lt;/h1&gt;&lt;p&gt; 我感觉这两篇论文侧重于两个方向，这在最后的问题中会说明，然后基本也是 guide。&lt;br&gt;论文 MySQL to NoSQL Data Modeling Challenges in Supporting Scalability 主要写了如何迁移 tweet（重点在第 6 段），主要也是 schema 变化的描述，基本思想就是上面三点。&lt;br&gt;另一篇 ONDM: an Object-NoSQL Datastore Mapper 介绍了一个 ORM 映射框架 ORM，现在 ORM 框架已经很多了，这个和现在的也差不多，下面介绍一下 ORM。&lt;/p&gt;
&lt;h1 id=&quot;ORM&quot;&gt;&lt;a href=&quot;#ORM&quot; class=&quot;headerlink&quot; title=&quot;ORM&quot;&gt;&lt;/a&gt;ORM&lt;/h1&gt;&lt;p&gt;ORM(Object Relational Mapping)通常是指对象和关系型数据的映射，对应在 nosql 中也叫 ODM(D:data)，OGM(G:grid）。这个东西可以让程序员不用关心数据库的设计，而只用关系对象之间的关系。我主要是了解了一些针对 nosql 的 ORM 框架，比如 hibernate ogm，kundera，datanucleus。&lt;/p&gt;
&lt;p&gt;从上层来看他们大都是一样的，都是把对象（java 中的 class）通过注解的方式映射到 nosql 中，最简单的数据模型包括实体、属性和关系。比如这样：&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@PersistenceCapable&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@Extensions&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Extension&lt;/span&gt;(vendorName = &lt;span class=&quot;string&quot;&gt;&quot;datanucleus&quot;&lt;/span&gt;, key = &lt;span class=&quot;string&quot;&gt;&quot;hbase.columnFamily.meta.bloomFilter&quot;&lt;/span&gt;, value = &lt;span class=&quot;string&quot;&gt;&quot;ROWKEY&quot;&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Extension&lt;/span&gt;(vendorName = &lt;span class=&quot;string&quot;&gt;&quot;datanucleus&quot;&lt;/span&gt;, key = &lt;span class=&quot;string&quot;&gt;&quot;hbase.columnFamily.meta.inMemory&quot;&lt;/span&gt;, value = &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class MyClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@PrimaryKey&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private long id; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// column family data, name of attribute blob &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Column&lt;/span&gt;(name = &lt;span class=&quot;string&quot;&gt;&quot;data:blob&quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String blob; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// column family meta, name of attribute firstName &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Column&lt;/span&gt;(name = &lt;span class=&quot;string&quot;&gt;&quot;meta:firstName&quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String firstName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// column family meta, name of attribute firstName &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Column&lt;/span&gt;(name = &lt;span class=&quot;string&quot;&gt;&quot;meta:lastName&quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;attr_selector&quot;&gt;[... getter and setter ...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这些 @符号就把该类中的属性映射到 HBase 中了，至于数据库连接和 class 与 CF 的映射通常是通过 xml 文件来描述。&lt;/p&gt;
&lt;h1 id=&quot;u601D_u8003&quot;&gt;&lt;a href=&quot;#u601D_u8003&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考 &lt;/h1&gt;&lt;p&gt;1、根据先有对象的逻辑，再设计 HBase，其实考虑的就是业务需求，把哪些字段放在一起，rowkey 怎么设计，哪些需要 join 合并起来等等。&lt;br&gt;2、迁移数据的话肯定是设计好 schema 然后抽数据(不会通过两次 ORM 来迁移)，ORM 只是说在开发过程中层次分离，偏向于数据库开发，而不是数据库迁移。&lt;br&gt; 所以感觉这两个不是同一个东西 = =||&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;近期在做从oracle到HBase的数据库迁移，接触到了ORM以及如何设计HBase的schema，下面把这几天的学习成果记录下来。&lt;/p&gt;
    
    </summary>
    
      <category term="east" scheme="http://nap-blog.artemisprojects.org/categories/east/"/>
    
    
      <category term="ORM" scheme="http://nap-blog.artemisprojects.org/tags/ORM/"/>
    
      <category term="nosql" scheme="http://nap-blog.artemisprojects.org/tags/nosql/"/>
    
      <category term="schema" scheme="http://nap-blog.artemisprojects.org/tags/schema/"/>
    
  </entry>
  
  <entry>
    <title>跨主机的 docker 容器编排 nap-compose （二）</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/07/nap-compose-2/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/07/nap-compose-2/</id>
    <published>2015-11-07T06:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.908Z</updated>
    
    <content type="html">&lt;p&gt;简化的跨主机的多容器应用编排和部署工具的实现。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;我们已经在 &lt;a href=&quot;http://nap-group.herokuapp.com/2015-11/nap-compose-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 前一篇文章 &lt;/a&gt; 介绍了背景和思路，现在该写代码了。&lt;br&gt;我们准备用 python 3 来实现。先了解一下 docker api 和 python ssh 的库作为准备工作。主要部分在于梳理 docker-compose 的源码，然后在其基础上修改 docker client 相关的函数，改成我们的实现，从而重用 compose 已经实现的解析&lt;code&gt;docker-compose.yml&lt;/code&gt;，生成容器间连接关系和获取容器域名的功能。&lt;/p&gt;
&lt;h2 id=&quot;Docker_Remote_API&quot;&gt;&lt;a href=&quot;#Docker_Remote_API&quot; class=&quot;headerlink&quot; title=&quot;Docker Remote API&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://docs.docker.com/engine/reference/api/docker_remote_api_v1.21/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker Remote API&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述 &lt;/h3&gt;&lt;p&gt; 之前我们是通过定义 fleet 的 service unit 来管理多个主机上的 docker daemon 的。在 service unit 中可以直接写 docker 命令，fleet 会把 service 分派给各主机的 systemd 来执行。&lt;br&gt;现在我们要通过 docker 提供的 restful api 来编程直接与 docker daemon 交互。restful api 返回的是 json 格式的数据。有很多官方或非官方的 repo 把 restful api 包装成各种 &lt;a href=&quot;http://docs.docker.com/engine/reference/api/remote_api_client_libraries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 主流编程语言的 docker client 库&lt;/a&gt;，这样我们就不用自己写解析 json 的那部分代码了。&lt;/p&gt;
&lt;h3 id=&quot;u5F00_u542Fapi_u8BBF_u95EE_u7684tcp_u7AEF_u53E3&quot;&gt;&lt;a href=&quot;#u5F00_u542Fapi_u8BBF_u95EE_u7684tcp_u7AEF_u53E3&quot; class=&quot;headerlink&quot; title=&quot;开启 api 访问的 tcp 端口&quot;&gt;&lt;/a&gt;开启 api 访问的 tcp 端口 &lt;/h3&gt;&lt;p&gt; 要远程访问 docker api，首先要开启 tcp 端口。&lt;br&gt;对 ubuntu 14.04 系统，在 &lt;code&gt;/etc/default/docker&lt;/code&gt; 中增加一行：&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;setting&quot;&gt;DOCKER_OPTS=&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;CoreOS 和 RHEL/CentOS 使用 systemd 来管理系统服务，Ubuntu 15.04 及以后的版本也改为 systemd，设置方法有所不同，具体可以参考 &lt;a href=&quot;https://coreos.com/os/docs/latest/customizing-docker.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoreOS 的文档&lt;/a&gt; 和&lt;a href=&quot;http://www.dockone.io/question/616&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dockone 上的相关问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置后重新启动 docker daemon，即可从通过 2375 访问 docker api。另外后面的 &lt;code&gt;unix:///var/run/docker.sock&lt;/code&gt; 是给本机的 docker client 命令行使用的。我们实验的主机（VM）是 ubuntu 15.10，IP 是&lt;code&gt;10.1.1.5&lt;/code&gt;，安装了 docker 1.9.0，测试一下 api：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//10.1.1.5:2375/version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以用 chrome 访问这个地址。推荐安装 json formatter 这个 chrome 插件，它可以格式化显示 json 数据。&lt;/p&gt;
&lt;p&gt;返回的结果如图：&lt;br&gt;&lt;img src=&quot;/images/remote-api.png&quot; height=&quot;240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;直接暴露 tcp 端口是有安全问题的。docker api 支持登录验证，不过这里为了简便没有使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;docker-py_u7B80_u5355_u793A_u4F8B&quot;&gt;&lt;a href=&quot;#docker-py_u7B80_u5355_u793A_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;docker-py 简单示例&quot;&gt;&lt;/a&gt;docker-py 简单示例 &lt;/h3&gt;&lt;p&gt; 我们使用的 &lt;a href=&quot;https://github.com/docker/docker-py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-py&lt;/a&gt; 是 docker 官方实现的。在开发机器上通过 pip 安装这个库。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt-get install python3-pip  &lt;span class=&quot;comment&quot;&gt;# 对 ubuntu; windows 在安装 python 时会同时安装 pip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip3 install docker-py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面是启动容器、获取运行容器列表和容器 ip 的示例代码&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client = docker.Client(base_url= &lt;span class=&quot;string&quot;&gt;&#39;http://10.1.1.5:2375&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;container = client.create_container(image=&lt;span class=&quot;string&quot;&gt;&#39;ubuntu:latest&#39;&lt;/span&gt;,command=&lt;span class=&quot;string&quot;&gt;&#39;echo hello&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(container[&lt;span class=&quot;string&quot;&gt;&#39;Id&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client.start(container)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;containers = client.containers()           &lt;span class=&quot;comment&quot;&gt;# /containers/json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info = client.inspect_container(item)  &lt;span class=&quot;comment&quot;&gt;# /containers/&amp;#123;id&amp;#125;/json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;[&amp;#123;0&amp;#125;] &amp;#123;1&amp;#125; &amp;#123;2&amp;#125;&quot;&lt;/span&gt;.format(item[&lt;span class=&quot;string&quot;&gt;&#39;Id&#39;&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 info[&lt;span class=&quot;string&quot;&gt;&#39;NetworkSettings&#39;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&#39;IPAddress&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 info[&lt;span class=&quot;string&quot;&gt;&#39;Name&#39;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(info[&#39;HostsPath&#39;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行的结果示例如下：&lt;br&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;C:\&lt;span class=&quot;title&quot;&gt;Python3&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;python.exe&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;D&lt;/span&gt;:/&lt;span class=&quot;title&quot;&gt;Code&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;Py&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;main.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;title&quot;&gt;f4c28710d&lt;/span&gt;] 172.17.0.4 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[7&lt;span class=&quot;title&quot;&gt;edce4fce&lt;/span&gt;] 172.17.0.6 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;swarm&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;agent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[3&lt;span class=&quot;title&quot;&gt;c71749ce&lt;/span&gt;] 172.17.0.7 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;swarm&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;manager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;title&quot;&gt;ea3527753&lt;/span&gt;] 172.17.0.5 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[3&lt;span class=&quot;title&quot;&gt;e44ea102&lt;/span&gt;] 172.17.0.2 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;certs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[184391&lt;span class=&quot;title&quot;&gt;e5d&lt;/span&gt;] 172.17.0.3 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;discovery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;title&quot;&gt;b9d60b44e&lt;/span&gt;] 172.17.0.8 /&lt;span class=&quot;title&quot;&gt;shipyard&lt;/span&gt;-&lt;span class=&quot;title&quot;&gt;rethinkdb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;finished&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;code&lt;/span&gt; 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个库的函数与 docker remote api 文档有很直接的对应关系。函数的返回值也是与文档对应的 json 对象，可以通过字典的方式非常方便的获取相关字段的值。&lt;/p&gt;
&lt;h2 id=&quot;python_ssh&quot;&gt;&lt;a href=&quot;#python_ssh&quot; class=&quot;headerlink&quot; title=&quot;python ssh&quot;&gt;&lt;/a&gt;python ssh&lt;/h2&gt;&lt;p&gt;通过 ssh 操作远程主机是不太规范的做法。原则上说，我们也可以不必使用 remote api，而是直接 ssh 到各主机，然后执行 docker 命令，甚至做任何系统操作。不过我们不想集齐 docker 三件套，用 docker engine 来修改 hosts，而又没有相关的 api，所以只能用 ssh 了。&lt;/p&gt;
&lt;p&gt;这里我们参考《Python 自动化运维》，使用 &lt;a href=&quot;https://github.com/paramiko/paramiko&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;paramiko&lt;/a&gt; 这个库。安装过程费了点周折。&lt;/p&gt;
&lt;p&gt;先说 Windows 上的安装，直接用 &lt;code&gt;pip install paramiko&lt;/code&gt; 是装不上的，会卡在依赖项 &lt;code&gt;pycrypto&lt;/code&gt; 上。安装 &lt;code&gt;pycrypto&lt;/code&gt; 过程中需要 MSVC 来编译，不过我没有安装 MSVC，Google 到的一个预编译的二进制文件不支持 python 3.5，好在找到另一个预编译的，安装方法如下：&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install --use-wheel --&lt;span class=&quot;keyword&quot;&gt;no&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;index&lt;/span&gt; --&lt;span class=&quot;keyword&quot;&gt;find&lt;/span&gt;-links=http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/sfbahr/PyCrypto-Wheels/raw/master/pycrypto-&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-cp35-none-win_amd64.whl pycrypto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install paramiko&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 Ubuntu 上还要麻烦些。在 Ubuntu 15.10 上，默认有 python 2.7 和 python 3.4，在安装 &lt;code&gt;python3-pip&lt;/code&gt; 时，会自动安装 gcc，g++ 等开发工具，还有 python3.5，不过没有安装 python3.5-dev，导致无法编译&lt;code&gt;pycrypto&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS, pip3 默认使用 python3.5，而不是系统自带的 python3.4，所以最好把 &lt;code&gt;/usr/bin/python3&lt;/code&gt; 这个符号链接从 python3.4 改成 python3.5。&lt;br&gt;按照下面的步骤安装：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt-get &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; python3.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; pycrypto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; paramiko&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面是 Windows 上的一个示例&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import paramiko&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hostname=&lt;span class=&quot;string&quot;&gt;&#39;10.1.1.5&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;username=&lt;span class=&quot;string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paramiko&lt;span class=&quot;class&quot;&gt;.util&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.log_to_file&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;D:\ssh.log&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh = paramiko.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;SSHClient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;load_system_host_keys&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;key=paramiko&lt;span class=&quot;class&quot;&gt;.RSAKey&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.from_private_key_file&lt;/span&gt;(os&lt;span class=&quot;class&quot;&gt;.path&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.expanduser&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;D:\VM\ssh\id_rsa&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;set_missing_host_key_policy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(paramiko.AutoAddPolicy()&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(hostname=hostname, username=username, pkey=key)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stdin,stdout,stderr=ssh.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;exec_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&#39;uname -a&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(stdout.read()&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个例子是通过 ssh key 登录到 VM 上，然后执行 &lt;code&gt;uname -a&lt;/code&gt; 命令。返回的结果如下：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;b&#39;Linux x &lt;span class=&quot;number&quot;&gt;4.2.0-16&lt;/span&gt;-generic #19-Ubuntu SMP Thu Oct &lt;span class=&quot;number&quot;&gt;8 15:35:06&lt;/span&gt; UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u68B3_u7406docker-compose_u7684_u6E90_u7801&quot;&gt;&lt;a href=&quot;#u68B3_u7406docker-compose_u7684_u6E90_u7801&quot; class=&quot;headerlink&quot; title=&quot;梳理 docker-compose 的源码&quot;&gt;&lt;/a&gt;梳理 docker-compose 的源码 &lt;/h2&gt;&lt;p&gt;OK，准备工作基本就绪。下面梳理一下&lt;code&gt;docker-compose up&lt;/code&gt; 命令来创建、启动和连接多个容器涉及的代码，主要是参考 &lt;a href=&quot;https://github.com/docker/compose&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github 上的源码&lt;/a&gt; 和《Docker 容器与容器云》的 6.1.2，下面的图参考了这本书的图 6.1。&lt;br&gt;&lt;img src=&quot;/images/compose.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project 对象从 compose.yml 获取 service 列表，并根据 link 计算出各 service 的依赖关系，以此为顺序来创建各 service。&lt;/li&gt;
&lt;li&gt;docker-compose 是针对单个 docker engine 的，project 对象只关联了一个 docker-client 对象，首先我们要把它改成一个列表；&lt;/li&gt;
&lt;li&gt;service 对象也是只关联了一个 docker-client 对象，它是从 project 传递过来的，最终传给 container 对象来创建和启动容器；&lt;/li&gt;
&lt;li&gt;从 client 列表中指派一个 client 给 container 对象，就是所谓的调度了。因为一个 service 会对应多个 container，这些 container 应该可以跨 Host，所以调度应该发生在 service→container 这个阶段；&lt;/li&gt;
&lt;li&gt;我们需要记录下来哪个 docker-client 创建了哪个 service 下面的 container，容器的 id，以及容器启动后的 ip 地址，这样我们再 ssh 到那个 Host 上去，修改对应容器 id 目录下的 hosts 文件；&lt;/li&gt;
&lt;li&gt;上面的操作可能会造成若干秒的延迟后才能正常地通过 hostname 来进行通信，为此，在容器的启动命令之前插入一个 sleep 命令，防止因为连接超时导致应用启动失败。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;简化的跨主机的多容器应用编排和部署工具的实现。&lt;/p&gt;
    
    </summary>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/categories/nap/"/>
    
    
      <category term="compose" scheme="http://nap-blog.artemisprojects.org/tags/compose/"/>
    
      <category term="docker" scheme="http://nap-blog.artemisprojects.org/tags/docker/"/>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/tags/nap/"/>
    
  </entry>
  
  <entry>
    <title>跨主机的 docker 容器编排 nap-compose （一）</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/07/nap-compose-1/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/07/nap-compose-1/</id>
    <published>2015-11-07T03:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.908Z</updated>
    
    <content type="html">&lt;p&gt;docker 三件套（compose + swarm + engine）可以实现跨主机的多容器应用编排和部署。我们要实现一个功能类似的，简化一些的工具，这里介绍一下实现的思路。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u5BB9_u5668_u7F16_u6392_u548Cdocker-compose&quot;&gt;&lt;a href=&quot;#u5BB9_u5668_u7F16_u6392_u548Cdocker-compose&quot; class=&quot;headerlink&quot; title=&quot;容器编排和 docker-compose&quot;&gt;&lt;/a&gt;容器编排和 docker-compose&lt;/h2&gt;&lt;h3 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述 &lt;/h3&gt;&lt;p&gt; 要想在 &lt;strong&gt; 单个 &lt;/strong&gt; 主机上部署多个容器相关联的应用，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种方法是依次执行 docker 命令，依次启动各容器。要特别注意容器的启动顺序：如果容器 B 依赖 A，但容器 B 比 A 先启动，B 会可能因为无法访问 A 而异常停止。&lt;/li&gt;
&lt;li&gt;另一种是方法使用 &lt;a href=&quot;https://docs.docker.com/compose/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-compose&lt;/a&gt; 工具，它的前身是 fig。compose 是 python 实现的，被打包成可执行文件发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;docker-compose 是简化多容器应用编排（orchestration）和部署的工具，它允许开发者把一个应用中多个容器及它们之间的依赖关系都写到一个 &lt;code&gt;docker-compose.yml&lt;/code&gt; 配置文件中，将其解析后自动按顺序执行 docker（通过 docker API），启动整个应用。&lt;/p&gt;
&lt;h3 id=&quot;guestbook_u793A_u4F8B&quot;&gt;&lt;a href=&quot;#guestbook_u793A_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;guestbook 示例&quot;&gt;&lt;/a&gt;guestbook 示例 &lt;/h3&gt;&lt;p&gt; 下面是一个 &lt;code&gt;docker-compose.yml&lt;/code&gt; 的 &lt;a href=&quot;http://yingz.info/2015-10/compose-guestbook/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 例子 &lt;/a&gt;，来自&lt;a href=&quot;http://k8s.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kubernetes(k8s)&lt;/a&gt; 中的&lt;a href=&quot;https://github.com/kubernetes/kubernetes/tree/master/examples/guestbook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;guestbook 示例&lt;/a&gt;。它是一个简单的 web 留言板，共有 3 个组件，分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php 前端，运行在 apache 服务器；&lt;/li&gt;
&lt;li&gt;redis master，作为写入数据库；&lt;/li&gt;
&lt;li&gt;redis-slave，作为读取数据库。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;web&lt;/span&gt;:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;image&lt;/span&gt;: guestbook&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;ports&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;links&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;attribute&quot;&gt;redis-master&lt;/span&gt;:redis-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;attribute&quot;&gt;redis-slave&lt;/span&gt;:redis-slave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;redis-master&lt;/span&gt;:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;image&lt;/span&gt;: redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;ports&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;redis-slave&lt;/span&gt;:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;image&lt;/span&gt;: redis-slave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;ports&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;links&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;attribute&quot;&gt;redis-master&lt;/span&gt;:redis-master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;service__u548C_links&quot;&gt;&lt;a href=&quot;#service__u548C_links&quot; class=&quot;headerlink&quot; title=&quot;service 和 links&quot;&gt;&lt;/a&gt;service 和 links&lt;/h3&gt;&lt;p&gt;compose 中有下面 2 个概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project：一个 &lt;code&gt;docker-compose.yml&lt;/code&gt; 描述的就是一个 project，也就是开发者的一个应用；一个 project 由若干 service 组成。&lt;/li&gt;
&lt;li&gt;service：是 yml 中的顶层节点，上面的例子里是 web， redis-master，redis-slave 。看起来每个 service 的子节点都是通过 &lt;code&gt;docker run&lt;/code&gt; 运行一个容器的参数，不过 service 是比容器高一层的抽象，一个 service 对应于多个容器（container）。比如运行 &lt;code&gt;docker-compose scale web=3&lt;/code&gt; 命令可以横向扩展 web 这个 service，让它有 3 个容器。&lt;blockquote&gt;
&lt;p&gt;service 这样简单地横向扩展在实际中显然是不够的，如果是 web 应用，应该有一个负载均衡节点作为入口。此外，横向扩展的容器的 hostname 应该有一个约定格式，这样才能与它们通信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;compose 除了在一个 yml 文件里描述多容器以外，还要把它们连接起来，这是通过 yml 中的 &lt;code&gt;links&lt;/code&gt; 来描述的。compose 能够让各容器之间通过域名来互相访问。&lt;/p&gt;
&lt;p&gt;使用默认的 docker0 网桥时，开发者只能在 docker 启动之后才能获取容器的 ip，而且这个 ip 不是固定的，在容器重启后可能会变化，这给跨容器的通信造成了不便。在考虑横向扩展和失败转移时，会动态增减容器，它们的 ip 也是不能事先知道的。&lt;br&gt;另外，硬编码 ip 地址不是好的做法，最好是通过域名来屏蔽 ip 的变化。&lt;/p&gt;
&lt;p&gt;我们不需要配置 DNS 来实现域名解析，docker 的 &lt;code&gt;link&lt;/code&gt; 参数可以实现在单主机上容器间的静态域名解析。&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;command&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--link= 容器 A:A 的别名 镜像 B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个命令 &lt;strong&gt; 将要 &lt;/strong&gt; 运行的容器 B 与一个 &lt;strong&gt; 已经 &lt;/strong&gt; 运行的容器 A（通过 &lt;code&gt;--name&lt;/code&gt; 来指定容器名）连接起来：修改容器 B 的环境变量及 &lt;code&gt;/etc/hosts&lt;/code&gt;，在&lt;code&gt;hosts&lt;/code&gt; 中添加类似下面项。&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;literal&quot;&gt;A&lt;/span&gt;的 IP&amp;gt; &lt;span class=&quot;literal&quot;&gt;A&lt;/span&gt;的别名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样容器 B 中就可以通过 &lt;code&gt;A 的别名&lt;/code&gt; 这个域名来访问容器 A 了。&lt;br&gt;必须要求容器 B 先于容器 A 启动，这样 docker 才能知道容器 A 的 IP。&lt;/p&gt;
&lt;p&gt;此外，关于 volumns 的内容以后再写文章讨论。&lt;/p&gt;
&lt;h2 id=&quot;u8DE8_u4E3B_u673A_u7F16_u6392&quot;&gt;&lt;a href=&quot;#u8DE8_u4E3B_u673A_u7F16_u6392&quot; class=&quot;headerlink&quot; title=&quot;跨主机编排&quot;&gt;&lt;/a&gt;跨主机编排 &lt;/h2&gt;&lt;h3 id=&quot;docker_u4E09_u4EF6_u5957&quot;&gt;&lt;a href=&quot;#docker_u4E09_u4EF6_u5957&quot; class=&quot;headerlink&quot; title=&quot;docker 三件套&quot;&gt;&lt;/a&gt;docker 三件套&lt;/h3&gt;&lt;p&gt; 如果要将有多个容器的应用部署到多个主机上，直接使用 docker-compose 就困难了。&lt;/p&gt;
&lt;p&gt;一种解决方案是使用 docker 三件套：compose，&lt;a href=&quot;https://docs.docker.com/swarm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swarm&lt;/a&gt;和 docker engine（也就是 docker daemon），此外还需要新增的&lt;a href=&quot;http://docs.docker.com/engine/userguide/networking/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;networking&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;swarm 是集群管理工具，目标是把多个主机上的 docker 服务整合为集群，提供 &lt;strong&gt; 单一 &lt;/strong&gt; 的入口。主要解决 2 个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组成集群：之前我们的实验都是基于 CoreOS 的 fleet 来管理集群的。&lt;a href=&quot;https://coreos.com/using-coreos/clustering/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fleet&lt;/a&gt;使用 &lt;a href=&quot;https://coreos.com/etcd/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;etcd&lt;/a&gt; 作为集群信息的存储，&lt;a href=&quot;https://zh.wikipedia.org/wiki/Systemd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;systemd&lt;/a&gt;作为主机上的执行代理。swarm 与 fleet 比较相似。swarm 在主机上的执行代理自然是 docker engine（也就是 docker daemon，通过 docker API），集群信息存储除了使用 etcd，还支持 zookeeper 和 consul。&lt;/li&gt;
&lt;li&gt;分发调度：既然 swarm 把多个主机上的 docker 抽象为单一的入口，那就要解决任务如何分配到各个主机上的问题，也就是所谓的调度问题。目前 swarm 支持的有随机和 binpack（装箱，根据 CPU 和内存）调度。调度是集群管理都需要解决的问题。mesos 是进行调度管理的项目，swarm 也有与&lt;strong&gt;mesos 的整合&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;networking 是解决跨主机容器联网问题的库，与 flannel 类似，也是采用的覆盖（overlay）网络，docker 1.9 版增加了 &lt;code&gt;docker network&lt;/code&gt; 命令，用来管理跨主机的网络。&lt;/p&gt;
&lt;p&gt;另外，docker machine 是在虚拟机，IaaS 云平台上从零开始部署 docker 的，有点像 chef，puppet 这类自动化工具或 vagrant 这种虚拟机开发环境构建工具。它还可以 ssh 到各主机执行命令。不过如果已经安装好了 docker，machine 就不太必要了。&lt;/p&gt;
&lt;h3 id=&quot;u8DE8_u4E3B_u673A_u7684_u8986_u76D6_u7F51_u7EDC&quot;&gt;&lt;a href=&quot;#u8DE8_u4E3B_u673A_u7684_u8986_u76D6_u7F51_u7EDC&quot; class=&quot;headerlink&quot; title=&quot;跨主机的覆盖网络&quot;&gt;&lt;/a&gt;跨主机的覆盖网络 &lt;/h3&gt;&lt;p&gt; 覆盖网络是跨主机的 docker 容器间联网问题的一种解决方案。&lt;br&gt;跨主机的 docker 容器间联网，关键是实现容器间的 &lt;strong&gt; 路由 &lt;/strong&gt;，也就是说让各主机都知道每个主机上运行了哪些容器，或者说每个容器都运行在哪个主机上。知道了这些信息，容器间跨主机通信时，容器发出的数据包先发给本主机，然后发给目标容器所在的主机，目标主机再转发给目标容器。&lt;br&gt; 要想获取容器分布信息，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种方案是将其都放到各主机都能访问的集中存储上去，然后各主机上安装代理来同步这些信息，并负责转发数据包；&lt;/li&gt;
&lt;li&gt;另一种是主机上安装一个虚拟路由器，通过路由协议来交换信息；或者通过 &lt;code&gt;iptables&lt;/code&gt; 来实现类似的功能；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;传统的虚拟机支持桥接网络，此桥接非彼 docker 的桥接，docker 的桥接在虚拟机技术中对应的叫 NAT 网络（本来在 docker 中也是 NAT，但不叫 NAT，却被称为桥接。。。）。虚拟机的桥接，是将 VM 的虚拟网卡与物理网卡绑定，基于物理网卡的 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 混杂模式 &lt;/a&gt; 或支持虚拟化的网卡的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/hh440235%28v=vs.85%29.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SR-IOV&lt;/a&gt;，从外部网络看来，虚拟网卡与物理网卡没有什么区别，从而虚拟机与物理主机在网络上的地位也是对等的，已有的网络管理系统像管理物理主机一样管理虚拟机，也就不存在跨主机的 VM 通信问题了。&lt;/p&gt;
&lt;p&gt;docker 也是可以通过 &lt;a href=&quot;http://blog.oddbit.com/2014/08/11/four-ways-to-connect-a-docker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 自定义网桥 &lt;/a&gt; 来使用虚拟机的桥接网络模式的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CoreOS 的 &lt;a href=&quot;https://github.com/coreos/flannel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flannel&lt;/a&gt; 采用的是第一种方案，它使用 etcd 做为集中存储，以 ip in ip 的形式来转发数据包。docker networking 与 flannel 类似。&lt;/p&gt;
&lt;h3 id=&quot;u8BBE_u7F6Eflannel&quot;&gt;&lt;a href=&quot;#u8BBE_u7F6Eflannel&quot; class=&quot;headerlink&quot; title=&quot;设置 flannel&quot;&gt;&lt;/a&gt;设置 flannel&lt;/h3&gt;&lt;p&gt;先获取 &lt;a href=&quot;https://github.com/coreos/etcd/releases/download/v2.0.12/etcd-v2.0.12-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;etcd(v2.0.12)&lt;/a&gt; 和&lt;a href=&quot;https://github.com/coreos/flannel/releases/download/v0.5.3/flannel-0.5.3-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flannel(v0.5.3)&lt;/a&gt;的二进制文件，并解压到 &lt;strong&gt; 相关 &lt;/strong&gt; 主机的 &lt;code&gt;/usr/bin&lt;/code&gt;（或 &lt;code&gt;$PATH&lt;/code&gt; 中的其它路径）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，flannel 安装在需要组成覆盖网络的主机上，etcd 可以单独设置主机，不必在 flannel 主机里。下面的示例 etcd 安装在 ip 为 &lt;code&gt;10.1.1.12&lt;/code&gt; 的主机上。&lt;br&gt;可以将 etcd 安装在多台主机上 &lt;a href=&quot;https://coreos.com/etcd/docs/latest/clustering.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 组成集群&lt;/a&gt;，以提高可用性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在 10.1.1.12 主机上，启动 etcd，监听本机所有 ip 的 4001 端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;etcd -listen-client-urls &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; -advertise-client-urls &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt;  &amp;amp;&amp;gt;/dev/&lt;span class=&quot;constant&quot;&gt;null&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置 flannel 的配置 key（设置一次即可），使用 10.4.0.0/16 网段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;etcdctl rm /coreos.com/network &lt;span class=&quot;comment&quot;&gt;--recursive  &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;etcdctl mk /coreos.com/network/config &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;Network&quot;:&quot;10.4.0.0/16&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在任意主机上，检查 etcd 是否可用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;10.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt;/&lt;span class=&quot;built_in&quot;&gt;version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在需要组成覆盖网络的主机上，启动 flannel，并设置 docker0 网桥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flanneld -iface=&lt;span class=&quot;string&quot;&gt;&quot;eth1&quot;&lt;/span&gt; -etcd-endpoints=&lt;span class=&quot;string&quot;&gt;&quot;http://10.1.1.12:4001&quot;&lt;/span&gt; &amp;amp;&amp;gt;/dev/&lt;span class=&quot;constant&quot;&gt;null&lt;/span&gt;  &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sleep &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service docker &lt;span class=&quot;built_in&quot;&gt;stop&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# 对 ubuntu 14.04，停止 docker daemon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. &lt;span class=&quot;string&quot;&gt;&quot;/run/flannel/subnet.env&quot;&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;# 获取下面用到的 $&amp;#123;FLANNEL_*&amp;#125; 相关环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifconfig docker0 $&amp;#123;FLANNEL_SUBNET&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker daemon &lt;span class=&quot;comment&quot;&gt;--bip=$&amp;#123;FLANNEL_SUBNET&amp;#125; --mtu=$&amp;#123;FLANNEL_MTU&amp;#125;  &amp;amp;  # 启动 docker daemon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置完成后，flannel 在主机上添加了一个 flannel0 网桥，它与 docker0 网桥不同：bridge utils 的 &lt;code&gt;brctl show&lt;/code&gt; 会显示 docker0 网桥，但不会显示 flannel0 网桥。上面的命令将 docker0 网桥的 ip 设置在 flannel0 的 ip 段内，启动的容器也在这个 ip 段，这样就可以通过 flannel0 来转发跨主机的数据包了。&lt;/p&gt;
&lt;h3 id=&quot;u4E0D_u540C_u4E3B_u673A_u5BB9_u5668_u7684_/etc/hosts&quot;&gt;&lt;a href=&quot;#u4E0D_u540C_u4E3B_u673A_u5BB9_u5668_u7684_/etc/hosts&quot; class=&quot;headerlink&quot; title=&quot;不同主机容器的 /etc/hosts&quot;&gt;&lt;/a&gt;不同主机容器的 &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;虽然设置了 flannel 覆盖网络，可以让跨主机的容器间通过 IP 地址来通信，但是还不能直接使用域名。&lt;br&gt;我们可以增加一个容器来专门提供 DNS 服务，也可以用类似 &lt;code&gt;docker --link&lt;/code&gt; 的做法，分别修改各容器的 hosts。docker 三件套再加上 networking 可以实现这样的功能，不过我们希望能自己实现一下这样的功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，由于 compose 只能与一个 docker daemon 交互，不能与多个主机上的 docker daemon 交互，无法实现跨主机的容器间由域名通信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们先不考虑解析 &lt;code&gt;compose.yml&lt;/code&gt;，生成容器间连接关系和如何获取容器域名。假设已经知道了要启动哪些容器及这些容器应该是什么域名，容器可以运行在不同的主机上，这些主机间已经有 flannel 的覆盖网络允许容器间的通信。启动容器后我们可以得到各主机上运行的容器 id 和 ip，然后要把域名和 ip 这一对信息分别写道所有相关容器内的&lt;code&gt;/etc/hosts&lt;/code&gt; 文件里，这样容器间就可以使用域名通信了。&lt;/p&gt;
&lt;p&gt;用 docker API 编程地访问多个主机的 docker daemon，可以创建、启动容器，获取容器的信息，包括 ip 地址和 hosts 在对应主机的路径 &lt;code&gt;/var/lib/docker/containers/{容器 id}/hosts&lt;/code&gt;，将域名信息用 ssh 写入到各主机的相应&lt;code&gt;hosts&lt;/code&gt; 文件即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker 三件套是最终通过 engine 来写入 &lt;code&gt;hosts&lt;/code&gt; 的，但并没有提供该功能的 API。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们在下一篇介绍具体的做法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;docker三件套（compose + swarm + engine）可以实现跨主机的多容器应用编排和部署。我们要实现一个功能类似的，简化一些的工具，这里介绍一下实现的思路。&lt;/p&gt;
    
    </summary>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/categories/nap/"/>
    
    
      <category term="compose" scheme="http://nap-blog.artemisprojects.org/tags/compose/"/>
    
      <category term="docker" scheme="http://nap-blog.artemisprojects.org/tags/docker/"/>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/tags/nap/"/>
    
  </entry>
  
  <entry>
    <title>Mesos Framework 解析</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/07/mesos/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/07/mesos/</id>
    <published>2015-11-07T02:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.907Z</updated>
    
    <content type="html">&lt;p&gt;Mesos 是 Apache 旗下的开源集群资源计算框架，它能将多台机器（包括物理机和虚拟机）的资源，包括 CPU，内存，硬盘等计算资源抽象出来，进行资源隔离和共享，构建高容错性、高可用性的分布式资源管理系统。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍 &lt;/h2&gt;&lt;h3 id=&quot;Mesos_Framework&quot;&gt;&lt;a href=&quot;#Mesos_Framework&quot; class=&quot;headerlink&quot; title=&quot;Mesos Framework&quot;&gt;&lt;/a&gt;Mesos Framework&lt;/h3&gt;&lt;p&gt;Mesos 采用两层架构，所有计算框架均在底层，即 Mesos Master 负责对任务的资源分配给各个框架；在计算框架之上为 Mesos Framework，它可用是通用的框架，也可用为特定软件编写的框架，如 Framework 一个长时间运行的服务（比如 JobTracker 等），也可以是一个短生命周期的 Job 或者 Application。这样设计的好处是，&lt;strong&gt; 作为底层的 Mesos 不需要知道顶层的应用的细节，只负责根据 slave 资源状况提供 offers，而调度由顶层的 Framework 进行实现&lt;/strong&gt;，这样底层的 Mesos 对所有应用（分布式 or 集中式，长时间服务 or 短暂性任务等）均可适用。&lt;/p&gt;
&lt;p&gt;Framework 可以根据是否符合任务对资源的约束，选择接受或拒绝资源邀约。一旦资源邀约被接受，Framework 将与 Master 协作调度任务，并在数据中心的相应 Slave 节点上运行任务。&lt;/p&gt;
&lt;p&gt;Framework 包含两大部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;&lt;br&gt;  Scheduler 负责管理框架所获得的资源，按照作业的输入量，将其分解成若干任务，并未这些任务申请资源，监控这些任务的运行状态，一旦发现某个任务运行失败则重新为其申请资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Executor&lt;/strong&gt;&lt;br&gt;  Executor 负责执行调度器所分配的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Framework 结构如图：&lt;br&gt;&lt;img src=&quot;/images/mesos-arch.jpg&quot; alt=&quot;Framework Structure&quot;&gt;&lt;br&gt;&lt;!-- http://cdn1.infoqstatic.com/statics_s2_20151020-0055-2/resource/articles/analyse-mesos-part-04/zh/resources/0604001.jpg --&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5206_u6790&quot;&gt;&lt;a href=&quot;#u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;h3 id=&quot;Framework_u4EFB_u52A1_u5206_u914D_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#Framework_u4EFB_u52A1_u5206_u914D_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;Framework 任务分配过程&quot;&gt;&lt;/a&gt;Framework 任务分配过程&lt;/h3&gt;&lt;p&gt;Framework 任务分配流程图如下：&lt;br&gt;&lt;img src=&quot;http://s2.51cto.com/wyfs02/M01/09/F3/wKiom1LKbc-DCmXcAACKJCK6gs4287.jpg&quot; alt=&quot;Framework Task&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mesos 的资源分配行为发生在：&lt;strong&gt;新框架注册 &lt;/strong&gt;，&lt;strong&gt; 框架注销 &lt;/strong&gt;，&lt;strong&gt; 增加节点 &lt;/strong&gt;，&lt;strong&gt; 出现空闲资源 &lt;/strong&gt; 等情况，对 Mesos Framework 进行资源分配的流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Mesos Master 中的 &lt;code&gt;Allocator&lt;/code&gt; 模块将要为某个 Framework 分配资源，则将资源封装到 &lt;code&gt;ResourceOffersMessage&lt;/code&gt; 中，通过网络传输发送给&lt;code&gt;SchedulerProcess&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SchedulerProcess&lt;/code&gt;调用用户在 Scheduler 中编写的 &lt;code&gt;resourceOffers&lt;/code&gt; 函数，告知有新资源可用；&lt;/li&gt;
&lt;li&gt;Framework 的 Scheduler 调用 &lt;code&gt;MesosSchedulerDriver&lt;/code&gt; 中的 &lt;code&gt;launchTasks()&lt;/code&gt; 函数，告知将要启动的任务；&lt;/li&gt;
&lt;li&gt;Mesos Master 将待启动的任务分装成 &lt;code&gt;RunTaskMessage&lt;/code&gt; 发送给各个 Mesos Slave；&lt;/li&gt;
&lt;li&gt;Mesos Slave 收到 &lt;code&gt;RunTaskMessage&lt;/code&gt; 消息后，将其发送给对应的&lt;code&gt;ExecutorProcess&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ExecutorProcess&lt;/code&gt;收到消息后，进行资源本地化，并准备任务环境，最终调度用户编写的 Exector 中的 &lt;code&gt;launchTask&lt;/code&gt; 任务启动任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Framework_u5F00_u653E_u63A5_u53E3_u53CA_u4F5C_u7528&quot;&gt;&lt;a href=&quot;#Framework_u5F00_u653E_u63A5_u53E3_u53CA_u4F5C_u7528&quot; class=&quot;headerlink&quot; title=&quot;Framework 开放接口及作用&quot;&gt;&lt;/a&gt;Framework 开放接口及作用 &lt;/h3&gt;&lt;p&gt;Mesos 向开发者开放了 API，API 隐藏了 Mesos 底层和分布式交互的具体的细节，使得开发者可方便地用根据相应使用环境编写对应的 Framework，提供的接口支持&lt;code&gt;C++&lt;/code&gt;，&lt;code&gt;Go&lt;/code&gt;，&lt;code&gt;Haskell&lt;/code&gt;，&lt;code&gt;Java&lt;/code&gt;，&lt;code&gt;Python&lt;/code&gt;，和&lt;code&gt;Scala&lt;/code&gt; 语言。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scheduler API&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registered()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Scheduler 成功向 Master 注册时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reregistered()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Scheduler 再次注册成功时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disconnected()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Scheduler 和 Master 失去连接时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;code&gt;resourcesOffers()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当 Framework 收到 Mesos 提供的资源时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offerRescinded()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当某个 offer 不再适用时调用(Slave 丢失或者其他 Framework 正在适用这个 offer),master 撤销发送给 Framework 的资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;statusUpdate()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Mesos 向框架发送消息时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frameworkMessage()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用来向 Scheduler 传递 Executor 发送的消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slaveLost()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通知 Mesos 无法和指定 ID 的 slave 通信&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;executorLost()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通知 Scheduler 指定的 Executor 已经以某个状态结束了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Scheduler 出现可恢复的错误时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中最重要的为 &lt;br&gt;&lt;code&gt;resourceOffers(SchedulerDriver,  List&amp;lt;Offer&amp;gt;)&lt;/code&gt; 方法。Master 向 Framework 提供资源 offer，每一份资源 offer 包含从某个 slave 上获取的资源列表（包括 CPU，内存，硬盘等）。开发者重写该方法，可用根据特定的情况接受资源 offer，并利用 offersId 交给 Executor 启动任务，或者拒绝该 offer。&lt;strong&gt;一个 offer 会提供给多个 Framework，但是第一个使用 offer 启动任务的 Framework 会获胜，其他的 Framework 将受到 &lt;code&gt;offerRescinded()&lt;/code&gt; 发出的消息。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scheduler API&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registered()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 驱动成功和 Mesos 连接上时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reregistered()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 再次向某个重启的 slave 注册时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disconnected()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 和 slave 失去连接时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;code&gt;launchTask()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 启动某个任务时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;killTask()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 杀死某个 task 时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frameworkMessage()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Framework 的信息到达 Executor 时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Executor 需要终止所有 task 时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当 Scheduler 出现不可恢复的错误时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;同样，Executor 中最核心的方法是 &lt;code&gt;launchTask(ExecutorDriver, TaskInfo)&lt;/code&gt;。可重写该方法实现执行任务，任务将在 offer 来源的 slave 上执行。&lt;strong&gt; 执行任务在方法调用时会被阻塞，在回调完成前，该 Executor 无法执行其他的任务。&lt;/strong&gt; 因此如果要执行一个长时间的任务（如 Web 应用)，可用把任务放在线程里，通过线程的方式启动。&lt;/p&gt;
&lt;h2 id=&quot;Framework_u5B9E_u4F8B_u5206_u6790&quot;&gt;&lt;a href=&quot;#Framework_u5B9E_u4F8B_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;Framework 实例分析&quot;&gt;&lt;/a&gt;Framework 实例分析&lt;/h2&gt;&lt;p&gt;Mesos 上已有许多 Framework，包括支持 MPI，Hadoop，Spark，Storm 等应用的。这里主要利用简单的 Framework 分析如何实现一个 Framework。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/mesosphere/mesos-hydra&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mesos-hydra&lt;/a&gt;，MPI Framework，该 Framework 是利用 python 进行的实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/mesosphere/RENDLER&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RENDLER&lt;/a&gt;, 一个利用 Mesos 框架实现的分布式爬虫&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;挖坑，待看完全部代码后补上源码分析&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Framework_u8BBE_u8BA1_u6A21_u5F0F&quot;&gt;&lt;a href=&quot;#Framework_u8BBE_u8BA1_u6A21_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;Framework 设计模式&quot;&gt;&lt;/a&gt;Framework 设计模式 &lt;/h2&gt;&lt;p&gt; 从现有的 Mesos Framework 分配调度使用资源的方式中，可用总结出以下几种模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于协调资源：设计的 Framework 作为其他 Framework 的资源协调者，作为服务运行，如&lt;code&gt;Mesos-DNS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;基于负载状况：设计的 Framework 根据负载来调节资源使用，如 &lt;code&gt;Marathon&lt;/code&gt; 和&lt;code&gt;Aurora&lt;/code&gt;，会根据约定自动进行扩容和缩容。&lt;/li&gt;
&lt;li&gt;基于预留的框架：这里主要指，某些分布式应用，在设计时已经预留了资源调度的接口，如 &lt;code&gt;Hadoop&lt;/code&gt;，&lt;code&gt;Spark&lt;/code&gt;，&lt;code&gt;Storm&lt;/code&gt;，因此只要实现接口，就可以将应用从原有的调度框架（如 Hadoop 原有框架为&lt;code&gt;YARN&lt;/code&gt;) 移植到 Mesos 上来。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u76F8_u5173_u8D44_u6E90&quot;&gt;&lt;a href=&quot;#u76F8_u5173_u8D44_u6E90&quot; class=&quot;headerlink&quot; title=&quot;相关资源&quot;&gt;&lt;/a&gt;相关资源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mesos.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mesos 项目官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mesoscn.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数人云翻译的 Mesos 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mesosphere.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mesosphere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mesosphere.github.io/marathon/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Marathon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aurora.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Aurora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mesos.github.io/chronos/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chronos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/minibooks/analyse-mesos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;InfoQ 的 Mesos 迷你书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://people.csail.mit.edu/matei/papers/2011/nsdi_mesos.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSDI 2011 - Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mesos是Apache旗下的开源集群资源计算框架，它能将多台机器（包括物理机和虚拟机）的资源，包括CPU，内存，硬盘等计算资源抽象出来，进行资源隔离和共享，构建高容错性、高可用性的分布式资源管理系统。&lt;/p&gt;
    
    </summary>
    
      <category term="nap" scheme="http://nap-blog.artemisprojects.org/categories/nap/"/>
    
    
      <category term="mesos" scheme="http://nap-blog.artemisprojects.org/tags/mesos/"/>
    
  </entry>
  
  <entry>
    <title>Restful API 浅析 之设计原则与案例修正</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/04/rest-api-design/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/04/rest-api-design/</id>
    <published>2015-11-04T03:04:16.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;之前写 Restful 的服务器端 API，写的不好，痛定思痛，决心好好搞懂 Restful。在这一篇中我们首先搞懂 Rest 的含义，然后以我编写的失败的 api 为例，讲解如何编写出符合 Rest 风格的 API。注意本篇指导原则一节大部分来自阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RESTful API 设计指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Restful_u6D45_u6790&quot;&gt;&lt;a href=&quot;#Restful_u6D45_u6790&quot; class=&quot;headerlink&quot; title=&quot;Restful 浅析&quot;&gt;&lt;/a&gt;Restful 浅析&lt;/h1&gt;&lt;p&gt;REST 是”REpresentational State Transfer”，一种翻译是”表现层状态转移”, 首先看看 wiki 百科的介绍:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;REST - 表征状态转移是 Roy Fielding 博士在 2000 年他的博士论文中提出来的一种软件架构风格。 目前在三种主流的 Web 服务实现方案中，因为 REST 模式的 Web 服务与复杂的 SOAP 和 XML-RPC 对比来讲明显的更加简洁，越来越多的 web 服务开始采用 REST 风格设计和实现。例如，Amazon.com 提供接近 REST 风格的 Web 服务进行图书查找；雅虎提供的 Web 服务也是 REST 风格的。 – wiki&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从以上的介绍中我们知道 REST 是一种 web 软件架构风格，不过我还是不知道 REST 是个什么鬼，再查查看，有人这么解释 REST:&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt; 是一套用来创建 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 的方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 的主旨是让事情尽量的简单化。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 里的方法：&lt;span class=&quot;constant&quot;&gt;GET&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;POST&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;DELETE&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;PUT&lt;/span&gt;。你不需要使用 &lt;span class=&quot;constant&quot;&gt;URL&lt;/span&gt; 或请求的内容来指定这个方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;URL&lt;/span&gt; 来指明你将要操作什么对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 状态码作为返回值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 调用产生的 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 请求内容只是用于服务数据——不是用来指明调用方法，目标对象或返回值的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简单来说，REST 是所有 web 应用都应该遵守的架构设计指导原则，每一个 URL 代表一种资源，客户端通过四个 HTTP 动词，对服务器端资源进行操作，实现”表现层状态转化”。查看以下几篇文章深入地了解 REST：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/restful.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解 RESTful 架构&lt;/a&gt; - 阮一峰老师 11 年的文章, 浅显易懂&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/understanding-restful-style&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解本真的 REST 架构风格&lt;/a&gt;  -infoq 上一篇翻译的文章，非常细致地解释了 REST&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/articles/richardsonMaturityModel.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Richardson Maturity Model steps toward the glory of REST&lt;/a&gt; - Martin fowler 解释 Richardson 的 REST3 层成熟度模型&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hippoom.github.io/blogs/value-of-hypermedia-from-client-perspective.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;从消费者的角度评估 REST 的价值&lt;/a&gt; - 以举例的方式解释 Richardson 成熟度模型的第三个级别：Hypermedia，很有意思的一篇文章。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也许最快的学习方式是学习业界成熟的 REST api 设计, 可以看看 github 是如何设计的:&lt;a href=&quot;https://developer.github.com/v3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github API&lt;/a&gt;, 另外也许你想看看提出 REST 的 &lt;a href=&quot;http://www.ics.uci.edu/~fielding/pubs/webarch_icse2000.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 那篇论文&lt;/a&gt;，TL;DR&lt;/p&gt;
&lt;h1 id=&quot;u8BBE_u8BA1_u539F_u5219&quot;&gt;&lt;a href=&quot;#u8BBE_u8BA1_u539F_u5219&quot; class=&quot;headerlink&quot; title=&quot;设计原则&quot;&gt;&lt;/a&gt;设计原则 &lt;/h1&gt;&lt;p&gt; 本来想写个 REST API 设计指南的，不过阮一峰老师在 14 年已经干了 &lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 这事&lt;/a&gt;，这里我们转载该文章的原则，然后重新修改我们的 api。另外一些好的指南:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bourgeois.me/rest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Some REST best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://codeplanet.io/principles-good-restful-api-design/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Principles of good RESTful API Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u6307_u5BFC_u539F_u5219&quot;&gt;&lt;a href=&quot;#u6307_u5BFC_u539F_u5219&quot; class=&quot;headerlink&quot; title=&quot;指导原则&quot;&gt;&lt;/a&gt;指导原则 &lt;/h2&gt;&lt;h3 id=&quot;u57DF_u540D&quot;&gt;&lt;a href=&quot;#u57DF_u540D&quot; class=&quot;headerlink&quot; title=&quot;域名&quot;&gt;&lt;/a&gt; 域名 &lt;/h3&gt;&lt;p&gt; 应该尽量将 API 部署在专用域名之下, 如:&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果确定 API 很简单，不会有进一步扩展，可以考虑放在主域名下:&lt;br&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;https:&lt;/span&gt;//example&lt;span class=&quot;preprocessor&quot;&gt;.org&lt;/span&gt;/api/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7248_u672C&quot;&gt;&lt;a href=&quot;#u7248_u672C&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本 &lt;/h3&gt;&lt;p&gt; 应该将 API 的版本号放入 URL。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8DEF_u5F84&quot;&gt;&lt;a href=&quot;#u8DEF_u5F84&quot; class=&quot;headerlink&quot; title=&quot;路径&quot;&gt;&lt;/a&gt;路径 &lt;/h3&gt;&lt;p&gt; 在 RESTful 架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的”集合”（collection），所以 API 中的名词也应该使用复数。&lt;br&gt;举例来说，有一个 API 提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/zoos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/animals&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/employees&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTTP_u52A8_u8BCD&quot;&gt;&lt;a href=&quot;#HTTP_u52A8_u8BCD&quot; class=&quot;headerlink&quot; title=&quot;HTTP 动词&quot;&gt;&lt;/a&gt;HTTP 动词 &lt;/h3&gt;&lt;p&gt; 对于资源的具体操作类型，由 HTTP 动词表示。&lt;br&gt;常用的 HTTP 动词有下面五个（括号里是对应的 SQL 命令）：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET（&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;）：从服务器取出资源（一项或多项）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST（&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt;）：在服务器新建一个资源。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT（&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;）：在服务器更新资源（客户端提供改变后的完整资源）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;PATCH&lt;/span&gt;（&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;）：在服务器更新资源（客户端提供改变的属性）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;（&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;）：从服务器删除资源。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些例子：&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /zoos：列出所有动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST /zoos：新建一个动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID：获取某个指定动物园的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID：更新某个指定动物园的信息（提供该动物园的全部信息）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATCH &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID：更新某个指定动物园的信息（提供该动物园的部分信息）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID：删除某个动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID/animals：列出某个指定动物园的所有动物&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID&lt;span class=&quot;regexp&quot;&gt;/animals/&lt;/span&gt;ID：删除某个指定动物园的指定动物&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u8FC7_u6EE4_u4FE1_u606F_uFF08Filtering_uFF09&quot;&gt;&lt;a href=&quot;#u8FC7_u6EE4_u4FE1_u606F_uFF08Filtering_uFF09&quot; class=&quot;headerlink&quot; title=&quot;过滤信息（Filtering）&quot;&gt;&lt;/a&gt;过滤信息（Filtering）&lt;/h3&gt;&lt;p&gt;如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。&lt;br&gt;下面是一些常见的参数:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?limit=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;：指定返回记录的数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?offset=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;：指定返回记录的开始位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?page=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;amp;per_page=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;：指定第几页，以及每页的记录数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?sortby=name&amp;amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?animal_type_id=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;：指定筛选条件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数的设计允许存在冗余，即允许 API 路径和 URL 参数偶尔有重复。比如，GET /zoo/ID/animals 与 GET /animals?zoo_id=ID 的含义是相同的。&lt;/p&gt;
&lt;h3 id=&quot;u72B6_u6001_u7801_uFF08Status_Codes_uFF09&quot;&gt;&lt;a href=&quot;#u72B6_u6001_u7801_uFF08Status_Codes_uFF09&quot; class=&quot;headerlink&quot; title=&quot;状态码（Status Codes）&quot;&gt;&lt;/a&gt;状态码（Status Codes）&lt;/h3&gt;&lt;p&gt;服务器向用户返回的状态码和提示信息，常见的有以下一些（方括号中是该状态码对应的 HTTP 动词）:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;201&lt;/span&gt; CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;202&lt;/span&gt; Accepted - [*]：表示一个请求已经进入后台排队（异步任务）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;204&lt;/span&gt; NO CONTENT - [DELETE]：用户删除数据成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;401&lt;/span&gt; Unauthorized - [*]：表示用户没有权限（令牌、用户名、密码错误）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;403&lt;/span&gt; Forbidden - [*] 表示用户得到授权（与 &lt;span class=&quot;number&quot;&gt;401&lt;/span&gt; 错误相对），但是访问是被禁止的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; NOT FOUND - [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;406&lt;/span&gt; Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求 JSON 格式，但是只有 XML 格式）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;410&lt;/span&gt; Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;422&lt;/span&gt; Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt; INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u9519_u8BEF_u5904_u7406_uFF08Error_handling_uFF09&quot;&gt;&lt;a href=&quot;#u9519_u8BEF_u5904_u7406_uFF08Error_handling_uFF09&quot; class=&quot;headerlink&quot; title=&quot;错误处理（Error handling）&quot;&gt;&lt;/a&gt;错误处理（Error handling）&lt;/h3&gt;&lt;p&gt;如果状态码是 4xx，就应该向用户返回出错信息。一般来说，返回的信息中将 error 作为键名，出错信息作为键值即可。&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;error&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;string&quot;&gt;&quot;Invalid API key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8FD4_u56DE_u7ED3_u679C&quot;&gt;&lt;a href=&quot;#u8FD4_u56DE_u7ED3_u679C&quot; class=&quot;headerlink&quot; title=&quot;返回结果&quot;&gt;&lt;/a&gt;返回结果 &lt;/h3&gt;&lt;p&gt; 针对不同操作，服务器向用户返回的结果应该符合以下规范。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /collection：返回资源对象的列表（数组）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource：返回单个资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST /collection：返回新生成的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource：返回完整的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATCH &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource：返回完整的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource：返回一个空文档&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hypermedia_API&quot;&gt;&lt;a href=&quot;#Hypermedia_API&quot; class=&quot;headerlink&quot; title=&quot;Hypermedia API&quot;&gt;&lt;/a&gt;Hypermedia API&lt;/h3&gt;&lt;p&gt;RESTful API 最好做到 Hypermedia，即返回结果中提供链接，连向其他 API 方法，使得用户不查文档，也知道下一步应该做什么。&lt;br&gt;比如，当用户向 api.example.com 的根目录发出请求，会得到这样一个文档。&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;link&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;&quot;:   &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;collection https://www.example.com/zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;&quot;:  &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://api.example.com/zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;List of zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;&quot;:  &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;application/vnd.yourformat+json&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码表示，文档中有一个 link 属性，用户读取这个属性就知道下一步该调用什么 API 了。rel 表示这个 API 与当前网址的关系（collection 关系，并给出该 collection 的网址），href 表示 API 的路径，title 表示 API 的标题，type 表示返回类型。&lt;br&gt;Hypermedia API 的设计被称为 HATEOAS。Github 的 API 就是这种设计，访问 api.github.com 会得到一个所有可用 API 的网址列表。&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;current_user_url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/user&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;authorizations_url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/authorizations&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上面可以看到，如果想获取当前用户的信息，应该去访问 api.github.com/user，然后就得到了下面结果。&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;message&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Requires authentication&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;documentation_url&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://developer.github.com/v3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码表示，服务器给出了提示信息，以及文档的网址。&lt;/p&gt;
&lt;h3 id=&quot;u5176_u4ED6&quot;&gt;&lt;a href=&quot;#u5176_u4ED6&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;API 的身份认证应该使用 OAuth 2.0 框架。&lt;/li&gt;
&lt;li&gt;服务器返回的数据格式，应该尽量使用 JSON，避免使用 XML。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;u6848_u4F8B_u4FEE_u6B63&quot;&gt;&lt;a href=&quot;#u6848_u4F8B_u4FEE_u6B63&quot; class=&quot;headerlink&quot; title=&quot;案例修正&quot;&gt;&lt;/a&gt;案例修正 &lt;/h1&gt;&lt;p&gt; 下面我们使用上面的准则进行 api 的整理修改，注意我们目前没有做到 Hypermedia&lt;/p&gt;
&lt;h2 id=&quot;u7528_u6237API__3A_USERS&quot;&gt;&lt;a href=&quot;#u7528_u6237API__3A_USERS&quot; class=&quot;headerlink&quot; title=&quot;用户 API : USERS&quot;&gt;&lt;/a&gt;用户 API : USERS&lt;/h2&gt;&lt;h3 id=&quot;u4FEE_u6539_u524D&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u524D&quot; class=&quot;headerlink&quot; title=&quot;修改前&quot;&gt;&lt;/a&gt;修改前&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/user/:user_id&lt;/code&gt; GET 获取用户信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/register&lt;/code&gt; POST 用户注册&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/login&lt;/code&gt; POST 用户登录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/confirmpw&lt;/code&gt; POST 确认密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/changepw&lt;/code&gt; POST 修改密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u8BCA_u65AD&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式，如 user&lt;/li&gt;
&lt;li&gt;:user_id 和 users 冗余，使用:id 即可&lt;/li&gt;
&lt;li&gt;存在动词如 register,login 等&lt;/li&gt;
&lt;li&gt;confirmpw 和 changepw 冗余, 应该在改变密码的时候对密码进行确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u4FEE_u6539_u540E&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后 &lt;/h3&gt;&lt;p&gt; 由于本项目的用户数据从后台导入，因此删除 register 功能，另外因为此项目为隐私项目进行授权后所有的请求需要附带 token 这里省略 access_token 参数。这里省略 &lt;code&gt;/api/v1&lt;/code&gt; 的前缀: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/authentication&lt;/code&gt; GET 验证用户名密码，并重新生成 token，返回基本的用户信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/users/changePassword&lt;/code&gt; POST 重置用户密码，重新生成盐值和 hash 存储到数据库中，返回修改后的用户基本信息(这个暂时不知道怎么改, 是使用 users UPDATE 方法，或者将改变密码变成一个名词的服务)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/users/details&lt;/code&gt; GET 获取用户详细信息, 如最近的主题以及最近的回复&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u5E16_u5B50API__3A_POSTS&quot;&gt;&lt;a href=&quot;#u5E16_u5B50API__3A_POSTS&quot; class=&quot;headerlink&quot; title=&quot;帖子 API : POSTS&quot;&gt;&lt;/a&gt;帖子 API : POSTS&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/recent&lt;/code&gt; GET 获取最近帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/posts?limit=xx&amp;amp;page=xx&lt;/code&gt; GET 获取帖子列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:post_id&lt;/code&gt; GET 获取某个帖子内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post&lt;/code&gt; POST 新建一个帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:post_id/likes&lt;/code&gt; POST 为某个帖子点赞&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:id&lt;/code&gt; PUT 更新某个帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:id&lt;/code&gt; DELETE 删除某个帖子&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u8BCA_u65AD-1&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD-1&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式&lt;/li&gt;
&lt;li&gt;post_id 冗余&lt;/li&gt;
&lt;li&gt;recent 的 api 和获取帖子列表冗余，设置 limit 为某值,page 为 1 即可获得最近的帖子&lt;/li&gt;
&lt;li&gt;点赞功能并不在需求里，这里删除掉&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u4FEE_u6539_u540E-1&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E-1&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/posts?limit=xx&amp;amp;page=xx&lt;/code&gt; GET 获取帖子列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts/:id&lt;/code&gt; GET 获取某个帖子的具体内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts&lt;/code&gt; POST 创建帖子，返回帖子基本内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts/:id&lt;/code&gt; DELETE 删除帖子，返回空文档。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u56DE_u590DAPI__uFF1A_REPLYS&quot;&gt;&lt;a href=&quot;#u56DE_u590DAPI__uFF1A_REPLYS&quot; class=&quot;headerlink&quot; title=&quot;回复 API ： REPLYS&quot;&gt;&lt;/a&gt;回复 API ： REPLYS&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/reply&lt;/code&gt; POST 创建一个回复&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/reply/:reply_id&lt;/code&gt; DELETE 删除某个回复&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u8BCA_u65AD-2&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD-2&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式&lt;/li&gt;
&lt;li&gt;reply_id 冗余&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u4FEE_u6539_u540E-2&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E-2&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;replys&lt;/code&gt; POST 创建一个回复，返回该回复(这里应该增加帖子的回复数目)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replys/:id&lt;/code&gt; DELETE 删除某个回复, 返回空文档(这里应该减少帖子的回复数目)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前写Restful的服务器端API，写的不好，痛定思痛，决心好好搞懂Restful。在这一篇中我们首先搞懂Rest的含义，然后以我编写的失败的api为例，讲解如何编写出符合Rest风格的API。注意本篇指导原则一节大部分来自阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot;&gt;RESTful API 设计指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="web" scheme="http://nap-blog.artemisprojects.org/categories/web/"/>
    
    
      <category term="rest" scheme="http://nap-blog.artemisprojects.org/tags/rest/"/>
    
  </entry>
  
  <entry>
    <title>Restful API 浅析 之设计原则与案例修正</title>
    <link href="http://nap-blog.artemisprojects.org/2015/11/04/restful-note/"/>
    <id>http://nap-blog.artemisprojects.org/2015/11/04/restful-note/</id>
    <published>2015-11-03T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.909Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;之前写 Restful 的服务器端 API，写的不好，痛定思痛，决心好好搞懂 Restful。&lt;br&gt;在这一篇中我们首先搞懂 Rest 的含义，然后以我编写的失败的 api 为例，讲解如何编写出符合 Rest 风格的 API。注意本篇指导原则一节大部分来自阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RESTful API 设计指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Restful_u6D45_u6790&quot;&gt;&lt;a href=&quot;#Restful_u6D45_u6790&quot; class=&quot;headerlink&quot; title=&quot;Restful 浅析&quot;&gt;&lt;/a&gt;Restful 浅析&lt;/h2&gt;&lt;p&gt;REST 是”REpresentational State Transfer”，一种翻译是”表现层状态转移”, 首先看看 wiki 百科的介绍:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;REST - 表征状态转移是 Roy Fielding 博士在 2000 年他的博士论文中提出来的一种软件架构风格。 目前在三种主流的 Web 服务实现方案中，因为 REST 模式的 Web 服务与复杂的 SOAP 和 XML-RPC 对比来讲明显的更加简洁，越来越多的 web 服务开始采用 REST 风格设计和实现。例如，Amazon.com 提供接近 REST 风格的 Web 服务进行图书查找；雅虎提供的 Web 服务也是 REST 风格的。 – wiki&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从以上的介绍中我们知道 REST 是一种 web 软件架构风格，不过我还是不知道 REST 是个什么鬼，再查查看，有人这么解释 REST:&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;是一套用来创建 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 的方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 的主旨是让事情尽量的简单化。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 里的方法：&lt;span class=&quot;constant&quot;&gt;GET&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;POST&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;DELETE&lt;/span&gt;， &lt;span class=&quot;constant&quot;&gt;PUT&lt;/span&gt;。你不需要使用 &lt;span class=&quot;constant&quot;&gt;URL&lt;/span&gt; 或请求的内容来指定这个方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;URL&lt;/span&gt; 来指明你将要操作什么对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 使用 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 状态码作为返回值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;REST&lt;/span&gt;式的 &lt;span class=&quot;constant&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Service&lt;/span&gt; 调用产生的 &lt;span class=&quot;constant&quot;&gt;HTTP&lt;/span&gt; 请求内容只是用于服务数据——不是用来指明调用方法，目标对象或返回值的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简单来说，REST 是所有 web 应用都应该遵守的架构设计指导原则，每一个 URL 代表一种资源，客户端通过四个 HTTP 动词，对服务器端资源进行操作，实现”表现层状态转化”。查看以下几篇文章深入地了解 REST：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/restful.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解 RESTful 架构&lt;/a&gt; - 阮一峰老师 11 年的文章, 浅显易懂&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/understanding-restful-style&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解本真的 REST 架构风格&lt;/a&gt; -infoq 上一篇翻译的文章，非常细致地解释了 REST&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/articles/richardsonMaturityModel.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Richardson Maturity Model steps toward the glory of REST&lt;/a&gt; - Martin fowler 解释 Richardson 的 REST3 层成熟度模型&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hippoom.github.io/blogs/value-of-hypermedia-from-client-perspective.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;从消费者的角度评估 REST 的价值&lt;/a&gt; - 以举例的方式解释 Richardson 成熟度模型的第三个级别：Hypermedia，很有意思的一篇文章。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也许最快的学习方式是学习业界成熟的 REST api 设计, 可以看看 github 是如何设计 &lt;a href=&quot;https://developer.github.com/v3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github API&lt;/a&gt; 的, 另外也许你想看看提出 REST 的 &lt;a href=&quot;http://www.ics.uci.edu/~fielding/pubs/webarch_icse2000.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 那篇论文&lt;/a&gt;，TL;DR&lt;/p&gt;
&lt;h2 id=&quot;u8BBE_u8BA1_u539F_u5219&quot;&gt;&lt;a href=&quot;#u8BBE_u8BA1_u539F_u5219&quot; class=&quot;headerlink&quot; title=&quot;设计原则&quot;&gt;&lt;/a&gt;设计原则 &lt;/h2&gt;&lt;p&gt; 本来想写个 REST API 设计指南的，不过阮一峰老师在 14 年已经干了 &lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 这事&lt;/a&gt;，这里我们转载该文章的原则，然后重新修改我们的 api。另外一些好的指南:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bourgeois.me/rest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Some REST best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://codeplanet.io/principles-good-restful-api-design/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Principles of good RESTful API Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u6307_u5BFC_u539F_u5219&quot;&gt;&lt;a href=&quot;#u6307_u5BFC_u539F_u5219&quot; class=&quot;headerlink&quot; title=&quot;指导原则&quot;&gt;&lt;/a&gt;指导原则 &lt;/h2&gt;&lt;h3 id=&quot;u57DF_u540D&quot;&gt;&lt;a href=&quot;#u57DF_u540D&quot; class=&quot;headerlink&quot; title=&quot;域名&quot;&gt;&lt;/a&gt; 域名 &lt;/h3&gt;&lt;p&gt; 应该尽量将 API 部署在专用域名之下, 如:&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果确定 API 很简单，不会有进一步扩展，可以考虑放在主域名下:&lt;br&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;https:&lt;/span&gt;//example&lt;span class=&quot;preprocessor&quot;&gt;.org&lt;/span&gt;/api/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7248_u672C&quot;&gt;&lt;a href=&quot;#u7248_u672C&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本 &lt;/h3&gt;&lt;p&gt; 应该将 API 的版本号放入 URL。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8DEF_u5F84&quot;&gt;&lt;a href=&quot;#u8DEF_u5F84&quot; class=&quot;headerlink&quot; title=&quot;路径&quot;&gt;&lt;/a&gt;路径 &lt;/h3&gt;&lt;p&gt; 在 RESTful 架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的”集合”（collection），所以 API 中的名词也应该使用复数。&lt;br&gt;举例来说，有一个 API 提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/zoos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/animals&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//api.example.com/v1/employees&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTTP_u52A8_u8BCD&quot;&gt;&lt;a href=&quot;#HTTP_u52A8_u8BCD&quot; class=&quot;headerlink&quot; title=&quot;HTTP 动词&quot;&gt;&lt;/a&gt;HTTP 动词 &lt;/h3&gt;&lt;p&gt; 对于资源的具体操作类型，由 HTTP 动词表示。&lt;br&gt;常用的 HTTP 动词有下面五个（括号里是对应的 SQL 命令）：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET（&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;）   ：从服务器取出资源（一项或多项）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST（&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt;）  ：在服务器新建一个资源。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT（&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;）   ：在服务器更新资源（客户端提供改变后的完整资源）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;PATCH&lt;/span&gt;（&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt;） ：在服务器更新资源（客户端提供改变的属性）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;（&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt;）：从服务器删除资源。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一些例子：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET    /zoos   			：列出所有动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST   /zoos   			：新建一个动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET    &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID			：获取某个指定动物园的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT    &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID			：更新某个指定动物园的信息（提供该动物园的全部信息）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATCH  &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID			：更新某个指定动物园的信息（提供该动物园的部分信息）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID			：删除某个动物园&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET    &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID/animals		：列出某个指定动物园的所有动物&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/zoos/&lt;/span&gt;ID&lt;span class=&quot;regexp&quot;&gt;/animals/&lt;/span&gt;ID	：删除某个指定动物园的指定动物&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8FC7_u6EE4_u4FE1_u606F_uFF08Filtering_uFF09&quot;&gt;&lt;a href=&quot;#u8FC7_u6EE4_u4FE1_u606F_uFF08Filtering_uFF09&quot; class=&quot;headerlink&quot; title=&quot;过滤信息（Filtering）&quot;&gt;&lt;/a&gt;过滤信息（Filtering）&lt;/h3&gt;&lt;p&gt;如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。&lt;br&gt;下面是一些常见的参数:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?limit=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;		：指定返回记录的数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?offset=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;		：指定返回记录的开始位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?page=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;amp;per_page=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;	：指定第几页，以及每页的记录数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?sortby=name&amp;amp;order=asc	：指定返回结果按照哪个属性排序，以及排序顺序。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?animal_type_id=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;	：指定筛选条件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参数的设计允许存在冗余，即允许 API 路径和 URL 参数偶尔有重复。比如，&lt;code&gt;GET /zoo/ID/animals&lt;/code&gt; 与 &lt;code&gt;GET /animals?zoo_id=ID&lt;/code&gt; 的含义是相同的。&lt;/p&gt;
&lt;h3 id=&quot;u72B6_u6001_u7801_uFF08Status_Codes_uFF09&quot;&gt;&lt;a href=&quot;#u72B6_u6001_u7801_uFF08Status_Codes_uFF09&quot; class=&quot;headerlink&quot; title=&quot;状态码（Status Codes）&quot;&gt;&lt;/a&gt;状态码（Status Codes）&lt;/h3&gt;&lt;p&gt;服务器向用户返回的状态码和提示信息，常见的有以下一些（方括号中是该状态码对应的 HTTP 动词）:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK - [GET]				：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;201&lt;/span&gt; CREATED - [POST/PUT/PATCH]		：用户新建或修改数据成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;202&lt;/span&gt; Accepted - [*]			：表示一个请求已经进入后台排队（异步任务）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;204&lt;/span&gt; NO CONTENT - [DELETE]		：用户删除数据成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; INVALID REQUEST - [POST/PUT/PATCH]	：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;401&lt;/span&gt; Unauthorized - [*]			：表示用户没有权限（令牌、用户名、密码错误）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;403&lt;/span&gt; Forbidden - [*] 			：表示用户得到授权（与 &lt;span class=&quot;number&quot;&gt;401&lt;/span&gt; 错误相对），但是访问是被禁止的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; NOT FOUND - [*]			：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;406&lt;/span&gt; Not Acceptable - [GET]		：用户请求的格式不可得（比如用户请求 JSON 格式，但是只有 XML 格式）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;410&lt;/span&gt; Gone -[GET]				：用户请求的资源被永久删除，且不会再得到的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;422&lt;/span&gt; Unprocesable entity - [POST/PUT/PATCH] ：当创建一个对象时，发生一个验证错误。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt; INTERNAL SERVER ERROR - [*]		：服务器发生错误，用户将无法判断发出的请求是否成功。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u9519_u8BEF_u5904_u7406_uFF08Error_handling_uFF09&quot;&gt;&lt;a href=&quot;#u9519_u8BEF_u5904_u7406_uFF08Error_handling_uFF09&quot; class=&quot;headerlink&quot; title=&quot;错误处理（Error handling）&quot;&gt;&lt;/a&gt;错误处理（Error handling）&lt;/h3&gt;&lt;p&gt;如果状态码是&lt;code&gt;4xx&lt;/code&gt;，就应该向用户返回出错信息。一般来说，返回的信息中将 error 作为键名，出错信息作为键值即可。&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;error&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;string&quot;&gt;&quot;Invalid API key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8FD4_u56DE_u7ED3_u679C&quot;&gt;&lt;a href=&quot;#u8FD4_u56DE_u7ED3_u679C&quot; class=&quot;headerlink&quot; title=&quot;返回结果&quot;&gt;&lt;/a&gt;返回结果 &lt;/h3&gt;&lt;p&gt; 针对不同操作，服务器向用户返回的结果应该符合以下规范。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET    /collection 		：返回资源对象的列表（数组）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET    &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource 	：返回单个资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST   /collection 		：返回新生成的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PUT    &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource 	：返回完整的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PATCH  &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource 	：返回完整的资源对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE &lt;span class=&quot;regexp&quot;&gt;/collection/&lt;/span&gt;resource 	：返回一个空文档&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hypermedia_API&quot;&gt;&lt;a href=&quot;#Hypermedia_API&quot; class=&quot;headerlink&quot; title=&quot;Hypermedia API&quot;&gt;&lt;/a&gt;Hypermedia API&lt;/h3&gt;&lt;p&gt;RESTful API 最好做到 Hypermedia，即返回结果中提供链接，连向其他 API 方法，使得用户不查文档，也知道下一步应该做什么。&lt;br&gt;比如，当用户向 api.example.com 的根目录发出请求，会得到这样一个文档。&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;link&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;&quot;:   &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;collection https://www.example.com/zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;&quot;:  &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://api.example.com/zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;List of zoos&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;&quot;:  &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;application/vnd.yourformat+json&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码表示，文档中有一个 link 属性，用户读取这个属性就知道下一步该调用什么 API 了。rel 表示这个 API 与当前网址的关系（collection 关系，并给出该 collection 的网址），href 表示 API 的路径，title 表示 API 的标题，type 表示返回类型。&lt;br&gt;Hypermedia API 的设计被称为 HATEOAS。Github 的 API 就是这种设计，访问 api.github.com 会得到一个所有可用 API 的网址列表。&lt;br&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;current_user_url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/user&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;authorizations_url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://api.github.com/authorizations&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面可以看到，如果想获取当前用户的信息，应该去访问 api.github.com/user，然后就得到了下面结果。&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;message&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Requires authentication&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;documentation_url&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://developer.github.com/v3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码表示，服务器给出了提示信息，以及文档的网址。&lt;/p&gt;
&lt;h3 id=&quot;u5176_u4ED6&quot;&gt;&lt;a href=&quot;#u5176_u4ED6&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;API 的身份认证应该使用 OAuth 2.0 框架。&lt;/li&gt;
&lt;li&gt;服务器返回的数据格式，应该尽量使用 JSON，避免使用 XML。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u6848_u4F8B_u4FEE_u6B63&quot;&gt;&lt;a href=&quot;#u6848_u4F8B_u4FEE_u6B63&quot; class=&quot;headerlink&quot; title=&quot;案例修正&quot;&gt;&lt;/a&gt;案例修正 &lt;/h2&gt;&lt;p&gt; 下面我们使用上面的准则进行 api 的整理修改，注意我们目前没有做到 Hypermedia&lt;/p&gt;
&lt;h3 id=&quot;u7528_u6237API__3A_USERS&quot;&gt;&lt;a href=&quot;#u7528_u6237API__3A_USERS&quot; class=&quot;headerlink&quot; title=&quot;用户 API : USERS&quot;&gt;&lt;/a&gt;用户 API : USERS&lt;/h3&gt;&lt;h4 id=&quot;u4FEE_u6539_u524D&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u524D&quot; class=&quot;headerlink&quot; title=&quot;修改前&quot;&gt;&lt;/a&gt;修改前&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/user/:user_id&lt;/code&gt;     GET  获取用户信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/register&lt;/code&gt;     POST 用户注册&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/login&lt;/code&gt;         POST 用户登录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/confirmpw&lt;/code&gt;     POST 确认密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/auth/changepw&lt;/code&gt;     POST 修改密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u8BCA_u65AD&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式，如&lt;code&gt;user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:user_id&lt;/code&gt;和 &lt;code&gt;users&lt;/code&gt; 冗余，使用 &lt;code&gt;:id&lt;/code&gt; 即可&lt;/li&gt;
&lt;li&gt;存在动词如 &lt;code&gt;register&lt;/code&gt;,&lt;code&gt;login&lt;/code&gt; 等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;confirmpw&lt;/code&gt;和 &lt;code&gt;changepw&lt;/code&gt; 冗余, 应该在改变密码的时候对密码进行确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u4FEE_u6539_u540E&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后 &lt;/h4&gt;&lt;p&gt; 由于本项目的用户数据从后台导入，因此删除 register 功能，另外因为此项目为隐私项目进行授权后所有的请求需要附带 token，这里省略 access_token 参数。&lt;br&gt;这里省略 &lt;code&gt;/api/v1&lt;/code&gt; 的前缀:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/authentication&lt;/code&gt; GET 验证用户名密码，并重新生成 token，返回基本的用户信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/users/changePassword&lt;/code&gt; POST 重置用户密码，重新生成盐值和 hash 存储到数据库中，返回修改后的用户基本信息(这个暂时不知道怎么改, 是使用 users UPDATE 方法，或者将改变密码变成一个名词的服务)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/users/details&lt;/code&gt; GET 获取用户详细信息，如最近的主题以及最近的回复&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u5E16_u5B50API__3A_POSTS&quot;&gt;&lt;a href=&quot;#u5E16_u5B50API__3A_POSTS&quot; class=&quot;headerlink&quot; title=&quot;帖子 API : POSTS&quot;&gt;&lt;/a&gt;帖子 API : POSTS&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/recent&lt;/code&gt;                     GET    获取最近帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/posts?limit=xx&amp;amp;page=xx&lt;/code&gt;     GET    获取帖子列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:post_id&lt;/code&gt;             GET    获取某个帖子内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post&lt;/code&gt;                     POST   新建一个帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:post_id/likes&lt;/code&gt;     POST   为某个帖子点赞&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:id&lt;/code&gt;                 PUT    更新某个帖子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/post/:id&lt;/code&gt;                 DELETE 删除某个帖子&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u8BCA_u65AD-1&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD-1&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式&lt;/li&gt;
&lt;li&gt;post_id 冗余&lt;/li&gt;
&lt;li&gt;recent 的 api 和获取帖子列表冗余，设置 limit 为某值,page 为 1 即可获得最近的帖子&lt;/li&gt;
&lt;li&gt;点赞功能并不在需求里，这里删除掉&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u4FEE_u6539_u540E-1&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E-1&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/posts?limit=xx&amp;amp;page=xx&lt;/code&gt; GET    获取帖子列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts/:id&lt;/code&gt;                 GET    获取某个帖子的具体内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts&lt;/code&gt;                    POST   创建帖子，返回帖子基本内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/posts/:id&lt;/code&gt;                 DELETE 删除帖子，返回空文档。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u56DE_u590DAPI__uFF1A_REPLYS&quot;&gt;&lt;a href=&quot;#u56DE_u590DAPI__uFF1A_REPLYS&quot; class=&quot;headerlink&quot; title=&quot;回复 API ： REPLYS&quot;&gt;&lt;/a&gt;回复 API ： REPLYS&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/v1/reply&lt;/code&gt;             POST   创建一个回复&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/v1/reply/:reply_id&lt;/code&gt; DELETE 删除某个回复&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u8BCA_u65AD-2&quot;&gt;&lt;a href=&quot;#u8BCA_u65AD-2&quot; class=&quot;headerlink&quot; title=&quot;诊断&quot;&gt;&lt;/a&gt;诊断&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;资源没有使用复数形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reply_id&lt;/code&gt;冗余&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u4FEE_u6539_u540E-2&quot;&gt;&lt;a href=&quot;#u4FEE_u6539_u540E-2&quot; class=&quot;headerlink&quot; title=&quot;修改后&quot;&gt;&lt;/a&gt;修改后&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;replys&lt;/code&gt;         POST   创建一个回复，返回该回复(这里应该增加帖子的回复数目)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replys/:id&lt;/code&gt;     DELETE 删除某个回复, 返回空文档(这里应该减少帖子的回复数目)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前写Restful的服务器端API，写的不好，痛定思痛，决心好好搞懂Restful。&lt;br&gt;在这一篇中我们首先搞懂Rest的含义，然后以我编写的失败的api为例，讲解如何编写出符合Rest风格的API。注意本篇指导原则一节大部分来自阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api.html&quot;&gt;RESTful API 设计指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="web" scheme="http://nap-blog.artemisprojects.org/categories/web/"/>
    
    
      <category term="restful" scheme="http://nap-blog.artemisprojects.org/tags/restful/"/>
    
  </entry>
  
  <entry>
    <title>east 数据质量合规分析（一）</title>
    <link href="http://nap-blog.artemisprojects.org/2015/10/23/east-1/"/>
    <id>http://nap-blog.artemisprojects.org/2015/10/23/east-1/</id>
    <published>2015-10-23T11:04:22.000Z</published>
    <updated>2016-04-06T03:06:29.906Z</updated>
    
    <content type="html">&lt;p&gt;关于第一次讨论 east 数据质量合规分析的记录&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景 &lt;/h2&gt;&lt;p&gt; 中国银监会会检查各银行的存、贷款数据是否合规，于是银行自己要先检查一遍。银行外包给某 K 公司，某 K 公司根据中国银监会监管数据标准化数据结构建立了一个数据库，称为 MODEL 库，共 79 张表。某 K 定时从银行的数据库（称为 ODS）抽取、合并、筛选得到 MODEL 库，在 MODEL 库的基础上做数据质量合规分析。&lt;/p&gt;
&lt;h2 id=&quot;u5408_u89C4_u6821_u9A8C_u6A21_u578B_u4F8B_u4E3E&quot;&gt;&lt;a href=&quot;#u5408_u89C4_u6821_u9A8C_u6A21_u578B_u4F8B_u4E3E&quot; class=&quot;headerlink&quot; title=&quot;合规校验模型例举&quot;&gt;&lt;/a&gt;合规校验模型例举 &lt;/h2&gt;&lt;p&gt; 总共有 30 多个模型，每个模型是对一类情况的分析，目前就是一条 select 语句，这里例举四个：&lt;/p&gt;
&lt;h3 id=&quot;u6A21_u578B1_uFF08_u7B80_u5355_u7684_uFF09&quot;&gt;&lt;a href=&quot;#u6A21_u578B1_uFF08_u7B80_u5355_u7684_uFF09&quot; class=&quot;headerlink&quot; title=&quot;模型 1（简单的）&quot;&gt;&lt;/a&gt;模型 1（简单的）&lt;/h3&gt;&lt;p&gt;模型名称：发生欠息五级分类仍为正常 &lt;br&gt; 模型简介：对检查期内银行所发放贷款进行筛选，发生欠息的是否采取了相应地五级分类调整。比如检查 20120101-20121231 时间段内的基本步骤如下：&lt;br&gt;（1）选取对公（或个人）信贷业务借据表，设置过滤条件：表内欠息余额大于 0，或表外欠息余额大于 0，生成结果集 1；&lt;br&gt;（2）对结果集 1 设置过滤条件：贷款五级分类 = 正常，生成结果集 2；&lt;br&gt;（3）对结果集 2 设置过滤条件：借款余额大于 0 或贷款实际发放日期大于等于 20120101，且贷款原始到期日期小于等于 20121231，生成结果集 3。&lt;br&gt;sql 语句：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; ANALYSIS_00410 DGXDYWJJ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; (DGXDYWJJ.BNQXYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; DGXDYWJJ.BWQXYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGXDYWJJ.DKWJFL = &lt;span class=&quot;string&quot;&gt;&#39;正常&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (DGXDYWJJ.JKYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       DGXDYWJJ.DKSJFFRQ &amp;gt;= &lt;span class=&quot;string&quot;&gt;&#39;20120101&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGXDYWJJ.DKYSDQRQ &amp;lt;= &lt;span class=&quot;string&quot;&gt;&#39;20121231&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; ANALYSIS_00409 GRXDYWJJ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; (GRXDYWJJ.BNQXYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; GRXDYWJJ.BWQXYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; GRXDYWJJ.DKWJFL = &lt;span class=&quot;string&quot;&gt;&#39;正常&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (GRXDYWJJ.JKYE &amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       GRXDYWJJ.DKSJFFRQ &amp;gt;= &lt;span class=&quot;string&quot;&gt;&#39;20120101&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; GRXDYWJJ.DKYSDQRQ &amp;lt;= &lt;span class=&quot;string&quot;&gt;&#39;20121231&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u6A21_u578B2&quot;&gt;&lt;a href=&quot;#u6A21_u578B2&quot; class=&quot;headerlink&quot; title=&quot;模型 2&quot;&gt;&lt;/a&gt;模型 2&lt;/h3&gt;&lt;p&gt;模型名称：贷款资金回流至担保人 &lt;br&gt; 模型简介：在房地产行业持续调控的背景下，不少房地产企业资金紧张无法获得银行信贷资金，转而为借款人（实践中往往是有关联关系的企业）提供担保，待借款人获得信贷资金后再回流至担保人 &lt;br&gt; 银监会给出的基本步骤：&lt;br&gt;（1）选取客户基本信息表，设置筛选条件：客户名称包含“房地产”“土地”“置业”，仅选择客户代码和客户名称字段，生成结果集 1；&lt;br&gt;（2）将结果集 1 与担保关系表进行关联，关联条件为：客户代码 = 保证人客户统一编号，设置过滤条件：担保到期日期大于等于 20120101，生成结果集 2；&lt;br&gt;（3）将结果集 2 与对公信贷业务借据表进行关联，关联条件为：被担保合同号 = 信贷合同号，设置过滤条件：借款余额大于 0，保证人客户统一编号不等于客户统一编号，生成结果集 3；&lt;br&gt;（4）将结果集 3 与对公客户表进行关联，关联条件为：客户统一编号（借款人）= 客户统一编号，生成结果集 4；&lt;br&gt;（5）将结果集 4 与对公信贷分户账进行关联，关联条件为：信贷借据号相等，找到贷款入账账号，生成结果集 5；&lt;br&gt;（6）将结果集 5 与对公活期存款分户账明细记录进行关联，关联条件：贷款入账账号 = 活期存款账号，设置过滤条件：贷款发放后三日内流水记录，按照“保证人客户统一编号、核心交易日期、笔次序号”进行升序排序，生成结果集 6；&lt;br&gt;（7）对结果集 6 设置过滤条件：交易金额 / 贷款金额介于 0.2-1.25 之间，借贷标志为“借”，生成结果集 7；&lt;br&gt;（8）对结果集 7 设置过滤条件：对方户名 = 客户名称（保证人），生成结果集 8。&lt;br&gt;sql：(设置参数，指定日期)&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DGHQCKFHZMXJL.*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; ANALYSIS_00410 DGXDYWJJ, ANALYSIS_00209 DGHQCKFHZMXJL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGXDYWJJ.JKYE &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGXDYWJJ.KHTYBH &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DBGX.BZRKHTYBH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; ANALYSIS_00303 DGKH, ANALYSIS_00412 DBGX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGKH.KHTYBH = DBGX.BZRKHTYBH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DBGX.DBDQRQ &amp;gt;= ‘指定日期’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 房地产 %&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 土地 %&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 置业 %&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGXDYWJJ.DKRZZH = DGHQCKFHZMXJL.HQCKZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;TO_DATE&lt;/span&gt;(DGHQCKFHZMXJL.HXJYRQ, &lt;span class=&quot;string&quot;&gt;&#39;yyyymmdd&#39;&lt;/span&gt;) -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;TO_DATE&lt;/span&gt;(DGXDYWJJ.DKSJFFRQ, &lt;span class=&quot;string&quot;&gt;&#39;yyyymmdd&#39;&lt;/span&gt;) &amp;lt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.JDBZ = &lt;span class=&quot;string&quot;&gt;&#39;借&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.JYJE / DGXDYWJJ.JKJE &amp;gt; &lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.JYJE / DGXDYWJJ.JKJE &amp;lt; &lt;span class=&quot;number&quot;&gt;1.25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.DFHM =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DGKH.KHMC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; ANALYSIS_00303 DGKH, ANALYSIS_00412 DBGX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGKH.KHTYBH = DBGX.BZRKHTYBH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DBGX.DBDQRQ &amp;gt;= ‘指定日期’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 房地产 %&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 土地 %&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; DGKH.KHMC &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;% 置业 %&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u6A21_u578B3&quot;&gt;&lt;a href=&quot;#u6A21_u578B3&quot; class=&quot;headerlink&quot; title=&quot;模型 3&quot;&gt;&lt;/a&gt;模型 3&lt;/h3&gt;&lt;p&gt;模型名称：突击放贷”冲时点”&lt;br&gt;模型简介：检查银行是否为完成考核任务，在月（季）末突击放贷做大规模 &lt;br&gt; 算法：&lt;br&gt;1. 从对公活期存款分户账明细记录中找出在指定日期内的活期存款账号，形成结果集 1&lt;br&gt;2. 从对公贷款分户账中过滤出在结果集 1 中的贷款入账账号，形成结果集 2&lt;br&gt;3. 将结果集 2 中的贷款入账账号在对公信贷账和对公活期存款明细记录中查询，选出 &lt;br&gt; 对公活期存款明细记录. 对方账号 = 对公信贷分户账. 还款账号的贷款入账账号&lt;br&gt;4. 输入上述账号的对公信贷分户账明细记录，人工判断&lt;br&gt;sql 语句：（设置参数：指定日期）&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; T_KJ_DGXFZMX DGXDFHZMX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGXDFHZMX.DKZH &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DGXDFHZ.DKRZZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; T_KJ_DGXFZ DGXDFHZ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               T_KJ_DGHCFZMX DGHQCKFHZMXJL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DGXDFHZ.DKRZZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; T_KJ_DGXFZ DGXDFHZ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGXDFHZ.KHRQ &lt;span class=&quot;keyword&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;0&amp;#125;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;1&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; DGXDFHZ.DKRZZH &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; DGHQCKFHZMXJL.HQCKZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; T_KJ_DGHCFZMX DGHQCKFHZMXJL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGHQCKFHZMXJL.HXJYRQ &lt;span class=&quot;keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;0&amp;#125;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;1&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; DGHQCKFHZMXJL.HQCKZH)) T1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; DGXDFHZ.DKRZZH = T1.DKRZZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.HQCKZH = T1.DKRZZH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; DGHQCKFHZMXJL.DFZH = DGXDFHZ.HKZH)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6A21_u578B4&quot;&gt;&lt;a href=&quot;#u6A21_u578B4&quot; class=&quot;headerlink&quot; title=&quot;模型 4&quot;&gt;&lt;/a&gt;模型 4&lt;/h3&gt;&lt;p&gt;模型名称：内部员工用本人身份证号开立账户 &lt;br&gt; 算法：1. 通过工号，身份证号，客户统一编号关联员工表，柜员表，个人基础信息表，个人活期存款分户账明细记录，个人定期存款分户账明细记录。&lt;br&gt;      2. 筛选条件工号等于柜员号 &lt;br&gt; 输出字段：客户统一编号，证件号码，工号，姓名，身份证号，员工状态，柜员号，活期存款账号，交易类型，交易柜员号，定期存款账号&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT GRJCXX&lt;span class=&quot;class&quot;&gt;.KHTYBH&lt;/span&gt;, GRJCXX&lt;span class=&quot;class&quot;&gt;.ZJHM&lt;/span&gt;, YGB&lt;span class=&quot;class&quot;&gt;.GH&lt;/span&gt;, YGB&lt;span class=&quot;class&quot;&gt;.XM&lt;/span&gt;, YGB&lt;span class=&quot;class&quot;&gt;.SFZH&lt;/span&gt;, YGB&lt;span class=&quot;class&quot;&gt;.YGZT&lt;/span&gt;, GYB&lt;span class=&quot;class&quot;&gt;.GYH&lt;/span&gt;, GRHQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.HQCKZH&lt;/span&gt;, GRHQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.JYLX&lt;/span&gt;, GRHQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.JYGYH&lt;/span&gt;, GRDQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.DQCKZH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FROM ANALYSIS_00102 YGB, ANALYSIS_00103 GYB, ANALYSIS_00301 GRJCXX, ANALYSIS_00205 GRHQCKFHZMXJL, ANALYSIS_00207 GRDQCKFHZMXJL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WHERE YGB.GH= GYB&lt;span class=&quot;class&quot;&gt;.GH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AND YGB.SFZH=GRJCXX&lt;span class=&quot;class&quot;&gt;.ZJHM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AND GRJCXX.KHTYBH=GRHQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.KHTYBH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AND GRHQCKFHZMXJL.KHTYBH=GRDQCKFHZMXJL&lt;span class=&quot;class&quot;&gt;.KHTYBH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AND YGB.GH= GYB.GYH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;模型说明：这里只是筛选出数据，这个模型本身并不违法，但是可以进一步挖掘，看有没有做洗钱等非法的事情。&lt;/p&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结 &lt;/h2&gt;&lt;p&gt; 模型理解起来应该不难，基本都是一条 select 语句，关键是理解业务逻辑和有关银行知识，比如很多都是对资金流向的检查，这就要对相关知识比较熟悉。技术方面，sql 可以优化，有的结果集可以用 R 做进一步的数据挖掘。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于第一次讨论east数据质量合规分析的记录&lt;/p&gt;
    
    </summary>
    
      <category term="east" scheme="http://nap-blog.artemisprojects.org/categories/east/"/>
    
    
      <category term="east" scheme="http://nap-blog.artemisprojects.org/tags/east/"/>
    
  </entry>
  
  <entry>
    <title>我们的书架</title>
    <link href="http://nap-blog.artemisprojects.org/2015/10/21/books/"/>
    <id>http://nap-blog.artemisprojects.org/2015/10/21/books/</id>
    <published>2015-10-20T16:00:00.000Z</published>
    <updated>2016-04-06T03:06:29.906Z</updated>
    
    <content type="html">&lt;p&gt; 汇总大家共享的书籍，欢迎组员之间互相借阅。&lt;br&gt;2016-1-18 更新。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jd.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 京东 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 亚马逊 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.china-pub.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 互动出版 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.taobao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 淘宝 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.allitebooks.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 电子书 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.salttiger.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 电子书 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; 序号 &lt;/th&gt;
&lt;th&gt; 书名 &lt;/th&gt;
&lt;th&gt; 保管者 &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt; 精通 AngularJS&lt;/td&gt;
&lt;td&gt;Tianchi Liu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;Go Web 编程 &lt;/td&gt;
&lt;td&gt;Tianchi Liu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;Spring batch 批处理框架 &lt;/td&gt;
&lt;td&gt;Weiyi WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;Python 绝技 &lt;/td&gt;
&lt;td&gt;Weiyi WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;C# WinForm 实践开发教程 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;Java 编程思想 第 4 版 &lt;/td&gt;
&lt;td&gt;Weiyi WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt; 算法 第 4 版 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt; 程序员修炼之道：从小工到专家 &lt;/td&gt;
&lt;td&gt;Yiqun WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;Docker 进阶与实战 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;Java 核心技术 第 1 卷 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt; 深入理解 jvm 虚拟机 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt; 构建高可用 Linux 服务器 &lt;/td&gt;
&lt;td&gt;Zhongliang YUAN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;R 语言与数据挖掘最佳实践和经典案例 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;Kubernetes 权威指南 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;24 小时 365 天不间断服务: 服务器 / 基础设施核心技术 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt; 日志管理与分析权威指南 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt; 实战 Elasticsearch、Logstash、Kibana&lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt; 微服务架构与实践 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt; 高效团队开发: 工具与方法 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt; 网站运维技术与实践 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;Flume 日志收集与 MapReduce 模式 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;R 与 Hadoop 大数据分析实战 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;CoreOS 实践之路 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt; 改善 Python 程序的 91 个建议 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt; 云计算网络珠玑 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt; 云数据中心网络技术 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt; 深入浅出 Neutron&lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;OpenStack 云计算实战手册 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;OpenStack 实战指南 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;Hadoop 实战 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;HBase 权威指南 &lt;/td&gt;
&lt;td&gt;Wiyi WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt; 从 Paxos 到 Zookeeper 分布式一致性原理 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt; 软件定义数据中心 - 技术与实践 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;R 语言实践 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt; 重构：改善既有代码的设计 &lt;/td&gt;
&lt;td&gt;Yiqun WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt; 代码大全 &lt;/td&gt;
&lt;td&gt;Yiqun WANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;MEAN Web 开发 &lt;/td&gt;
&lt;td&gt;Ziling LU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;Node.js+MongoDB+AngularJS Web 开发 &lt;/td&gt;
&lt;td&gt;Ziling LU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt; 深入浅出 Node.js&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt; 简约至上: 交互式设计四策略 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt; 点石成金: 访客至上的 Web 和移动可用性设计秘笈 (第 3 版)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;JavaScript 语言精粹 (修订版)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;JavaScript DOM 编程艺术 (第 2 版)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt; 用 AngularJS 开发下一代 Web 应用 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;Head First HTML 与 CSS（第二版）&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt; 编程珠玑 (第 2 版·修订版)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;C 语言接口与实现 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;Hadoop 2.0-YARN 核心技术实践 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt; 深入解析 YARN 架构设计与实现原理 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;Open Stack 设计与实现×2&lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt; 学术研究：你的成功之道 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Python 自动化运维：技术与最佳实践 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Docker 源码分析 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt; 从 0 到 1：开启商业与未来的秘密 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt; 重来 (更为简单有效的商业思维)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt; 算法 (第 4 版)&lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;JavaScript 高级程序设计 &lt;/td&gt;
&lt;td&gt;Chenglin MENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Python Cookbook 中文 第 3 版 &lt;/td&gt;
&lt;td&gt;Shuo CHENG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Mesos：大数据资源调度与大规模容器运行最佳实践 &lt;/td&gt;
&lt;td&gt;Xiang XU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Docker 开发实践 &lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;em&gt;*Docker —— 容器与容器云 &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Ying ZHANG&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;汇总大家共享的书籍，欢迎组员之间互相借阅。&lt;br&gt;2016-1-18更新。&lt;/p&gt;
    
    </summary>
    
      <category term="未分类" scheme="http://nap-blog.artemisprojects.org/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
</feed>
